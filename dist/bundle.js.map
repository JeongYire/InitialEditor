{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/EventEmitter.js","webpack:///./js/Component.js","webpack:///./js/MenuComponent.js","webpack:///./js/tilesetMarker.js","webpack:///./js/Tilemap.js","webpack:///./js/camelCase.js","webpack:///./js/config.js","webpack:///./js/TilesetCanvas.js","webpack:///./js/TileMarker.js","webpack:///./js/models/Model.js","webpack:///./js/models/GamePropertiesWindow.js","webpack:///./js/controllers/BaseController.js","webpack:///./js/controllers/GamePropertiesWindowController.js","webpack:///./js/models/TilesetWindow.js","webpack:///./js/controllers/TilesetWindowController.js","webpack:///./js/WindowCreator.js","webpack:///./js/MenuService.js","webpack:///./js/Rectangle.js","webpack:///./js/App.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","EventEmitter","this","_events","lsn","push","args","forEach","func","Component","initMembers","start","_isActiveEvent","_isMenuOpen","$","draggable","snap","resizable","containment","rect","getBoundingClientRect","_originalPos","x","y","prop","target","mouse","is","parentNode","className","buttons","leftFire","hideMenu","_config","_tileWidth","TILE_WIDTH","_tileHeight","TILE_HEIGHT","_isReady","initWithElement","active","parent","child","document","querySelector","removeChild","_element","css","append","_isDraw","_isClicked","_blockSize","BlockSize","setParent","touches","offset","top","img","mapCols","Math","floor","width","tilesetWidth","tilesetHeight","height","tw","th","nx","ny","targetX","targetY","position","left","console","log","window","app","setTileId","_x","_y","_width","_height","_parent","_tileset","_mapCols","MAP_COLS","_mapRows","MAP_ROWS","_tileId","_mouseX","_mouseY","_currentLayer","_autoTileIndexedList","_autoTileTextureList","_tileType","_mapWidth","round","SCREEN_WIDTH","_mapHeight","SCREEN_HEIGHT","_layerCount","LAYERS","_data","localStorage","getItem","Array","tilesetImg","Error","test","navigator","userAgent","_penType","on","maxZ","maxWidth","maxHeight","z","set","tileId","min","max","id","layerId","option","resolution","devicePixelRatio","view","autoDensity","transparent","innerHeight","innerWidth","_app","PIXI","Application","_layerContainer","Container","interactive","onMouseMove","stage","addChild","_tilesets","Texture","from","initWithDrawingType","ev","takeScreenshot","stopPropagation","renderer","extract","canvas","toBlob","b","a","createElement","body","download","href","URL","createObjectURL","onclick","preventDefault","click","remove","data","global","tilesets","isArray","length","dx","dy","texture","crop","Rectangle","baseTexture","mx","my","mapX","mapY","mask","getData","e","tileID","setData","_dirty","sx","sy","ex","ey","indexOf","penType","drawTile","drawRect","draw","children","removeChildren","cropTexture","visible","currentLayer","filter","layer","alpha","clear","mapWidth","mapHeight","container","sprite","Sprite","getTileCropTexture","toCamelCase","nodes","split","nodesTail","slice","concat","map","toUpperCase","getClassName","str","config","TRANSPARENT_COLOR_GROUP","TILESET_IMGAGES","TilesetCanvas","_tilesetImgages","loadTilesets","count","Promise","resolve","reject","elem","attr","createCanvas","canvasWidth","canvasHeight","_canvas","prepend","_context","getContext","ctx","acc","maxH","naturalWidth","naturalHeight","setTransform","imageSmoothingEnabled","drawImage","Model","parentId","zIndex","path","display","initWithCanvas","_isValid","_uniqueId","hide","match","show","fadeOut","GetInstance","cache","xhr","XMLHttpRequest","url","location","lastIndexOf","open","onload","status","responseText","onerror","send","load","then","result","html","catch","err","warn","self","addEventHandlers","super","onLoad","inp","find","gameName","val","gameFolder","author","alert","JSON","stringify","onClick","eq","onOkButton","opacity","onOk","onCancel","parseInt","ajax","type","contentType","processData","FormData","success","msg","error","_gamePropertiesWindow","render","ret","setUniqueId","_tilesetWindow","creator","Instance","menu","file","action","createGamePropertiesWindow","edit","scale","tools","createWithTilesetWindow","game","help","size","_menuComponent","_isClickedMenu","changeMenuLocaleAsPersonalize","changeToolbarIconOnMobileDevice","addMenuEventHandlers","langCode","language","each","index","res","font","text","_index","_elem","_node","menuNode","_type","_res","_name","childNodes","nodeType","textContent","matchMedia","matches","addClass","resizeConfig","removeClass","EMPTY","_mouse","screenX","screenY","_blockRect","isDrawing","_now","performance","now","title","emit","_components","_menu","_tilesetCanvas","_tilesetMarker","_tilemap","_tileMarker","component","layerX","layerY","events","isMobileDevice","touchEvent","clientX","clientY","button","k","addEventListener","includes","currentTarget","tilemap","hasClass","toggleLayerVisibility","not","setCurrentLayerId","updateAlphaLayers","trigger","initWithMouseEvent","initWithComponents","initWithMapLayers","deltaTime","updateComponents","update","isMenuOpen","Main","async","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","class EventEmitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n\r\n    on(name, lsn) {\r\n        if(!this._events[name]) {\r\n            this._events[name] = [];\r\n        }\r\n\r\n        this._events[name].push(lsn);\r\n\r\n        return this;\r\n    }\r\n\r\n    emit(name, ...args) {\r\n        if(!this._events[name]) {\r\n            this._events[name] = [];\r\n        }\r\n\r\n        this._events[name].forEach(func => {\r\n            if(typeof(func) === \"func\") {\r\n                func(...args);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport {EventEmitter};","class Component {\r\n    constructor(...args) {\r\n        this.initMembers(...args);\r\n        this.start(...args);\r\n    }\r\n\r\n    initMembers(...args) {\r\n        this._isActiveEvent = false;\r\n    }\r\n\r\n    active() {\r\n        this._isActiveEvent = true;\r\n    }\r\n    \r\n    deactive() {\r\n        this._isActiveEvent = false;\r\n    }\r\n\r\n    isActiveEvent() {\r\n        return this._isActiveEvent;\r\n    }\r\n\r\n    start(...args) {\r\n        return this;\r\n    }\r\n\r\n    update(...args) {\r\n\r\n    }\r\n}\r\n\r\nclass BasicComponent extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n    }\r\n}\r\n\r\nexport { Component, BasicComponent };","import {Component} from \"./Component.js\";\r\n\r\nclass MenuComponent extends Component {\r\n    start() {\r\n        this._isMenuOpen = false;\r\n        $(\".toolbar\").draggable({ snap: \".menu\" });\r\n        $(\".aside__tabs\").resizable({\r\n            containment: \"#aside\"\r\n        });\r\n\r\n        const rect = $(\".toolbar\").get(0).getBoundingClientRect();\r\n        this._originalPos = {\r\n            x: rect.x,\r\n            y: rect.y\r\n        };\r\n    }\r\n\r\n    isMenuOpen() {\r\n        return this._isMenuOpen;\r\n    }\r\n\r\n    hideMenu() {\r\n        $(\"#none\").prop(\"checked\", true);\r\n        this._isMenuOpen = false;      \r\n    }\r\n\r\n    update(target, mouse) {\r\n        if($(\".toolbar\").is('.ui-draggable-dragging')) {\r\n            const rect = $(\".toolbar\").get(0).getBoundingClientRect();\r\n        }\r\n\r\n        // 최상위 노드를 선택합니다.\r\n        let parentNode = target.parentNode;\r\n        while(parentNode != null && parentNode.className != \"menu__main\") {\r\n            parentNode = parentNode.parentNode;\r\n        }\r\n\r\n        const isSomeMenuOpened = $(\"ul[class*='sub']\").is(\":visible\");\r\n\r\n        // 최상위 노드가 메인 메뉴라면\r\n        if(parentNode && parentNode.className === \"menu__main\") {\r\n            // 메뉴가 열린 것으로 간주\r\n            this._isMenuOpen = true;\r\n        } else {\r\n            if(this._isMenuOpen && mouse.buttons.leftFire) {\r\n                this.hideMenu();\r\n            }                                              \r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport {MenuComponent};","import {Component} from \"./Component.js\";\r\n\r\n/**\r\n * @class TilesetMarker\r\n */\r\nclass TilesetMarker extends Component {\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._tileWidth = this._config.TILE_WIDTH;\r\n        this._tileHeight = this._config.TILE_HEIGHT;\r\n        this._isReady = false;\r\n        \r\n        this.initWithElement();\r\n        this.active();\r\n    }\r\n\r\n    initWithElement() {\r\n        const parent = $(\"#view\");\r\n        let child = null;\r\n        if((child = document.querySelector(\"#tileset-marker\"))) {\r\n            parent.get(0).removeChild(child);\r\n            return;\r\n        }\r\n\r\n        this._element = $(\"<div></div>\", {\"id\" : \"tileset-marker\"})\r\n            .css({\r\n                \"min-width\": `${this._tileWidth}px`,\r\n                \"min-height\": `${this._tileHeight}px`,\r\n                \"width\": `${this._tileWidth}px`,\r\n                \"height\": `${this._tileHeight}px`,\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"margin\": \"0\",\r\n                \"padding\": \"0\",\r\n                \"border\": \"2px dotted white\",\r\n                \"z-index\": \"50\",\r\n                \"box-sizing\": \"border-box\",\r\n            });\r\n\r\n        this._isReady = true;\r\n        \r\n        parent.append(this._element);\r\n\r\n        this._isDraw = false;\r\n        this._isClicked = false;\r\n        this._blockSize = new BlockSize(0, 0, this._tileWidth, this._tileHeight);\r\n        this._blockSize.setParent(this._element);\r\n\r\n        this.touches = [\r\n            {x: 0, y: 0},\r\n            {x: 0, y: 0},\r\n        ]\r\n\r\n        const topY = $(\"#view\").offset().top;\r\n\r\n        // TODO: 마우스 좌표가 잘못되어있음 (수정 요망) => 수정 불가능\r\n        // $(\"#view canvas\")\r\n        //     .on(\"mousedown\", (ev) => {\r\n        //         this._isDraw = true;\r\n        //         this._isClicked = true;\r\n\r\n        //         this.touches[0].x = ev.clientX;\r\n        //         this.touches[0].y = ev.clientY - topY;\r\n\r\n        //         this._blockSize.width = this._tileWidth;\r\n        //         this._blockSize.height = this._tileHeight - topY;\r\n\r\n        //         this._blockSize.refresh();\r\n        //     })\r\n        //     .on(\"mousemove\", (ev) => {\r\n        //         if(this._isClicked) {\r\n        //             this._isDraw = true;\r\n        //             this._blockSize._x = this.touches[0].x;\r\n        //             this._blockSize._y = this.touches[0].y - topY;\r\n        //             this._blockSize.width = ev.clientX - $(\"#view canvas\").offset().left;\r\n        //             this._blockSize.height = (ev.clientY - topY) - ($(\"#view canvas\").offset().top);\r\n        //             this._blockSize.refresh();\r\n        //             this.touches[1].x = ev.clientX;\r\n        //             this.touches[1].y = ev.clientY;                    \r\n        //         }\r\n        //     })\r\n        //     .on(\"mouseup\", (ev) => {\r\n        //         this._isDraw = false;\r\n        //         this._isClicked = false;\r\n        //         this._blockSize._x = this.touches[0].x;\r\n        //         this._blockSize._y = this.touches[0].y;\r\n        //         this._blockSize.width = ev.clientX - $(\"#view canvas\").offset().left;\r\n        //         this._blockSize.height = (ev.clientY - topY) - $(\"#view canvas\").offset().top;\r\n        //         this.touches[1].x = ev.clientX;\r\n        //         this.touches[1].y = ev.clientY;   \r\n        //         this._blockSize.refresh();                                 \r\n        //     });\r\n    }\r\n\r\n    start() {\r\n        \r\n    }\r\n\r\n    update(...args) {\r\n        if(!this._isReady) {\r\n            return;\r\n        }\r\n\r\n        const target = args[0].target;\r\n\r\n        const img = $(\"#view canvas\");\r\n        const mapCols = Math.floor(img.width() / this._config.TILE_WIDTH);\r\n        const tilesetWidth = img.width();\r\n        const tilesetHeight = img.height();\r\n        const topY = 0;\r\n\r\n        const mouse = args[0];\r\n\r\n        const tw = this._tileWidth;\r\n        const th = this._tileHeight;\r\n        let nx = Math.floor(mouse.x / tw) * tw;\r\n        let ny = Math.floor(mouse.y / th) * th;\r\n\r\n        const targetX = nx / tw;\r\n        const targetY = (ny - topY) / th;\r\n\r\n        if(nx < 0) {\r\n            nx = 0;\r\n        }\r\n        if(nx > tilesetWidth - tw) {\r\n            nx = tilesetWidth - tw;\r\n        }\r\n        if(ny < 0) {\r\n            ny = 0;\r\n        }\r\n        if(ny > tilesetHeight) {\r\n            ny = tilesetHeight - th + topY;\r\n        }\r\n\r\n        this._element.css({\r\n            position : \"absolute\",\r\n            left : nx + \"px\",\r\n            top : ny - topY + \"px\",\r\n        });\r\n\r\n        // if(args[0].button == 0) {\r\n        //     $(\"#view\").trigger(\"mousedown:marker\", [left, top]);\r\n        // } else {\r\n        //     $(\"#view\").trigger(\"mouseup:marker\", [left, top]);\r\n        // }\r\n\r\n        console.log(\"타일 ID : \" + (targetY * mapCols + targetX));\r\n\r\n        window.app.setTileId((targetY * mapCols + targetX));\r\n    }\r\n\r\n}\r\n\r\nclass BlockSize {\r\n    constructor(x, y, width, height) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n        this._parent = null;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    setParent(parent) {\r\n        this._parent = parent;\r\n    }\r\n\r\n    refresh() {\r\n        this._parent.css({\r\n            width: this.width,\r\n            height: this.height,\r\n            left: this._x,\r\n            top: this._y,\r\n            position: \"absolute\"\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {TilesetMarker};","// import pixi from \"../libs/pixi.js\";\r\n// //@ts-check\r\nimport {\r\n    Component\r\n} from \"./Component.js\";\r\n\r\nexport default class Tilemap extends Component {\r\n\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._tileset = $(\"#view canvas\").get(0);\r\n        this._tileWidth = this._config.TILE_WIDTH;\r\n        this._tileHeight = this._config.TILE_HEIGHT;\r\n        this._mapCols = this._config.MAP_COLS;\r\n        this._mapRows = this._config.MAP_ROWS;\r\n        this._tileId = 0;\r\n        this._mouseX = 0;\r\n        this._mouseY = 0;\r\n        this._currentLayer = 0;\r\n        this._autoTileIndexedList = [];\r\n        this._autoTileTextureList = {};\r\n        \r\n        // 1이면 오토타일, 0이면 일반 타일\r\n        this._tileType = 0;\r\n\r\n        this._mapWidth = Math.round(this._config.SCREEN_WIDTH / this._tileWidth);\r\n        this._mapHeight = Math.round(this._config.SCREEN_HEIGHT / this._tileHeight);\r\n        this._layerCount = this._config.LAYERS;\r\n\r\n        if(!(this._data = localStorage.getItem(\"tileMapData\"))) {\r\n            this._data = new Array(this._mapWidth * this._mapHeight * this._config.LAYERS);\r\n        }\r\n        \r\n        const tilesetImg = $(\"#view canvas\").get(0);\r\n        if(!tilesetImg) {\r\n            throw new Error(\"Cant't find tileset\");\r\n        }\r\n        \r\n        this._mapCols = Math.floor((tilesetImg.width) / this._tileWidth);\r\n        this._mapRows = Math.floor((tilesetImg.width) / this._tileWidth);    \r\n        \r\n        this.active();\r\n    }\r\n\r\n    isMobileDevice() {\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    initWithDrawingType() {\r\n        this._penType = 0;\r\n        $(\"#pen-tool\").on(\"click\", () => {\r\n            this._penType = 0;\r\n            console.log(\"펜\");\r\n        });\r\n        $(\"#square-tool\").on(\"click\", () => {\r\n            this._penType = 1;\r\n            console.log(\"사각형\");\r\n        });\r\n    }\r\n\r\n    initWithLayers() {\r\n        const maxZ = this._config.LAYERS;\r\n        const maxWidth = Math.round(this._config.SCREEN_WIDTH / this._tileWidth);\r\n        const maxHeight = Math.round(this._config.SCREEN_HEIGHT / this._tileHeight);        \r\n\r\n        for(let z = 0; z < maxZ; z++) {\r\n            for(let y = 0; y < maxHeight; y++) {\r\n                for(let x = 0; x < maxWidth; x++) {\r\n                    this.set(x, y, z, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setData(x, y, z, tileId) {\r\n        if(x < 0) x = 0;\r\n        if(x > this._mapWidth - 1) x = this._mapWidth - 1;\r\n        y = Math.min(Math.max(0, y), this._mapHeight - 1);\r\n        z = Math.min(Math.max(0, z), this._config.LAYERS - 1);\r\n\r\n        const id = (this._mapWidth * this._mapHeight * z) + (this._mapWidth * y) + x;\r\n        this._data[id] = tileId;\r\n    }\r\n\r\n    getData(x, y, z) {\r\n        if(x < 0) x = 0;\r\n        if(x > this._mapWidth - 1) x = this._mapWidth - 1;\r\n        y = Math.min(Math.max(0, y), this._mapHeight - 1);        \r\n        z = Math.min(Math.max(0, z), this._config.LAYERS - 1);\r\n\r\n        const id = (this._mapWidth * this._mapHeight * z) + (this._mapWidth * y) + x;\r\n        return this._data[id] || 0;\r\n    }\r\n\r\n    setTileId(tileId) {\r\n        this._tileId = tileId;\r\n    }\r\n\r\n    getTileId() {\r\n        return this._tileId;\r\n    } \r\n\r\n    setCurrentLayerId(layerId) {\r\n        this._currentLayer = layerId;\r\n    }\r\n\r\n    getCurrentLayerId() {\r\n        return this._currentLayer;\r\n    }\r\n\r\n    start() {\r\n\r\n        let option = {\r\n            width: this._config.SCREEN_WIDTH,\r\n            height: this._config.SCREEN_HEIGHT,\r\n            // backgroundColor: 0x00000000,\r\n            resolution: window.devicePixelRatio || 1,\r\n            view: $(\"#contents__main-canvas\").get(0),\r\n            autoDensity: true,\r\n            transparent: false,\r\n        };\r\n\r\n        // $(`#contents__main-canvas`).resizable();\r\n\r\n        // if(this.isMobileDevice()) {\r\n            option.height = $(window).innerHeight() - $(\".toolbar\").innerHeight() - 30;\r\n            option.width = $(window).innerWidth() - $(\".aside__tabs\").innerWidth() - 10;\r\n        // }\r\n\r\n        this._app = new PIXI.Application(option);\r\n\r\n        this._layerContainer = new PIXI.Container();\r\n        this._layerContainer.interactive = true;\r\n        this._layerContainer.on(\"mousemove\", this.onMouseMove.bind(this));\r\n        this._layerContainer.on(\"pointermove\", this.onMouseMove.bind(this));\r\n        this.app.stage.addChild(this._layerContainer);   \r\n\r\n        for(let i = 0; i < this._config.LAYERS; i++) {\r\n            this._layerContainer.addChild(new PIXI.Container());   \r\n        }\r\n\r\n        this._tilesets = [];\r\n        this._tilesets.push(PIXI.Texture.from(this._tileset));  \r\n        \r\n        this.initWithDrawingType();\r\n\r\n        $(\"#take-screenshot\").on(\"click\", (ev) => {\r\n            this.takeScreenshot();\r\n\r\n            ev.stopPropagation();\r\n        });\r\n\r\n    }\r\n\r\n    get app() {\r\n        return this._app;\r\n    }\r\n\r\n    /**\r\n     * TODO: 클립보드에 저장하는 방식으로 변환할 것.\r\n     * @link https://developer.mozilla.org/ko/docs/Web/API/Clipboard/write\r\n     */\r\n    takeScreenshot() {\r\n        const app = this._app;\r\n        if(!app) return;\r\n        app.renderer.extract.canvas(app.stage).toBlob((b) => {\r\n            const a = document.createElement('a');\r\n            document.body.append(a);\r\n            a.download = 'screenshot';\r\n            a.href = URL.createObjectURL(b);\r\n            a.onclick = function(ev) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            };\r\n            a.click();\r\n            a.remove();\r\n\r\n        }, 'image/png');        \r\n    }\r\n\r\n    onMouseMove(ev) {\r\n        this._mouseX = ev.data.global.x;\r\n        this._mouseY = ev.data.global.y;\r\n    }\r\n\r\n    /**\r\n     * Get a tileset image from the tileset collection.\r\n     */\r\n    getTileset() {\r\n        const tilesets = this._tileset;\r\n\r\n        if(!tilesets) {\r\n            throw new Error(\"Can't find the tileset from the memory.\");\r\n        }\r\n\r\n        if(Array.isArray(tilesets) && tilesets.length <= 0) {\r\n            throw new Error(\"The tileset image can't create correctly.\");\r\n        }\r\n\r\n        return tilesets[0];\r\n    }\r\n    \r\n    cropTexture(dx, dy, texture) {\r\n        const crop = new PIXI.Rectangle(dx, dy, this._tileWidth, this._tileHeight);\r\n        const cropTexture = new PIXI.Texture(texture.baseTexture, crop);\r\n        \r\n        return cropTexture;\r\n    }\r\n\r\n    collectAutoTileID(mx, my) {\r\n        const mapX = Math.floor(mx / this._tileWidth);\r\n        const mapY = Math.floor(my / this._tileHeight);\r\n        const layerId = this._currentLayer;\r\n        let mask = 0x00;\r\n        const bits = [\r\n            this.getData(mapX + 0, mapY - 1, layerId) <= 0, // 북\r\n            this.getData(mapX + 1, mapY - 1, layerId) <= 0, // 동북\r\n            this.getData(mapX + 1, mapY + 0, layerId) <= 0, // 동\r\n            this.getData(mapX + 1, mapY + 1, layerId) <= 0, // 동남\r\n            this.getData(mapX + 0, mapY + 1, layerId) <= 0, // 남\r\n            this.getData(mapX - 1, mapY + 1, layerId) <= 0, // 남서\r\n            this.getData(mapX - 1, mapY + 0, layerId) <= 0, // 서\r\n            this.getData(mapX - 1, mapY - 1, layerId) <= 0 // 북서\r\n        ];\r\n\r\n        bits.forEach((e, i, a) => {\r\n            if(e === true) {\r\n                mask += (1 << i);\r\n            }\r\n        });\r\n\r\n        return mask;\r\n    }    \r\n\r\n    drawTile(mx, my, tileID) {\r\n        let mapX = Math.floor(mx / this._tileWidth);\r\n        let mapY = Math.floor(my / this._tileHeight);\r\n\r\n        console.log(mx, my, mapX, mapY);\r\n\r\n        this.setData(mapX, mapY, this._currentLayer, tileID);\r\n\r\n        this._dirty = true;\r\n    }\r\n\r\n    /**\r\n     * Print tiles to certain area.\r\n     * @param {Number} sx \r\n     * @param {Number} sy \r\n     * @param {Number} ex \r\n     * @param {Number} ey \r\n     * @param {Number} tileID \r\n     */\r\n    drawRect(sx, sy, ex, ey) {\r\n\r\n        let mx = Math.floor(sx / this._tileWidth);\r\n        let my = Math.floor(sy / this._tileHeight);       \r\n\r\n        const tileID = this._tileId;\r\n        \r\n        const width = mx + ex;\r\n        const height = my + ey;\r\n\r\n        for(let y = my; y < height; y++) {\r\n            for(let x = mx; x < width; x++) {\r\n                this.setData(x, y, this._currentLayer, tileID);\r\n            }\r\n        }        \r\n\r\n        this._dirty = true;\r\n    }\r\n\r\n    isAutoTile(tileID) {\r\n        return this._autoTileIndexedList.indexOf(tileId) >= 0;\r\n    }\r\n\r\n    update(...args) {\r\n        const penType = this._penType;\r\n        const tileId = this._tileId;\r\n\r\n        // if(this.isAutoTile(tileId)) {\r\n        //     this._tileId = this.collectAutoTileID(this._mouseX, this._mouseY);\r\n        //     this._tileset = this._autoTileTextureList[tileId];\r\n        //     this._tileType = 1;\r\n        // } else {\r\n        //     this._tileType = 0;\r\n        // }\r\n\r\n        switch(penType) {\r\n            case 0: \r\n                this.drawTile(this._mouseX, this._mouseY, tileId);\r\n                break;\r\n            case 1:\r\n                this.drawRect(this._mouseX, this._mouseY, 20, 5);\r\n                break;\r\n        }\r\n  \r\n        if(this._dirty) {\r\n            this.draw();\r\n            this._dirty = false;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._layerContainer.children.forEach(i => {\r\n            i.removeChildren();\r\n        });\r\n    }\r\n\r\n    getTileCropTexture(tileID) {\r\n        let texture = PIXI.Texture.from(this._tileset);\r\n        const mapCols = Math.floor(texture.width / this._tileWidth);\r\n        const mapRows = Math.floor((texture.height) / this._tileHeight);\r\n        const dx = (tileID % mapCols) * this._tileWidth;\r\n        const dy = Math.floor(tileID / mapCols) * this._tileHeight;        \r\n        const cropTexture = this.cropTexture(dx, dy, texture);\r\n\r\n        return cropTexture;\r\n    }\r\n\r\n    toggleLayerVisibility(layerId) {\r\n        if(!this._layerContainer) return;\r\n        const children = this._layerContainer.children;\r\n        children[layerId].visible = !children[layerId].visible;\r\n    }\r\n\r\n    updateAlphaLayers() {\r\n        const currentLayer = this._currentLayer;\r\n        const children = this._layerContainer.children;\r\n        const layers = children.filter((e, i, a) => {\r\n            return i !== currentLayer;\r\n        });\r\n\r\n        layers.forEach(layer => {\r\n            layer.alpha = 0.25;\r\n        });\r\n\r\n        children[currentLayer].alpha = 1.0;\r\n    }\r\n\r\n    draw() {        \r\n        this.clear();\r\n\r\n        const mapWidth = this._mapWidth;\r\n        const mapHeight = this._mapHeight;\r\n\r\n        for(let z = 0; z < this._config.LAYERS; z++) {\r\n            const container = this._layerContainer.children[z];\r\n            for(let y = 0; y < mapHeight; y++) {\r\n                for(let x = 0; x < mapWidth; x++) {\r\n                    const tileID = this.getData(x, y, z);\r\n                    if(!tileID) continue;\r\n                    const sprite = new PIXI.Sprite(this.getTileCropTexture(tileID));\r\n                    sprite.x = x * this._tileWidth;\r\n                    sprite.y = y * this._tileHeight;\r\n                    container.addChild(sprite);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","function toCamelCase(name) {\r\n    const snake = name || \"\";\r\n\r\n    let nodes = snake.split(/[\\s\\-]/);\r\n    let nodesTail = nodes.slice(1);\r\n    \r\n    const camel = nodes[0].concat(nodesTail.map(i => i[0].toUpperCase() + i.slice(1)));\r\n    return camel;\r\n}\r\n\r\nfunction getClassName(name) {\r\n    const str = toCamelCase(name);\r\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport default {toCamelCase, getClassName};","const config = {\r\n    SCREEN_WIDTH: 800,\r\n    SCREEN_HEIGHT: 600,\r\n    TILE_WIDTH: 16,\r\n    TILE_HEIGHT: 16,\r\n    MAP_COLS: 32,\r\n    MAP_ROWS: 8,\r\n    LAYERS: 4,\r\n    TRANSPARENT_COLOR_GROUP: [\"#007575\"],\r\n    TILESET_IMGAGES: [\r\n        \"./images/tiles/tileset16-8x13.png\",\r\n        \"./images/tiles/2k_town05.png\",\r\n        \"./images/tiles/2k_town05-01.png\",\r\n    ],\r\n};\r\n\r\nexport {config};","import {config} from \"./config.js\";\r\n\r\nexport default class TilesetCanvas {\r\n    constructor(...args) {\r\n        this.initMembers(...args)\r\n    }\r\n\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._isReady = false;\r\n        this._tilesetImgages = this._config.TILESET_IMGAGES;\r\n    }\r\n\r\n    async start() {\r\n        return this.loadTilesets();\r\n    }\r\n\r\n    async loadTilesets() {\r\n        this._tilesets = [];\r\n\r\n        let count = 0;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            for(let i = 0; i < this._tilesetImgages.length; i++) {\r\n                const elem = $(\"<img>\").attr(\"src\", this._tilesetImgages[i]);   \r\n                elem.on(\"load\", () => {     \r\n                    this._tilesets.push(elem);\r\n                    \r\n                    ++count;\r\n\r\n                    if(count >= this._tilesetImgages.length) {\r\n                        console.log(this._tilesetImgages[i]);\r\n                        this.createCanvas();\r\n                        resolve();\r\n                    }\r\n                });\r\n                elem.on(\"error\", reject);\r\n            }\r\n        });       \r\n    }\r\n\r\n    createCanvas() {\r\n\r\n        const canvasWidth = this._config.TILE_WIDTH * this._config.MAP_COLS;\r\n        const canvasHeight = this._config.TILE_HEIGHT * this._config.MAP_ROWS * 4;\r\n\r\n        this._parent = $(\"#view\");\r\n        this._canvas = $(\"<canvas />\", {\"id\": \"tileset-canvas\"})\r\n            .attr(\"width\", canvasWidth)\r\n            .attr(\"height\", canvasHeight)\r\n            .css({\r\n                \"padding\": \"0\",\r\n                \"margin\": \"0\"\r\n            })\r\n\r\n        this._parent.prepend(this._canvas)\r\n        this._parent.css({\r\n            \"width\": \"100%\",\r\n            \"height\": \"60%\",\r\n        });\r\n\r\n        /**\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this._context = this._canvas.get(0).getContext(\"2d\");\r\n        const ctx = this._context;\r\n\r\n        let acc = 0;\r\n\r\n        let maxW = 0;\r\n        let maxH = 0;\r\n        \r\n        for(let i = 0; i < this._tilesetImgages.length; i++) {\r\n\r\n            /**\r\n             * @type {JQuery}\r\n             */\r\n            const img = this._tilesets[i];\r\n            const width = img.get(0).naturalWidth;\r\n            const height = img.get(0).naturalHeight;   \r\n            \r\n            if(height > acc + height) {\r\n                maxH = acc + height;\r\n                this._canvas.prop(\"height\" , maxH);                \r\n            }\r\n\r\n            ctx.setTransform(1, 0, 0, 1, 0, acc);\r\n            ctx.imageSmoothingEnabled = false;\r\n            ctx.drawImage(img.get(0), 0, 0, width, height);\r\n            acc += height;            \r\n        }\r\n\r\n        this._isReady = true;\r\n    }\r\n\r\n    \r\n}\r\n","import {TilesetMarker} from \"./tilesetMarker.js\";\r\n\r\nexport default class TileMarker extends TilesetMarker {\r\n\r\n    initWithElement() {\r\n        const parent = $(\".contents\");\r\n        let child = null;\r\n        if((child = document.querySelector(\"#tile-marker\"))) {\r\n            parent.get(0).removeChild(child);\r\n            return;\r\n        }\r\n\r\n        this._element = $(\"<div></div>\", {\"id\" : \"tile-marker\"})\r\n            .css({\r\n                \"min-width\": `${this._tileWidth}px`,\r\n                \"min-height\": `${this._tileHeight}px`,\r\n                \"width\": `${this._tileWidth}px`,\r\n                \"height\": `${this._tileHeight}px`,\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"margin\": \"0\",\r\n                \"padding\": \"0\",\r\n                \"border\": \"2px dotted white\",\r\n                \"z-index\": \"0\",\r\n                \"box-sizing\": \"border-box\",\r\n            });\r\n\r\n        this._isReady = true;\r\n        \r\n        parent.append(this._element);\r\n    }\r\n\r\n    update(...args) {\r\n        if(!this._isReady) {\r\n            return;\r\n        }\r\n\r\n        const target = args[0].target;\r\n\r\n        const img = $(\"#contents__main-canvas\");\r\n        const mapCols = Math.floor(img.width() / this._config.TILE_WIDTH);\r\n        const tilesetWidth = img.width();\r\n        const tilesetHeight = img.height();\r\n        const topY = 0;\r\n\r\n        const mouse = args[0];\r\n\r\n        const tw = this._tileWidth;\r\n        const th = this._tileHeight;\r\n        let nx = Math.floor(mouse.x / tw) * tw;\r\n        let ny = Math.floor(mouse.y / th) * th;\r\n\r\n        const targetX = nx / tw;\r\n        const targetY = (ny - topY) / th;\r\n\r\n        if(nx < 0) {\r\n            nx = 0;\r\n        }\r\n        if(nx > tilesetWidth - tw) {\r\n            nx = tilesetWidth - tw;\r\n        }\r\n        if(ny < 0) {\r\n            ny = 0;\r\n        }\r\n        if(ny > tilesetHeight) {\r\n            ny = tilesetHeight - th + topY;\r\n        }\r\n\r\n        this._element.css({\r\n            position : \"absolute\",\r\n            left : nx + \"px\",\r\n            top : ny - topY + \"px\",\r\n        });     \r\n    }    \r\n}","export default class Model {\r\n    \r\n    constructor() {\r\n        this._data = this.getData();\r\n    }\r\n\r\n    /**\r\n     * @return {{\r\n     *  width: String,\r\n     *  height: String,\r\n     *  parentId: String,\r\n     *  id: String,\r\n     *  zIndex: String,\r\n     *  path: String,\r\n     * }}\r\n     */\r\n    getData() {\r\n        return {\r\n        }; \r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n}","import Model from \"./Model.js\";\r\n\r\nexport default class GamePropertiesWindowModel extends Model {\r\n\r\n    getData() {\r\n        return {\r\n            width: \"240px\",\r\n            height: \"100%\",\r\n            parentId: \".windows-container\",\r\n            id: \"newContainer\", /** ID에 \"Window\"가 들어가면 안됩니다 */\r\n            zIndex: \"10\",\r\n            path: \"view/windows/newWindow.html\",\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n        }; \r\n    }\r\n\r\n}","import App from \"../App\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class BaseController {\r\n\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        this.initMembers(config.data);\r\n        this.initWithCanvas();\r\n    }\r\n\r\n    initMembers(config) {\r\n\r\n        /**\r\n         * 실제 HTML 파일이 있는 위치\r\n         */\r\n        this._config = config;\r\n        this._isValid = false;\r\n        this._uniqueId = null;\r\n    }    \r\n\r\n    setUniqueId(id) {\r\n        this._uniqueId = id;\r\n    }\r\n\r\n    initWithCanvas() {\r\n        const config = this._config;\r\n\r\n        if(!config.parentId || !config.id) {\r\n            throw new Error(\"The parent element is not exist!\");\r\n        }\r\n\r\n        this._element = $(\"<div></div>\")\r\n            .css(config)\r\n            .attr(\"id\", config.id)\r\n            .draggable({ snap: \".container\" });\r\n\r\n        this.hide();\r\n\r\n        $(`#${config.id}`).resizable({containment: config.parentId});\r\n\r\n        $(config.parentId).append(this._element);\r\n\r\n    }\r\n\r\n    isMobile() {\r\n        const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/i;\r\n        return !!navigator.userAgent.match(r);\r\n    }    \r\n\r\n    hide() {\r\n        $(this._config.parentId).hide();    \r\n        this._element.hide();\r\n        this._isValid = false;\r\n    }\r\n\r\n    show() {\r\n        this._element.show();\r\n        $(this._config.parentId).show();\r\n        this._isValid = true;\r\n        $(\".darken, .windows-container\").css(\"left\", \"0\");\r\n    }    \r\n\r\n    remove() {\r\n        this._element.fadeOut(700, () => {\r\n            this._element.remove();\r\n        });\r\n        $(\".darken, .windows-container\").css(\"left\", \"-9999px\");\r\n        delete App.GetInstance().cache[this._uniqueId];\r\n    }\r\n\r\n    isMobile() {\r\n        const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/i;\r\n        return !!navigator.userAgent.match(r);\r\n    }     \r\n    \r\n    load() {\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            const path = this._config.path;\r\n            const url = `${location.href.slice(0,location.href.lastIndexOf(\"/\"))}/${path}`;\r\n            xhr.open(\"GET\", url);\r\n            xhr.onload = function() {\r\n                if(xhr.status === 200) {\r\n                    resolve(xhr.responseText);\r\n                }\r\n            }\r\n            xhr.onerror = reject;\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    async render() {\r\n        await this.load().then(result => {\r\n            this._element.html(result);\r\n        }).catch(err => {\r\n            console.warn(err);\r\n        });\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        this.addEventHandlers(elem, self);\r\n    }    \r\n\r\n    addEventHandlers() {\r\n\r\n    }\r\n\r\n}","import GamePropertiesWindowModel from \"../models/GamePropertiesWindow.js\";\r\nimport BaseController from \"./BaseController.js\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class GamePropertiesWindowController extends BaseController {\r\n\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        super( config );\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        super.onLoad(elem, self);\r\n        const parent = elem.parentNode;\r\n        parent.querySelector(\".newWindow__control-box p i\").onclick = () => {\r\n            self.remove();\r\n            \r\n        };\r\n        this.show();\r\n        $(\".darken, .windows-container\").css(\"left\", \"0\");\r\n    }\r\n\r\n    onClick(ev) {\r\n        // 창을 화면에 보이게 합니다.\r\n        this.show();\r\n        // 펼쳐진 메뉴를 다시 접습니다.\r\n        $(\"#none\").prop(\"checked\", true);        \r\n    }\r\n\r\n    onOkButton(ev) {\r\n        const container = $(\"#newContainer #newWindow\");\r\n        const inp = container.find(\"input\");\r\n        const data = {\r\n            gameName: $(inp[0]).val(),\r\n            gameFolder: $(inp[1]).val(),\r\n            author: $(inp[2]).val(),\r\n        };\r\n\r\n        alert(JSON.stringify(data, null, \"\\t\"));\r\n        this.remove();\r\n    }\r\n\r\n    addEventHandlers(elem, self) {\r\n        $(`.file-menu-new-button`).on(\"click\", ev => this.onClick(ev));\r\n        \r\n        const container = $(\"#newContainer #newWindow\");\r\n        const okButton = container.find(\"div.panel\");\r\n        okButton.eq(0).on(\"click\", ev => {\r\n            this.onOkButton(ev); \r\n        });\r\n    }\r\n}\r\n","import Model from \"./Model.js\";\r\n\r\nexport class TilesetWindowModel extends Model {\r\n    getData() {\r\n        return {\r\n            width: \"540px\",\r\n            height: \"100%\",\r\n            parentId: \".windows-container\",\r\n            id: \"tileset-container\", /** ID에 \"Window\"가 들어가면 안됩니다 */\r\n            zIndex: \"10\",\r\n            path: \"view/windows/tilesetWindow.html\",\r\n            opacity: \"1.0\",\r\n        }\r\n    }\r\n}","import TilesetWindowModel from \"../models/TilesetWindow.js\";\r\nimport BaseController from \"./BaseController.js\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class TilesetWindowController extends BaseController {\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        super( config );\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        super.onLoad(elem, self);\r\n        const parent = elem.parentNode;\r\n        parent.querySelector(\".tilesetWindow__control-box p i\").onclick = () => {\r\n            self.remove();\r\n        };\r\n\r\n        $(elem.parentNode).find(\".tilesetWindow__panel #ok\").on(\"click\", ev => {\r\n            this.onOk(ev);\r\n        })\r\n\r\n        $(elem.parentNode).find(\".tilesetWindow__panel #cancel\").on(\"click\", ev => {\r\n            this.onCancel(ev);\r\n        })\r\n\r\n        this.show();\r\n    }   \r\n    \r\n    onOk(ev) {\r\n        this.remove();\r\n        \r\n        const tilesets = this._element.find(\"input\");\r\n        const data = {\r\n            tilesets: {\r\n                name: $(tilesets[0]).val(),\r\n                src: $(tilesets[1]).val(),\r\n            },\r\n            tile: {\r\n                width: parseInt($(tilesets[2]).val()),\r\n                height: parseInt($(tilesets[3]).val()),\r\n            }\r\n        }\r\n        \r\n        $('form[name=\"uploadTilesetImage\"]').on(\"submit\", function(e) {\r\n            e.preventDefault();\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                cache:false,\r\n                contentType: false,\r\n                processData: false,\r\n                url: $(this).attr('action'),\r\n                data: new FormData(this),\r\n                success: function(msg) {\r\n                    console.log(msg);\r\n                },\r\n                error: function(data){\r\n                    console.log(\"error\");\r\n                    console.log(data);\r\n                }                \r\n            });\r\n        });    \r\n    }\r\n\r\n    onCancel(ev) {\r\n        ev.preventDefault();\r\n        this.remove();\r\n    }\r\n\r\n}","import App from \"./App.js\";\r\nimport {EventEmitter} from \"./EventEmitter.js\";\r\nimport BaseController from \"./controllers/BaseController.js\";\r\n\r\nimport GamePropertiesWindowController from \"./controllers/GamePropertiesWindowController.js\";\r\nimport GamePropertiesWindow from \"./models/GamePropertiesWindow.js\";\r\nimport TilesetWindowController from \"./controllers/TilesetWindowController.js\";\r\nimport { TilesetWindowModel } from \"./models/TilesetWindow.js\";\r\n\r\nclass WindowCreator extends EventEmitter {\r\n    /**\r\n     * @param {App} app \r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._app = App.GetInstance();\r\n\r\n        this.cache = {};\r\n    }\r\n\r\n    createGamePropertiesWindow() {\r\n\r\n        this._gamePropertiesWindow = new GamePropertiesWindowController(new GamePropertiesWindow());\r\n\r\n        this._gamePropertiesWindow.render()\r\n            .then(ret => {\r\n                const id = \"new-window\";\r\n                this.cache[\"new-window\"] = this._gamePropertiesWindow;\r\n\r\n                this._gamePropertiesWindow.setUniqueId(id);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            });        \r\n    }\r\n\r\n    createWithTilesetWindow() {\r\n        this._tilesetWindow = new TilesetWindowController(new TilesetWindowModel());\r\n\r\n        this._tilesetWindow.render()\r\n            .then(ret => {\r\n                const id = \"tileset\";\r\n                this.cache[id] = this._tilesetWindow;\r\n                \r\n                this._tilesetWindow.setUniqueId(id);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            })\r\n    }    \r\n\r\n    update() {\r\n        for(let i in this.cache) {\r\n            if(this.cache[i] instanceof BaseController) {\r\n                this.cache[i].remove();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} elem \r\n     * @param {Number} id \r\n     */\r\n    static onLoad(elem, id) {\r\n        const creator = this.GetInstance();\r\n\r\n        if(creator.cache[id]) {\r\n            const self = creator.cache[id];\r\n            creator.cache[id].onLoad(elem, self);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * @return {WindowCreator}\r\n     */\r\n    static GetInstance() {\r\n        if(!WindowCreator.Instance) {\r\n            WindowCreator.Instance = new WindowCreator();\r\n        }\r\n\r\n        return WindowCreator.Instance;\r\n    }\r\n\r\n}\r\n\r\nWindowCreator.Instance = null;\r\n\r\nexport {WindowCreator};","import {Component} from \"./Component.js\";\r\nimport {MenuComponent} from \"./MenuComponent.js\";\r\nimport App from \"./App.js\";\r\nimport GamePropertiesWindowController from \"./controllers/GamePropertiesWindowController.js\";\r\nimport GamePropertiesWindow from \"./models/GamePropertiesWindow.js\";\r\nimport { WindowCreator } from \"./WindowCreator.js\";\r\n\r\nconst menu = {\r\n    \"ko\": {\r\n        file: {\r\n            name: \"파일\",\r\n            children: {\r\n                \"file-new\": {\r\n                    name: \"새로 만들기\",\r\n                    children: {},\r\n                    action: function(ev) {\r\n                        WindowCreator.GetInstance().createGamePropertiesWindow();\r\n                    }                    \r\n                },\r\n                \"file-open\": {\r\n                    name: \"파일 열기\",\r\n                    children: {}, \r\n                },\r\n                \"file-close\": {\r\n                    name: \"파일 닫기\",\r\n                    children: {}, \r\n                },\r\n                \"file-save\": {\r\n                    name: \"파일 저장\",\r\n                    children: {}, \r\n                },\r\n                \"file-preferences\": {\r\n                    name: \"환경 설정\",\r\n                    children: {}, \r\n                },\r\n                \"file-export\": {\r\n                    name: \"내보내기\",\r\n                    children: {}, \r\n                },\r\n                \"file-exit\": {\r\n                    name: \"프로그램 종료\",\r\n                    children: {}, \r\n                },\r\n            },\r\n        },\r\n        edit: {\r\n            name: \"편집\",\r\n            children: {\r\n                \"edit-undo\": {\r\n                    name: \"취소\",\r\n                    children: {},\r\n                },\r\n                \"edit-cut\": {\r\n                    name: \"자르기\",\r\n                    children: {}, \r\n                },\r\n                \"edit-copy\": {\r\n                    name: \"복사하기\",\r\n                    children: {}, \r\n                },\r\n                \"edit-paste\": {\r\n                    name: \"붙여넣기\",\r\n                    children: {}, \r\n                },\r\n                \"edit-delete\": {\r\n                    name: \"삭제하기\",\r\n                    children: {}, \r\n                },\r\n            },\r\n        },\r\n        mode: {\r\n            name: \"모드\",\r\n            children: {\r\n                \"mode-map\": {\r\n                    name: \"맵\",\r\n                    children: {},                    \r\n                },\r\n                \"mode-event\": {\r\n                    name: \"이벤트\",\r\n                    children: {}, \r\n                },\r\n                \"mode-region\": {\r\n                    name: \"지역\",\r\n                    children: {}, \r\n                },\r\n            },\r\n        },\r\n        draw: {\r\n            name: \"그리기\",\r\n            children: {\r\n                \"draw-pencil\": {\r\n                    name: \"펜\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-rectangle\": {\r\n                    name: \"정사각형\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-ellipse\": {\r\n                    name: \"직사각형\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-flood-fill\": {\r\n                    name: \"채우기\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-shadow pen\": {\r\n                    name: \"그림자\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n            },\r\n        },\r\n        scale: {\r\n            name: \"배율\",\r\n            children: {\r\n                \"scale-1x\": {\r\n                    name: \"실제 비율\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"scale-2x\": {\r\n                    name: \"2배 축소\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"scale-4x\": {\r\n                    name: \"4배 축소\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"scale-8x\": {\r\n                    name: \"8배 축소\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n            },\r\n        },\r\n        tools: {\r\n            name: \"도구\",\r\n            children: {\r\n                \"tools-database\": {\r\n                    name: \"데이터베이스\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"tools-resource-manager\": {\r\n                    name: \"소재 관리자\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"tools-script-eidtor\": {\r\n                    name: \"스크립트 에디터\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                      \r\n                },\r\n                \"tools-sound-test\": {\r\n                    name: \"사운드 테스트\",\r\n                    children: {}, \r\n                },\r\n                \"tools-options\": {\r\n                    name: \"옵션\",\r\n                    children: {}, \r\n                    action: function(ev) {\r\n                        WindowCreator.GetInstance().createWithTilesetWindow();\r\n                    }\r\n                },\r\n            },\r\n        },\r\n        game: {\r\n            name: \"게임\",\r\n            children: {\r\n                \"game-playtest\": {\r\n                    name: \"플레이 테스트\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        alert(\"플레이 테스트 기능을 지원하지 않습니다.\");\r\n                    },                      \r\n                },\r\n                \"game-fullscreen\": {\r\n                    name: \"전체 화면\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                     \r\n                },\r\n                \"game-show-console\": {\r\n                    name: \"콘솔 표시\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        alert(\"웹 버전에서는 콘솔 표시 기능을 지원하지 않습니다.\");\r\n                    },                       \r\n                },\r\n                \"game-folder-open\": {\r\n                    name: \"게임 폴더 열기\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        alert(\"웹 버전에서는 게임 폴더 열기 기능을 지원하지 않습니다.\");\r\n                    },                      \r\n                },\r\n            },\r\n        },\r\n        help: {\r\n            name: \"도움말\",\r\n            children: {\r\n                \"help-contents\": {\r\n                    name: \"도움말\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        alert(\"도움말이 아직 없습니다.\");\r\n                    },\r\n                },\r\n                \"help-about\": {\r\n                    name: \"버전 정보\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        // if(!$(\".container\").is(\"#helpAbout\")) {\r\n                        //     $(\".container\").append(new HelpAboutWindow(new HelpAboutWindowModel()));\r\n                        // }\r\n                    },                    \r\n                },\r\n            },\r\n        },\r\n        \"$font\": {\r\n            size: \"8pt\",\r\n        }\r\n    },\r\n};\r\n\r\nexport default class MenuService extends Component {\r\n\r\n    initMembers(...args) {\r\n\r\n        /**\r\n         * @type {MenuComponent}\r\n         */\r\n        this._menuComponent = args[1];\r\n        this._isClickedMenu = false;        \r\n    }\r\n\r\n    start(...args) {\r\n\r\n        this.changeMenuLocaleAsPersonalize();\r\n        this.changeToolbarIconOnMobileDevice();\r\n        this.addMenuEventHandlers();\r\n    }    \r\n\r\n    changeMenuLocaleAsPersonalize() {\r\n        const langCode = navigator.language.slice(0, 2);\r\n        $(\".menu__main label\").each((index, elem) => {\r\n            const parent = $(elem);\r\n            const type = parent.data(\"action\");\r\n            const res = menu[langCode];\r\n            if(res) {\r\n                const data = res[type];\r\n                const name = data.name;\r\n                const font = res[\"$font\"];\r\n                parent.text(name);\r\n                parent.css(\"font-size\", font.size);\r\n\r\n                $(`.menu__${type}-sub li`)\r\n                    .each((_index, _elem) => {\r\n                        const _node = $(_elem);\r\n                        \r\n                        // 서브 메뉴의 위치를 세밀하게 조정합니다.\r\n                        const menuNode = parent.parent();\r\n                        _node.parent().css(\"left\", menuNode.get(0).getBoundingClientRect().x + \"px\");\r\n\r\n                        const _type = _node.data(\"action\");\r\n                        const _res = data.children[_type];\r\n                        if(_res) {\r\n\r\n                            // 메뉴 노드에 메뉴 액션을 등록합니다.\r\n                            if(_res.action) {\r\n                                _node.get(0).onclick = _res.action;\r\n                            }\r\n\r\n                            const _name = _res.name;\r\n                            _node.get(0).childNodes.forEach(i => {\r\n                                // 텍스트 노드만 찾습니다.\r\n                                if(i.nodeType == 3) {\r\n                                    i.textContent = _name;\r\n                                }\r\n                            });\r\n                            _node.css(\"font-size\", font.size);\r\n                        }\r\n                    })                \r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    addMenuEventHandlers() {\r\n\r\n        // let isDone = false;\r\n\r\n        // $(\".menu__main li\").on(\"click\", ev => {\r\n        //     const isSomeMenuOpened = $(\"ul[class*='sub']\").is(\":visible\");\r\n        //     $(\"ul[class*='sub']\").hide();\r\n        //     $(\"#none\").prop(\"checked\", true);\r\n        // });\r\n    }\r\n\r\n    changeToolbarIconOnMobileDevice() {\r\n        const media = window.matchMedia(\"(max-width: 640px)\");\r\n        if(media.matches) {\r\n            $(\".toolbar i\").each((index, elem) => {\r\n                $(elem)\r\n                    .addClass(\"fa-3x\")\r\n                    .css({\r\n                        \"width\": \"98%\",\r\n                        \"height\": \"98%\",\r\n                        \"font-size\": \"1.25em\"\r\n                    })\r\n            })\r\n        }\r\n\r\n        const resizeConfig = {\r\n            \".contents\": {\r\n                \"width\": \"65%\",\r\n            },\r\n            \".aside__tabs\": {\r\n                \"width\": \"30%\",\r\n            },\r\n            \"#contents__main-canvas\": {\r\n                \"width\": \"100%\",\r\n            }\r\n        }\r\n\r\n        $(window).on(\"resize\", () => {\r\n\r\n            if($(window).width() <= 640) {\r\n                for(let i in resizeConfig) {\r\n                    $(i).css(resizeConfig[i]);\r\n                }\r\n\r\n                $(\".toolbar i\").each((index, elem) => {\r\n                    $(elem)\r\n                        .removeClass(\"fa-3x\")                    \r\n                        .addClass(\"fa-3x\")\r\n                        .css({\r\n                            \"width\": \"98%\",\r\n                            \"height\": \"98%\",\r\n                            \"font-size\": \"1.25em\"\r\n                        })\r\n                })                \r\n            } else {\r\n                $(\".toolbar i\").each((index, elem) => {\r\n                    $(elem)\r\n                        .removeClass(\"fa-3x\") \r\n                        .addClass(\"fa-sm\")                   \r\n                        .css({\r\n                            \"width\": \"98%\",\r\n                            \"height\": \"98%\",\r\n                            \"font-size\": \"0.875em\"\r\n                        })\r\n                })  \r\n            }\r\n        })\r\n    }\r\n}","export default class Rectangle {\r\n\r\n    constructor(x, y, width, height) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._x;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set y(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n    contains(mx, my) {\r\n        const x = this._x;\r\n        const y = this._y;\r\n        const width = this._width;\r\n        const height = this._height;\r\n        return mx >= x && mx <= (x + width) && my >= y && my <= (y + height);\r\n    }\r\n}\r\n\r\nRectangle.EMPTY = new Rectangle(0, 0, 0, 0);","\r\nimport {EventEmitter} from \"./EventEmitter.js\";\r\nimport { Component } from \"./Component.js\";\r\nimport {MenuComponent} from \"./MenuComponent.js\";\r\nimport {TilesetMarker} from \"./tilesetMarker.js\";\r\nimport Tilemap from \"./Tilemap.js\";\r\nimport toCamelCase from \"./camelCase.js\"\r\nimport TilesetCanvas from \"./TilesetCanvas.js\";\r\nimport TileMarker from \"./TileMarker.js\";\r\nimport {config} from \"./config.js\";\r\nimport MenuService from \"./MenuService.js\";\r\nimport Rectangle from \"./Rectangle.js\";\r\nimport { WindowCreator } from \"./WindowCreator.js\";\r\n\r\nexport default class App extends EventEmitter {\r\n\r\n    /**\r\n     * 멤버 변수를 초기화합니다.\r\n     */\r\n    initMembers() {\r\n        this.cache = {};\r\n        this._config = config;\r\n        this._mouse = {\r\n            x: 0,\r\n            y: 0, \r\n            screenX : 0,\r\n            screenY : 0,\r\n            buttons: {\r\n                left: false,\r\n                leftFire: false,\r\n            },\r\n            /**\r\n             * @type {HTMLElement}\r\n             */            \r\n            target: null,\r\n        };\r\n\r\n        /**\r\n         * 사각형 툴을 위한 선택 영역\r\n         * @link http://jsfiddle.net/qGzkG/2/\r\n         */\r\n        this._blockRect = {\r\n            isDrawing: false,\r\n            rect: new Rectangle(0, 0, 1, 1),\r\n        };\r\n        this._now = performance.now();\r\n        this._isMenuOpen = false;\r\n        this._tileId = 0;\r\n        this._isReady = false;\r\n\r\n        // 타이틀을 변경합니다.\r\n        document.title = \"Initial Map Editor\";\r\n\r\n        this.emit(\"ready\", JSON.stringify(this));\r\n    }\r\n\r\n    /**\r\n     * 컴포넌트를 초기화합니다.\r\n     */\r\n    async initWithComponents() {\r\n        /**\r\n         * @type {Component[]}\r\n         */\r\n        this._components = [];\r\n        this._components.push(this._menu = new MenuComponent(this._config));\r\n        this._components.push(new MenuService(this._config, this._menu));\r\n\r\n        this._tilesetCanvas = new TilesetCanvas(this._config);\r\n        await this._tilesetCanvas.start().then(ret => {\r\n            this._components.push(this._tilesetMarker = new TilesetMarker(this._config));                    \r\n            this._components.push(this._tilemap = new Tilemap(this._config));    \r\n            this._components.push(this._tileMarker = new TileMarker(this._config));    \r\n            this._components.forEach(component => {\r\n                component.start();\r\n            });            \r\n            this._tilemap.setTileId(0);\r\n        }).then(ret => {\r\n            $(\".darken, .windows-container\").css(\"left\", \"-9999px\");\r\n        }).catch(err => {\r\n            console.warn(err);\r\n        });\r\n    }\r\n\r\n    toCamelCase() {\r\n        return toCamelCase();\r\n    }\r\n\r\n    isMobileDevice() {\r\n        const ret = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        return ret;\r\n    }\r\n\r\n    onMouseTouchMove(ev) {\r\n        this._mouse.x = ev.layerX;\r\n        this._mouse.y = ev.layerY;\r\n        this._mouse.screenX = ev.layerX;\r\n        this._mouse.screenY = ev.layerY;\r\n    }\r\n\r\n    /**\r\n     * 마우스 이벤트 및 터치 이벤트를 초기화합니다.\r\n     */\r\n    initWithMouseEvent() {\r\n\r\n        const isMobileDevice = this.isMobileDevice();\r\n        let events;\r\n\r\n        if(isMobileDevice) {\r\n            events = {\r\n                \"touchmove\": (ev) => {        \r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }                          \r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;\r\n                },\r\n                \"touchstart pointerdown\": (ev) => {\r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }\r\n                    \r\n                    this._mouse.target = ev.target; \r\n\r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;           \r\n                    this._mouse.buttons.left = true;\r\n                    this._mouse.buttons.leftFire = false;                  \r\n                },\r\n                \"touchend pointerup mouseup\": (ev) => {\r\n                    this._mouse.buttons.left = false;\r\n                    this._mouse.buttons.leftFire = true; \r\n                }\r\n            };\r\n\r\n            $(window).on(events);\r\n\r\n        } else {\r\n            events = {\r\n                \"mousemove\": (ev) => {\r\n                    this._mouse.x = ev.layerX;\r\n                    this._mouse.y = ev.layerY;\r\n                    this._mouse.screenX = ev.layerX;\r\n                    this._mouse.screenY = ev.layerY;\r\n                },\r\n                \"mousedown\": (ev) => {\r\n                    if(ev.button == 0) {                 \r\n                        this._mouse.buttons.left = true;\r\n                        this._mouse.buttons.leftFire = false;\r\n                        this._mouse.target = ev.target;\r\n                    }\r\n                },\r\n                \"mouseup\": (ev) => {\r\n                    if(ev.button == 0) {\r\n                        this._mouse.buttons.left = false;\r\n                        this._mouse.buttons.leftFire = true;\r\n\r\n                        this._blockRect.isDrawing = false;\r\n                    }\r\n                }\r\n            }         \r\n            \r\n            for(let k in events) {\r\n                window.addEventListener(k, events[k], false);\r\n            }                 \r\n        }\r\n\r\n       \r\n  \r\n    }\r\n\r\n    setTileId(tileId) {\r\n        if(!this._tilemap) return;\r\n        this._tilemap.setTileId(tileId);\r\n    }\r\n\r\n    /**\r\n     * 레이어를 토글하는 기능을 수행합니다.\r\n     */\r\n    initWithMapLayers() {\r\n        const children = $(\"ul.aside__tabs__maptree-child-tree li i\").children();\r\n        let target = null;\r\n\r\n        // 레이어 항목에서 눈 아이콘을 추가합니다.\r\n        children.each((index, elem) => {\r\n            const e = e.get(0);\r\n            elem.click(() => {\r\n                e.className = e.className.includes(\"slash\") ? \"far fa-eye\":\"far fa-eye-slash\";\r\n            });\r\n        });\r\n\r\n        // 레이어 항목에서 눈 아이콘을 누르면 눈을 감고 있는 아이콘(슬래쉬가 쳐진 아이콘)으로 토글합니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li i\").on(\"click\", (ev) => {\r\n            const target = $(ev.currentTarget);\r\n            const parentNode = $(ev.currentTarget).parent();\r\n            const layerId = parentNode.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            if(target.hasClass(\"fa-eye\")) {\r\n                target.removeClass(\"fa-eye\")\r\n                    .addClass(\"fa-eye-slash\");\r\n            } else {\r\n                target.removeClass(\"fa-eye-slash\")\r\n                    .addClass(\"fa-eye\");                \r\n            }\r\n\r\n            tilemap.toggleLayerVisibility(layerId);\r\n        });\r\n\r\n        // 눈 아이콘을 선택했을 때 선택 영역을 강조하며 선택되지 않은 영역은 강조하지 않습니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li\").on(\"click\", (ev) => {\r\n            const elem = $(ev.currentTarget).css({\r\n                \"backgroundColor\": \"var(--dark-selection-color)\"\r\n            });\r\n            $(\"ul.aside__tabs__maptree-child-tree li\").not(elem).css({\r\n                \"backgroundColor\": \"rgba(255, 255, 255, 0)\"\r\n            });\r\n\r\n            const layerId = elem.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            // 타일맵을 지우고 다시 그립니다.\r\n            tilemap.setCurrentLayerId(layerId);\r\n            tilemap.clear();\r\n            tilemap.draw();\r\n            tilemap.updateAlphaLayers();\r\n        });\r\n\r\n        $(\"ul.aside__tabs__maptree-child-tree li:first-child\").trigger(\"click\");\r\n    }\r\n\r\n    start() {\r\n        this.initMembers();\r\n        this.initWithMouseEvent();\r\n\r\n        // 모든 컴포넌트가 초기화된 이후 시점에 특정 작업을 수행합니다.\r\n        this.initWithComponents()\r\n            .then(ret => {\r\n                this.initWithMapLayers();     \r\n                this._isReady = true;       \r\n            }).catch(err => {\r\n                console.warn(err);\r\n                this._isReady = false;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 매 프레임마다 반복 실행되는 메소드입니다.\r\n     * @param {Number}} deltaTime \r\n     */\r\n    update(deltaTime) {\r\n\r\n        if(!this._isReady) return;\r\n\r\n        // 400ms가 지났을 때 마다 무언가를 실행합니다.\r\n        if(deltaTime - this._now >= 400) {\r\n            this._now = deltaTime;\r\n        }\r\n\r\n        this.updateComponents();\r\n\r\n        this._mouse.buttons.leftFire = false;\r\n    }\r\n\r\n    updateComponents() {        \r\n        const target = this._mouse.target;\r\n\r\n        if(!target) {\r\n            return;\r\n        }\r\n        \r\n        const id = target.id;\r\n        const mouse = this._mouse;\r\n\r\n        this._menu.update(target, mouse);\r\n\r\n        if(!this._menu.isMenuOpen()) {\r\n            switch(id) {\r\n                case \"tileset-canvas\":\r\n                case \"view\":\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tilesetMarker.update(mouse);\r\n                    }\r\n                    break;\r\n                case \"contents__main-canvas\":\r\n                    if(this._mouse.buttons.left) {\r\n                        this._tilemap.update(mouse);                                        \r\n                    }\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tileMarker.update(mouse);    \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} elem \r\n     * @param {Number} id \r\n     */\r\n    onLoad(elem, id) {\r\n        // if(this.cache[id]) {\r\n        //     const self = this.cache[id];\r\n        //     this.cache[id].onLoad(elem, self);\r\n        // }\r\n        WindowCreator.onLoad(elem, id);\r\n    }\r\n\r\n    /**\r\n     * @return {App}\r\n     */\r\n    static GetInstance() {\r\n        if(!App.Instance) {\r\n            App.Instance = new App();\r\n        }\r\n        \r\n        return App.Instance;\r\n    }\r\n}\r\n\r\nApp.Instance = null;\r\n\r\n//==========================================================\r\n// Main\r\n//==========================================================\r\n class Main {\r\n    static start() {\r\n        $(async () => {\r\n            window.app = App.GetInstance();\r\n            window.app.start();\r\n            this.update();                \r\n        });\r\n    }\r\n\r\n    static update(deltaTime) {\r\n        window.app.update(deltaTime);\r\n        window.requestAnimationFrame(Main.update);\r\n    }    \r\n}\r\n\r\nMain.start();"],"sourceRoot":""}