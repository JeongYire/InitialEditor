{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/models/Model.js","webpack:///./js/models/GamePropertiesWindow.js","webpack:///./js/controllers/BaseController.js","webpack:///./js/controllers/GamePropertiesWindowController.js","webpack:///./js/Component.js","webpack:///./js/MenuComponent.js","webpack:///./js/tilesetMarker.js","webpack:///./js/Tilemap.js","webpack:///./js/camelCase.js","webpack:///./js/config.js","webpack:///./js/TilesetCanvas.js","webpack:///./js/TileMarker.js","webpack:///./js/MenuService.js","webpack:///./js/Rectangle.js","webpack:///./js/models/TilesetWindow.js","webpack:///./js/controllers/TilesetWindowController.js","webpack:///./js/App.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Model","this","_data","getData","width","height","parentId","id","zIndex","path","position","display","config","initMembers","data","initWithCanvas","_config","_isValid","_uniqueId","Error","_element","$","css","attr","draggable","snap","hide","resizable","containment","append","navigator","userAgent","match","show","fadeOut","remove","GetInstance","cache","Promise","resolve","reject","xhr","XMLHttpRequest","url","location","href","slice","lastIndexOf","open","onload","status","responseText","onerror","send","load","then","result","html","catch","err","console","warn","elem","self","addEventHandlers","super","onLoad","parentNode","querySelector","onclick","ev","prop","inp","find","gameName","val","gameFolder","author","alert","JSON","stringify","on","onClick","eq","onOkButton","Component","args","start","_isActiveEvent","_isMenuOpen","rect","getBoundingClientRect","_originalPos","x","y","target","mouse","is","className","buttons","leftFire","hideMenu","_tileWidth","TILE_WIDTH","_tileHeight","TILE_HEIGHT","_isReady","initWithElement","active","parent","child","document","removeChild","_isDraw","_isClicked","_blockSize","BlockSize","setParent","touches","offset","top","img","mapCols","Math","floor","tilesetWidth","tilesetHeight","tw","th","nx","ny","targetX","targetY","left","log","window","app","setTileId","_x","_y","_width","_height","_parent","_tileset","_mapCols","MAP_COLS","_mapRows","MAP_ROWS","_tileId","_mouseX","_mouseY","_currentLayer","_autoTileIndexedList","_autoTileTextureList","_tileType","_mapWidth","round","SCREEN_WIDTH","_mapHeight","SCREEN_HEIGHT","_layerCount","LAYERS","localStorage","getItem","Array","tilesetImg","test","_penType","maxZ","maxWidth","maxHeight","z","set","tileId","min","max","layerId","option","resolution","devicePixelRatio","view","autoDensity","transparent","innerHeight","innerWidth","_app","PIXI","Application","_layerContainer","Container","interactive","onMouseMove","stage","addChild","_tilesets","push","Texture","from","initWithDrawingType","takeScreenshot","stopPropagation","renderer","extract","canvas","toBlob","b","a","createElement","body","download","URL","createObjectURL","preventDefault","click","global","tilesets","isArray","length","dx","dy","texture","crop","Rectangle","baseTexture","mx","my","mapX","mapY","mask","forEach","e","tileID","setData","_dirty","sx","sy","ex","ey","indexOf","penType","drawTile","drawRect","draw","children","removeChildren","cropTexture","visible","currentLayer","filter","layer","alpha","clear","mapWidth","mapHeight","container","sprite","Sprite","getTileCropTexture","toCamelCase","nodes","split","nodesTail","concat","map","toUpperCase","getClassName","str","TRANSPARENT_COLOR_GROUP","TILESET_IMGAGES","TilesetCanvas","_tilesetImgages","loadTilesets","count","createCanvas","canvasWidth","canvasHeight","_canvas","prepend","_context","getContext","ctx","acc","maxH","naturalWidth","naturalHeight","setTransform","imageSmoothingEnabled","drawImage","menu","file","action","initWithGamePropertiesWindow","edit","scale","tools","initWithTilesetWindow","game","help","size","_menuComponent","_isClickedMenu","changeMenuLocaleAsPersonalize","changeToolbarIconOnMobileDevice","addMenuEventHandlers","langCode","language","each","index","type","res","font","text","_index","_elem","_node","menuNode","_type","_res","_name","childNodes","nodeType","textContent","matchMedia","matches","addClass","resizeConfig","removeClass","EMPTY","_mouse","screenX","screenY","_blockRect","isDrawing","_now","performance","now","title","_components","_menu","_tilesetCanvas","ret","_tilesetMarker","_tilemap","_tileMarker","component","layerX","layerY","events","isMobileDevice","touchEvent","clientX","clientY","button","k","addEventListener","_gamePropertiesWindow","render","setUniqueId","_tilesetWindow","includes","currentTarget","tilemap","hasClass","toggleLayerVisibility","not","setCurrentLayerId","updateAlphaLayers","trigger","initWithMouseEvent","initWithComponents","initWithMapLayers","deltaTime","updateComponents","update","isMenuOpen","Instance","Main","async","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Model {\r\n    \r\n    constructor() {\r\n        this._data = this.getData();\r\n    }\r\n\r\n    /**\r\n     * @return {{\r\n     *  width: String,\r\n     *  height: String,\r\n     *  parentId: String,\r\n     *  id: String,\r\n     *  zIndex: String,\r\n     *  path: String,\r\n     * }}\r\n     */\r\n    getData() {\r\n        return {\r\n        }; \r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n}","import Model from \"./Model.js\";\r\n\r\nexport default class GamePropertiesWindowModel extends Model {\r\n\r\n    getData() {\r\n        return {\r\n            width: \"240px\",\r\n            height: \"100%\",\r\n            parentId: \".windows-container\",\r\n            id: \"newContainer\", /** ID에 \"Window\"가 들어가면 안됩니다 */\r\n            zIndex: \"10\",\r\n            path: \"view/windows/context.html\",\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n        }; \r\n    }\r\n\r\n}","import App from \"../App\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class BaseController {\r\n\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        this.initMembers(config.data);\r\n        this.initWithCanvas();\r\n    }\r\n\r\n    initMembers(config) {\r\n\r\n        /**\r\n         * 실제 HTML 파일이 있는 위치\r\n         */\r\n        this._config = config;\r\n        this._isValid = false;\r\n        this._uniqueId = null;\r\n    }    \r\n\r\n    setUniqueId(id) {\r\n        this._uniqueId = id;\r\n    }\r\n\r\n    initWithCanvas() {\r\n        const config = this._config;\r\n\r\n        if(!config.parentId || !config.id) {\r\n            throw new Error(\"The parent element is not exist!\");\r\n        }\r\n\r\n        this._element = $(\"<div></div>\")\r\n            .css(config)\r\n            .attr(\"id\", config.id)\r\n            .draggable({ snap: \".container\" });\r\n\r\n        this.hide();\r\n\r\n        $(`#${config.id}`).resizable({containment: config.parentId});\r\n\r\n        $(config.parentId).append(this._element);\r\n\r\n    }\r\n\r\n    isMobile() {\r\n        const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/i;\r\n        return !!navigator.userAgent.match(r);\r\n    }    \r\n\r\n    hide() {\r\n        $(this._config.parentId).hide();    \r\n        this._element.hide();\r\n        this._isValid = false;\r\n    }\r\n\r\n    show() {\r\n        this._element.show();\r\n        $(this._config.parentId).show();\r\n        this._isValid = true;\r\n        $(\".darken, .windows-container\").css(\"left\", \"0\");\r\n    }    \r\n\r\n    remove() {\r\n        this._element.fadeOut(700, () => {\r\n            this._element.remove();\r\n        });\r\n        $(\".darken, .windows-container\").css(\"left\", \"-9999px\");\r\n        delete App.GetInstance().cache[this._uniqueId];\r\n    }\r\n\r\n    isMobile() {\r\n        const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/i;\r\n        return !!navigator.userAgent.match(r);\r\n    }     \r\n    \r\n    load() {\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            const path = this._config.path;\r\n            const url = `${location.href.slice(0,location.href.lastIndexOf(\"/\"))}/${path}`;\r\n            xhr.open(\"GET\", url);\r\n            xhr.onload = function() {\r\n                if(xhr.status === 200) {\r\n                    resolve(xhr.responseText);\r\n                }\r\n            }\r\n            xhr.onerror = reject;\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    async render() {\r\n        await this.load().then(result => {\r\n            this._element.html(result);\r\n        }).catch(err => {\r\n            console.warn(err);\r\n        });\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        this.addEventHandlers(elem, self);\r\n    }    \r\n\r\n    addEventHandlers() {\r\n\r\n    }\r\n\r\n}","import GamePropertiesWindowModel from \"../models/GamePropertiesWindow.js\";\r\nimport BaseController from \"./BaseController.js\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class GamePropertiesWindowController extends BaseController {\r\n\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        super( config );\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        super.onLoad(elem, self);\r\n        const parent = elem.parentNode;\r\n        parent.querySelector(\".newWindow__control-box p i\").onclick = () => {\r\n            self.remove();\r\n            \r\n        };\r\n        this.show();\r\n        $(\".darken, .windows-container\").css(\"left\", \"0\");\r\n    }\r\n\r\n    onClick(ev) {\r\n        // 창을 화면에 보이게 합니다.\r\n        this.show();\r\n        // 펼쳐진 메뉴를 다시 접습니다.\r\n        $(\"#none\").prop(\"checked\", true);        \r\n    }\r\n\r\n    onOkButton(ev) {\r\n        const container = $(\"#newContainer #newWindow\");\r\n        const inp = container.find(\"input\");\r\n        const data = {\r\n            gameName: $(inp[0]).val(),\r\n            gameFolder: $(inp[1]).val(),\r\n            author: $(inp[2]).val(),\r\n        };\r\n\r\n        alert(JSON.stringify(data, null, \"\\t\"));\r\n        this.remove();\r\n    }\r\n\r\n    addEventHandlers(elem, self) {\r\n        $(`.file-menu-new-button`).on(\"click\", ev => this.onClick(ev));\r\n        \r\n        const container = $(\"#newContainer #newWindow\");\r\n        const okButton = container.find(\"div.panel\");\r\n        okButton.eq(0).on(\"click\", ev => {\r\n            this.onOkButton(ev); \r\n        });\r\n    }\r\n}\r\n","class Component {\r\n    constructor(...args) {\r\n        this.initMembers(...args);\r\n        this.start(...args);\r\n    }\r\n\r\n    initMembers(...args) {\r\n        this._isActiveEvent = false;\r\n    }\r\n\r\n    active() {\r\n        this._isActiveEvent = true;\r\n    }\r\n    \r\n    deactive() {\r\n        this._isActiveEvent = false;\r\n    }\r\n\r\n    isActiveEvent() {\r\n        return this._isActiveEvent;\r\n    }\r\n\r\n    start(...args) {\r\n        return this;\r\n    }\r\n\r\n    update(...args) {\r\n\r\n    }\r\n}\r\n\r\nclass BasicComponent extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n    }\r\n}\r\n\r\nexport { Component, BasicComponent };","import {Component} from \"./Component.js\";\r\n\r\nclass MenuComponent extends Component {\r\n    start() {\r\n        this._isMenuOpen = false;\r\n        $(\".toolbar\").draggable({ snap: \".menu\" });\r\n        $(\".aside__tabs\").resizable({\r\n            containment: \"#aside\"\r\n        });\r\n\r\n        const rect = $(\".toolbar\").get(0).getBoundingClientRect();\r\n        this._originalPos = {\r\n            x: rect.x,\r\n            y: rect.y\r\n        };\r\n    }\r\n\r\n    isMenuOpen() {\r\n        return this._isMenuOpen;\r\n    }\r\n\r\n    hideMenu() {\r\n        $(\"#none\").prop(\"checked\", true);\r\n        this._isMenuOpen = false;      \r\n    }\r\n\r\n    update(target, mouse) {\r\n        if($(\".toolbar\").is('.ui-draggable-dragging')) {\r\n            const rect = $(\".toolbar\").get(0).getBoundingClientRect();\r\n        }\r\n\r\n        // 최상위 노드를 선택합니다.\r\n        let parentNode = target.parentNode;\r\n        while(parentNode != null && parentNode.className != \"menu__main\") {\r\n            parentNode = parentNode.parentNode;\r\n        }\r\n\r\n        const isSomeMenuOpened = $(\"ul[class*='sub']\").is(\":visible\");\r\n\r\n        // 최상위 노드가 메인 메뉴라면\r\n        if(parentNode && parentNode.className === \"menu__main\") {\r\n            // 메뉴가 열린 것으로 간주\r\n            this._isMenuOpen = true;\r\n        } else {\r\n            if(this._isMenuOpen && mouse.buttons.leftFire) {\r\n                this.hideMenu();\r\n            }                                              \r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport {MenuComponent};","import {Component} from \"./Component.js\";\r\n\r\n/**\r\n * @class TilesetMarker\r\n */\r\nclass TilesetMarker extends Component {\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._tileWidth = this._config.TILE_WIDTH;\r\n        this._tileHeight = this._config.TILE_HEIGHT;\r\n        this._isReady = false;\r\n        \r\n        this.initWithElement();\r\n        this.active();\r\n    }\r\n\r\n    initWithElement() {\r\n        const parent = $(\"#view\");\r\n        let child = null;\r\n        if((child = document.querySelector(\"#tileset-marker\"))) {\r\n            parent.get(0).removeChild(child);\r\n            return;\r\n        }\r\n\r\n        this._element = $(\"<div></div>\", {\"id\" : \"tileset-marker\"})\r\n            .css({\r\n                \"min-width\": `${this._tileWidth}px`,\r\n                \"min-height\": `${this._tileHeight}px`,\r\n                \"width\": `${this._tileWidth}px`,\r\n                \"height\": `${this._tileHeight}px`,\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"margin\": \"0\",\r\n                \"padding\": \"0\",\r\n                \"border\": \"2px dotted white\",\r\n                \"z-index\": \"50\",\r\n                \"box-sizing\": \"border-box\",\r\n            });\r\n\r\n        this._isReady = true;\r\n        \r\n        parent.append(this._element);\r\n\r\n        this._isDraw = false;\r\n        this._isClicked = false;\r\n        this._blockSize = new BlockSize(0, 0, this._tileWidth, this._tileHeight);\r\n        this._blockSize.setParent(this._element);\r\n\r\n        this.touches = [\r\n            {x: 0, y: 0},\r\n            {x: 0, y: 0},\r\n        ]\r\n\r\n        const topY = $(\"#view\").offset().top;\r\n\r\n        // TODO: 마우스 좌표가 잘못되어있음 (수정 요망) => 수정 불가능\r\n        // $(\"#view canvas\")\r\n        //     .on(\"mousedown\", (ev) => {\r\n        //         this._isDraw = true;\r\n        //         this._isClicked = true;\r\n\r\n        //         this.touches[0].x = ev.clientX;\r\n        //         this.touches[0].y = ev.clientY - topY;\r\n\r\n        //         this._blockSize.width = this._tileWidth;\r\n        //         this._blockSize.height = this._tileHeight - topY;\r\n\r\n        //         this._blockSize.refresh();\r\n        //     })\r\n        //     .on(\"mousemove\", (ev) => {\r\n        //         if(this._isClicked) {\r\n        //             this._isDraw = true;\r\n        //             this._blockSize._x = this.touches[0].x;\r\n        //             this._blockSize._y = this.touches[0].y - topY;\r\n        //             this._blockSize.width = ev.clientX - $(\"#view canvas\").offset().left;\r\n        //             this._blockSize.height = (ev.clientY - topY) - ($(\"#view canvas\").offset().top);\r\n        //             this._blockSize.refresh();\r\n        //             this.touches[1].x = ev.clientX;\r\n        //             this.touches[1].y = ev.clientY;                    \r\n        //         }\r\n        //     })\r\n        //     .on(\"mouseup\", (ev) => {\r\n        //         this._isDraw = false;\r\n        //         this._isClicked = false;\r\n        //         this._blockSize._x = this.touches[0].x;\r\n        //         this._blockSize._y = this.touches[0].y;\r\n        //         this._blockSize.width = ev.clientX - $(\"#view canvas\").offset().left;\r\n        //         this._blockSize.height = (ev.clientY - topY) - $(\"#view canvas\").offset().top;\r\n        //         this.touches[1].x = ev.clientX;\r\n        //         this.touches[1].y = ev.clientY;   \r\n        //         this._blockSize.refresh();                                 \r\n        //     });\r\n    }\r\n\r\n    start() {\r\n        \r\n    }\r\n\r\n    update(...args) {\r\n        if(!this._isReady) {\r\n            return;\r\n        }\r\n\r\n        const target = args[0].target;\r\n\r\n        const img = $(\"#view canvas\");\r\n        const mapCols = Math.floor(img.width() / this._config.TILE_WIDTH);\r\n        const tilesetWidth = img.width();\r\n        const tilesetHeight = img.height();\r\n        const topY = 0;\r\n\r\n        const mouse = args[0];\r\n\r\n        const tw = this._tileWidth;\r\n        const th = this._tileHeight;\r\n        let nx = Math.floor(mouse.x / tw) * tw;\r\n        let ny = Math.floor(mouse.y / th) * th;\r\n\r\n        const targetX = nx / tw;\r\n        const targetY = (ny - topY) / th;\r\n\r\n        if(nx < 0) {\r\n            nx = 0;\r\n        }\r\n        if(nx > tilesetWidth - tw) {\r\n            nx = tilesetWidth - tw;\r\n        }\r\n        if(ny < 0) {\r\n            ny = 0;\r\n        }\r\n        if(ny > tilesetHeight) {\r\n            ny = tilesetHeight - th + topY;\r\n        }\r\n\r\n        this._element.css({\r\n            position : \"absolute\",\r\n            left : nx + \"px\",\r\n            top : ny - topY + \"px\",\r\n        });\r\n\r\n        // if(args[0].button == 0) {\r\n        //     $(\"#view\").trigger(\"mousedown:marker\", [left, top]);\r\n        // } else {\r\n        //     $(\"#view\").trigger(\"mouseup:marker\", [left, top]);\r\n        // }\r\n\r\n        console.log(\"타일 ID : \" + (targetY * mapCols + targetX));\r\n\r\n        window.app.setTileId((targetY * mapCols + targetX));\r\n    }\r\n\r\n}\r\n\r\nclass BlockSize {\r\n    constructor(x, y, width, height) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n        this._parent = null;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    setParent(parent) {\r\n        this._parent = parent;\r\n    }\r\n\r\n    refresh() {\r\n        this._parent.css({\r\n            width: this.width,\r\n            height: this.height,\r\n            left: this._x,\r\n            top: this._y,\r\n            position: \"absolute\"\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {TilesetMarker};","// import pixi from \"../libs/pixi.js\";\r\n// //@ts-check\r\nimport {\r\n    Component\r\n} from \"./Component.js\";\r\n\r\nexport default class Tilemap extends Component {\r\n\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._tileset = $(\"#view canvas\").get(0);\r\n        this._tileWidth = this._config.TILE_WIDTH;\r\n        this._tileHeight = this._config.TILE_HEIGHT;\r\n        this._mapCols = this._config.MAP_COLS;\r\n        this._mapRows = this._config.MAP_ROWS;\r\n        this._tileId = 0;\r\n        this._mouseX = 0;\r\n        this._mouseY = 0;\r\n        this._currentLayer = 0;\r\n        this._autoTileIndexedList = [];\r\n        this._autoTileTextureList = {};\r\n        \r\n        // 1이면 오토타일, 0이면 일반 타일\r\n        this._tileType = 0;\r\n\r\n        this._mapWidth = Math.round(this._config.SCREEN_WIDTH / this._tileWidth);\r\n        this._mapHeight = Math.round(this._config.SCREEN_HEIGHT / this._tileHeight);\r\n        this._layerCount = this._config.LAYERS;\r\n\r\n        if(!(this._data = localStorage.getItem(\"tileMapData\"))) {\r\n            this._data = new Array(this._mapWidth * this._mapHeight * this._config.LAYERS);\r\n        }\r\n        \r\n        const tilesetImg = $(\"#view canvas\").get(0);\r\n        if(!tilesetImg) {\r\n            throw new Error(\"Cant't find tileset\");\r\n        }\r\n        \r\n        this._mapCols = Math.floor((tilesetImg.width) / this._tileWidth);\r\n        this._mapRows = Math.floor((tilesetImg.width) / this._tileWidth);    \r\n        \r\n        this.active();\r\n    }\r\n\r\n    isMobileDevice() {\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    initWithDrawingType() {\r\n        this._penType = 0;\r\n        $(\"#pen-tool\").on(\"click\", () => {\r\n            this._penType = 0;\r\n            console.log(\"펜\");\r\n        });\r\n        $(\"#square-tool\").on(\"click\", () => {\r\n            this._penType = 1;\r\n            console.log(\"사각형\");\r\n        });\r\n    }\r\n\r\n    initWithLayers() {\r\n        const maxZ = this._config.LAYERS;\r\n        const maxWidth = Math.round(this._config.SCREEN_WIDTH / this._tileWidth);\r\n        const maxHeight = Math.round(this._config.SCREEN_HEIGHT / this._tileHeight);        \r\n\r\n        for(let z = 0; z < maxZ; z++) {\r\n            for(let y = 0; y < maxHeight; y++) {\r\n                for(let x = 0; x < maxWidth; x++) {\r\n                    this.set(x, y, z, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setData(x, y, z, tileId) {\r\n        if(x < 0) x = 0;\r\n        if(x > this._mapWidth - 1) x = this._mapWidth - 1;\r\n        y = Math.min(Math.max(0, y), this._mapHeight - 1);\r\n        z = Math.min(Math.max(0, z), this._config.LAYERS - 1);\r\n\r\n        const id = (this._mapWidth * this._mapHeight * z) + (this._mapWidth * y) + x;\r\n        this._data[id] = tileId;\r\n    }\r\n\r\n    getData(x, y, z) {\r\n        if(x < 0) x = 0;\r\n        if(x > this._mapWidth - 1) x = this._mapWidth - 1;\r\n        y = Math.min(Math.max(0, y), this._mapHeight - 1);        \r\n        z = Math.min(Math.max(0, z), this._config.LAYERS - 1);\r\n\r\n        const id = (this._mapWidth * this._mapHeight * z) + (this._mapWidth * y) + x;\r\n        return this._data[id] || 0;\r\n    }\r\n\r\n    setTileId(tileId) {\r\n        this._tileId = tileId;\r\n    }\r\n\r\n    getTileId() {\r\n        return this._tileId;\r\n    } \r\n\r\n    setCurrentLayerId(layerId) {\r\n        this._currentLayer = layerId;\r\n    }\r\n\r\n    getCurrentLayerId() {\r\n        return this._currentLayer;\r\n    }\r\n\r\n    start() {\r\n\r\n        let option = {\r\n            width: this._config.SCREEN_WIDTH,\r\n            height: this._config.SCREEN_HEIGHT,\r\n            // backgroundColor: 0x00000000,\r\n            resolution: window.devicePixelRatio || 1,\r\n            view: $(\"#contents__main-canvas\").get(0),\r\n            autoDensity: true,\r\n            transparent: false,\r\n        };\r\n\r\n        // $(`#contents__main-canvas`).resizable();\r\n\r\n        // if(this.isMobileDevice()) {\r\n            option.height = $(window).innerHeight() - $(\".toolbar\").innerHeight() - 30;\r\n            option.width = $(window).innerWidth() - $(\".aside__tabs\").innerWidth() - 10;\r\n        // }\r\n\r\n        this._app = new PIXI.Application(option);\r\n\r\n        this._layerContainer = new PIXI.Container();\r\n        this._layerContainer.interactive = true;\r\n        this._layerContainer.on(\"mousemove\", this.onMouseMove.bind(this));\r\n        this._layerContainer.on(\"pointermove\", this.onMouseMove.bind(this));\r\n        this.app.stage.addChild(this._layerContainer);   \r\n\r\n        for(let i = 0; i < this._config.LAYERS; i++) {\r\n            this._layerContainer.addChild(new PIXI.Container());   \r\n        }\r\n\r\n        this._tilesets = [];\r\n        this._tilesets.push(PIXI.Texture.from(this._tileset));  \r\n        \r\n        this.initWithDrawingType();\r\n\r\n        $(\"#take-screenshot\").on(\"click\", (ev) => {\r\n            this.takeScreenshot();\r\n\r\n            ev.stopPropagation();\r\n        });\r\n\r\n    }\r\n\r\n    get app() {\r\n        return this._app;\r\n    }\r\n\r\n    /**\r\n     * TODO: 클립보드에 저장하는 방식으로 변환할 것.\r\n     * @link https://developer.mozilla.org/ko/docs/Web/API/Clipboard/write\r\n     */\r\n    takeScreenshot() {\r\n        const app = this._app;\r\n        if(!app) return;\r\n        app.renderer.extract.canvas(app.stage).toBlob((b) => {\r\n            const a = document.createElement('a');\r\n            document.body.append(a);\r\n            a.download = 'screenshot';\r\n            a.href = URL.createObjectURL(b);\r\n            a.onclick = function(ev) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            };\r\n            a.click();\r\n            a.remove();\r\n\r\n        }, 'image/png');        \r\n    }\r\n\r\n    onMouseMove(ev) {\r\n        this._mouseX = ev.data.global.x;\r\n        this._mouseY = ev.data.global.y;\r\n    }\r\n\r\n    /**\r\n     * Get a tileset image from the tileset collection.\r\n     */\r\n    getTileset() {\r\n        const tilesets = this._tileset;\r\n\r\n        if(!tilesets) {\r\n            throw new Error(\"Can't find the tileset from the memory.\");\r\n        }\r\n\r\n        if(Array.isArray(tilesets) && tilesets.length <= 0) {\r\n            throw new Error(\"The tileset image can't create correctly.\");\r\n        }\r\n\r\n        return tilesets[0];\r\n    }\r\n    \r\n    cropTexture(dx, dy, texture) {\r\n        const crop = new PIXI.Rectangle(dx, dy, this._tileWidth, this._tileHeight);\r\n        const cropTexture = new PIXI.Texture(texture.baseTexture, crop);\r\n        \r\n        return cropTexture;\r\n    }\r\n\r\n    collectAutoTileID(mx, my) {\r\n        const mapX = Math.floor(mx / this._tileWidth);\r\n        const mapY = Math.floor(my / this._tileHeight);\r\n        const layerId = this._currentLayer;\r\n        let mask = 0x00;\r\n        const bits = [\r\n            this.getData(mapX + 0, mapY - 1, layerId) <= 0, // 북\r\n            this.getData(mapX + 1, mapY - 1, layerId) <= 0, // 동북\r\n            this.getData(mapX + 1, mapY + 0, layerId) <= 0, // 동\r\n            this.getData(mapX + 1, mapY + 1, layerId) <= 0, // 동남\r\n            this.getData(mapX + 0, mapY + 1, layerId) <= 0, // 남\r\n            this.getData(mapX - 1, mapY + 1, layerId) <= 0, // 남서\r\n            this.getData(mapX - 1, mapY + 0, layerId) <= 0, // 서\r\n            this.getData(mapX - 1, mapY - 1, layerId) <= 0 // 북서\r\n        ];\r\n\r\n        bits.forEach((e, i, a) => {\r\n            if(e === true) {\r\n                mask += (1 << i);\r\n            }\r\n        });\r\n\r\n        return mask;\r\n    }    \r\n\r\n    drawTile(mx, my, tileID) {\r\n        let mapX = Math.floor(mx / this._tileWidth);\r\n        let mapY = Math.floor(my / this._tileHeight);\r\n\r\n        console.log(mx, my, mapX, mapY);\r\n\r\n        this.setData(mapX, mapY, this._currentLayer, tileID);\r\n\r\n        this._dirty = true;\r\n    }\r\n\r\n    /**\r\n     * Print tiles to certain area.\r\n     * @param {Number} sx \r\n     * @param {Number} sy \r\n     * @param {Number} ex \r\n     * @param {Number} ey \r\n     * @param {Number} tileID \r\n     */\r\n    drawRect(sx, sy, ex, ey) {\r\n\r\n        let mx = Math.floor(sx / this._tileWidth);\r\n        let my = Math.floor(sy / this._tileHeight);       \r\n\r\n        const tileID = this._tileId;\r\n        \r\n        const width = mx + ex;\r\n        const height = my + ey;\r\n\r\n        for(let y = my; y < height; y++) {\r\n            for(let x = mx; x < width; x++) {\r\n                this.setData(x, y, this._currentLayer, tileID);\r\n            }\r\n        }        \r\n\r\n        this._dirty = true;\r\n    }\r\n\r\n    isAutoTile(tileID) {\r\n        return this._autoTileIndexedList.indexOf(tileId) >= 0;\r\n    }\r\n\r\n    update(...args) {\r\n        const penType = this._penType;\r\n        const tileId = this._tileId;\r\n\r\n        // if(this.isAutoTile(tileId)) {\r\n        //     this._tileId = this.collectAutoTileID(this._mouseX, this._mouseY);\r\n        //     this._tileset = this._autoTileTextureList[tileId];\r\n        //     this._tileType = 1;\r\n        // } else {\r\n        //     this._tileType = 0;\r\n        // }\r\n\r\n        switch(penType) {\r\n            case 0: \r\n                this.drawTile(this._mouseX, this._mouseY, tileId);\r\n                break;\r\n            case 1:\r\n                this.drawRect(this._mouseX, this._mouseY, 20, 5);\r\n                break;\r\n        }\r\n  \r\n        if(this._dirty) {\r\n            this.draw();\r\n            this._dirty = false;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._layerContainer.children.forEach(i => {\r\n            i.removeChildren();\r\n        });\r\n    }\r\n\r\n    getTileCropTexture(tileID) {\r\n        let texture = PIXI.Texture.from(this._tileset);\r\n        const mapCols = Math.floor(texture.width / this._tileWidth);\r\n        const mapRows = Math.floor((texture.height) / this._tileHeight);\r\n        const dx = (tileID % mapCols) * this._tileWidth;\r\n        const dy = Math.floor(tileID / mapCols) * this._tileHeight;        \r\n        const cropTexture = this.cropTexture(dx, dy, texture);\r\n\r\n        return cropTexture;\r\n    }\r\n\r\n    toggleLayerVisibility(layerId) {\r\n        if(!this._layerContainer) return;\r\n        const children = this._layerContainer.children;\r\n        children[layerId].visible = !children[layerId].visible;\r\n    }\r\n\r\n    updateAlphaLayers() {\r\n        const currentLayer = this._currentLayer;\r\n        const children = this._layerContainer.children;\r\n        const layers = children.filter((e, i, a) => {\r\n            return i !== currentLayer;\r\n        });\r\n\r\n        layers.forEach(layer => {\r\n            layer.alpha = 0.25;\r\n        });\r\n\r\n        children[currentLayer].alpha = 1.0;\r\n    }\r\n\r\n    draw() {        \r\n        this.clear();\r\n\r\n        const mapWidth = this._mapWidth;\r\n        const mapHeight = this._mapHeight;\r\n\r\n        for(let z = 0; z < this._config.LAYERS; z++) {\r\n            const container = this._layerContainer.children[z];\r\n            for(let y = 0; y < mapHeight; y++) {\r\n                for(let x = 0; x < mapWidth; x++) {\r\n                    const tileID = this.getData(x, y, z);\r\n                    if(!tileID) continue;\r\n                    const sprite = new PIXI.Sprite(this.getTileCropTexture(tileID));\r\n                    sprite.x = x * this._tileWidth;\r\n                    sprite.y = y * this._tileHeight;\r\n                    container.addChild(sprite);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","function toCamelCase(name) {\r\n    const snake = name || \"\";\r\n\r\n    let nodes = snake.split(/[\\s\\-]/);\r\n    let nodesTail = nodes.slice(1);\r\n    \r\n    const camel = nodes[0].concat(nodesTail.map(i => i[0].toUpperCase() + i.slice(1)));\r\n    return camel;\r\n}\r\n\r\nfunction getClassName(name) {\r\n    const str = toCamelCase(name);\r\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport default {toCamelCase, getClassName};","const config = {\r\n    SCREEN_WIDTH: 800,\r\n    SCREEN_HEIGHT: 600,\r\n    TILE_WIDTH: 16,\r\n    TILE_HEIGHT: 16,\r\n    MAP_COLS: 32,\r\n    MAP_ROWS: 8,\r\n    LAYERS: 4,\r\n    TRANSPARENT_COLOR_GROUP: [\"#007575\"],\r\n    TILESET_IMGAGES: [\r\n        \"./images/tiles/tileset16-8x13.png\",\r\n        \"./images/tiles/2k_town05.png\",\r\n        \"./images/tiles/2k_town05-01.png\",\r\n    ],\r\n};\r\n\r\nexport {config};","import {config} from \"./config.js\";\r\n\r\nexport default class TilesetCanvas {\r\n    constructor(...args) {\r\n        this.initMembers(...args)\r\n    }\r\n\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._isReady = false;\r\n        this._tilesetImgages = this._config.TILESET_IMGAGES;\r\n    }\r\n\r\n    async start() {\r\n        return this.loadTilesets();\r\n    }\r\n\r\n    async loadTilesets() {\r\n        this._tilesets = [];\r\n\r\n        let count = 0;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            for(let i = 0; i < this._tilesetImgages.length; i++) {\r\n                const elem = $(\"<img>\").attr(\"src\", this._tilesetImgages[i]);   \r\n                elem.on(\"load\", () => {     \r\n                    this._tilesets.push(elem);\r\n                    \r\n                    ++count;\r\n\r\n                    if(count >= this._tilesetImgages.length) {\r\n                        console.log(this._tilesetImgages[i]);\r\n                        this.createCanvas();\r\n                        resolve();\r\n                    }\r\n                });\r\n                elem.on(\"error\", reject);\r\n            }\r\n        });       \r\n    }\r\n\r\n    createCanvas() {\r\n\r\n        const canvasWidth = this._config.TILE_WIDTH * this._config.MAP_COLS;\r\n        const canvasHeight = this._config.TILE_HEIGHT * this._config.MAP_ROWS * 4;\r\n\r\n        this._parent = $(\"#view\");\r\n        this._canvas = $(\"<canvas />\", {\"id\": \"tileset-canvas\"})\r\n            .attr(\"width\", canvasWidth)\r\n            .attr(\"height\", canvasHeight)\r\n            .css({\r\n                \"padding\": \"0\",\r\n                \"margin\": \"0\"\r\n            })\r\n\r\n        this._parent.prepend(this._canvas)\r\n        this._parent.css({\r\n            \"width\": \"100%\",\r\n            \"height\": \"60%\",\r\n        });\r\n\r\n        /**\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this._context = this._canvas.get(0).getContext(\"2d\");\r\n        const ctx = this._context;\r\n\r\n        let acc = 0;\r\n\r\n        let maxW = 0;\r\n        let maxH = 0;\r\n        \r\n        for(let i = 0; i < this._tilesetImgages.length; i++) {\r\n\r\n            /**\r\n             * @type {JQuery}\r\n             */\r\n            const img = this._tilesets[i];\r\n            const width = img.get(0).naturalWidth;\r\n            const height = img.get(0).naturalHeight;   \r\n            \r\n            if(height > acc + height) {\r\n                maxH = acc + height;\r\n                this._canvas.prop(\"height\" , maxH);                \r\n            }\r\n\r\n            ctx.setTransform(1, 0, 0, 1, 0, acc);\r\n            ctx.imageSmoothingEnabled = false;\r\n            ctx.drawImage(img.get(0), 0, 0, width, height);\r\n            acc += height;            \r\n        }\r\n\r\n        this._isReady = true;\r\n    }\r\n\r\n    \r\n}\r\n","import {TilesetMarker} from \"./tilesetMarker.js\";\r\n\r\nexport default class TileMarker extends TilesetMarker {\r\n\r\n    initWithElement() {\r\n        const parent = $(\".contents\");\r\n        let child = null;\r\n        if((child = document.querySelector(\"#tile-marker\"))) {\r\n            parent.get(0).removeChild(child);\r\n            return;\r\n        }\r\n\r\n        this._element = $(\"<div></div>\", {\"id\" : \"tile-marker\"})\r\n            .css({\r\n                \"min-width\": `${this._tileWidth}px`,\r\n                \"min-height\": `${this._tileHeight}px`,\r\n                \"width\": `${this._tileWidth}px`,\r\n                \"height\": `${this._tileHeight}px`,\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"margin\": \"0\",\r\n                \"padding\": \"0\",\r\n                \"border\": \"2px dotted white\",\r\n                \"z-index\": \"0\",\r\n                \"box-sizing\": \"border-box\",\r\n            });\r\n\r\n        this._isReady = true;\r\n        \r\n        parent.append(this._element);\r\n    }\r\n\r\n    update(...args) {\r\n        if(!this._isReady) {\r\n            return;\r\n        }\r\n\r\n        const target = args[0].target;\r\n\r\n        const img = $(\"#contents__main-canvas\");\r\n        const mapCols = Math.floor(img.width() / this._config.TILE_WIDTH);\r\n        const tilesetWidth = img.width();\r\n        const tilesetHeight = img.height();\r\n        const topY = 0;\r\n\r\n        const mouse = args[0];\r\n\r\n        const tw = this._tileWidth;\r\n        const th = this._tileHeight;\r\n        let nx = Math.floor(mouse.x / tw) * tw;\r\n        let ny = Math.floor(mouse.y / th) * th;\r\n\r\n        const targetX = nx / tw;\r\n        const targetY = (ny - topY) / th;\r\n\r\n        if(nx < 0) {\r\n            nx = 0;\r\n        }\r\n        if(nx > tilesetWidth - tw) {\r\n            nx = tilesetWidth - tw;\r\n        }\r\n        if(ny < 0) {\r\n            ny = 0;\r\n        }\r\n        if(ny > tilesetHeight) {\r\n            ny = tilesetHeight - th + topY;\r\n        }\r\n\r\n        this._element.css({\r\n            position : \"absolute\",\r\n            left : nx + \"px\",\r\n            top : ny - topY + \"px\",\r\n        });     \r\n    }    \r\n}","import {Component} from \"./Component.js\";\r\nimport {MenuComponent} from \"./MenuComponent.js\";\r\nimport App from \"./App.js\";\r\nimport GamePropertiesWindowController from \"./controllers/GamePropertiesWindowController.js\";\r\nimport GamePropertiesWindow from \"./models/GamePropertiesWindow.js\";\r\n\r\nconst menu = {\r\n    \"ko\": {\r\n        file: {\r\n            name: \"파일\",\r\n            children: {\r\n                \"file-new\": {\r\n                    name: \"새로 만들기\",\r\n                    children: {},\r\n                    action: function(ev) {\r\n                        App.GetInstance().initWithGamePropertiesWindow();\r\n                    }                    \r\n                },\r\n                \"file-open\": {\r\n                    name: \"파일 열기\",\r\n                    children: {}, \r\n                },\r\n                \"file-close\": {\r\n                    name: \"파일 닫기\",\r\n                    children: {}, \r\n                },\r\n                \"file-save\": {\r\n                    name: \"파일 저장\",\r\n                    children: {}, \r\n                },\r\n                \"file-preferences\": {\r\n                    name: \"환경 설정\",\r\n                    children: {}, \r\n                },\r\n                \"file-export\": {\r\n                    name: \"내보내기\",\r\n                    children: {}, \r\n                },\r\n                \"file-exit\": {\r\n                    name: \"프로그램 종료\",\r\n                    children: {}, \r\n                },\r\n            },\r\n        },\r\n        edit: {\r\n            name: \"편집\",\r\n            children: {\r\n                \"edit-undo\": {\r\n                    name: \"취소\",\r\n                    children: {},\r\n                },\r\n                \"edit-cut\": {\r\n                    name: \"자르기\",\r\n                    children: {}, \r\n                },\r\n                \"edit-copy\": {\r\n                    name: \"복사하기\",\r\n                    children: {}, \r\n                },\r\n                \"edit-paste\": {\r\n                    name: \"붙여넣기\",\r\n                    children: {}, \r\n                },\r\n                \"edit-delete\": {\r\n                    name: \"삭제하기\",\r\n                    children: {}, \r\n                },\r\n            },\r\n        },\r\n        mode: {\r\n            name: \"모드\",\r\n            children: {\r\n                \"mode-map\": {\r\n                    name: \"맵\",\r\n                    children: {},                    \r\n                },\r\n                \"mode-event\": {\r\n                    name: \"이벤트\",\r\n                    children: {}, \r\n                },\r\n                \"mode-region\": {\r\n                    name: \"지역\",\r\n                    children: {}, \r\n                },\r\n            },\r\n        },\r\n        draw: {\r\n            name: \"그리기\",\r\n            children: {\r\n                \"draw-pencil\": {\r\n                    name: \"펜\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-rectangle\": {\r\n                    name: \"정사각형\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-ellipse\": {\r\n                    name: \"직사각형\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-flood-fill\": {\r\n                    name: \"채우기\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"draw-shadow pen\": {\r\n                    name: \"그림자\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n            },\r\n        },\r\n        scale: {\r\n            name: \"배율\",\r\n            children: {\r\n                \"scale-1x\": {\r\n                    name: \"실제 비율\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"scale-2x\": {\r\n                    name: \"2배 축소\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"scale-4x\": {\r\n                    name: \"4배 축소\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"scale-8x\": {\r\n                    name: \"8배 축소\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n            },\r\n        },\r\n        tools: {\r\n            name: \"도구\",\r\n            children: {\r\n                \"tools-database\": {\r\n                    name: \"데이터베이스\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"tools-resource-manager\": {\r\n                    name: \"소재 관리자\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                            \r\n                },\r\n                \"tools-script-eidtor\": {\r\n                    name: \"스크립트 에디터\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                      \r\n                },\r\n                \"tools-sound-test\": {\r\n                    name: \"사운드 테스트\",\r\n                    children: {}, \r\n                },\r\n                \"tools-options\": {\r\n                    name: \"옵션\",\r\n                    children: {}, \r\n                    action: function(ev) {\r\n                        App.GetInstance().initWithTilesetWindow();\r\n                    }\r\n                },\r\n            },\r\n        },\r\n        game: {\r\n            name: \"게임\",\r\n            children: {\r\n                \"game-playtest\": {\r\n                    name: \"플레이 테스트\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        alert(\"플레이 테스트 기능을 지원하지 않습니다.\");\r\n                    },                      \r\n                },\r\n                \"game-fullscreen\": {\r\n                    name: \"전체 화면\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        \r\n                    },                     \r\n                },\r\n                \"game-show-console\": {\r\n                    name: \"콘솔 표시\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        alert(\"웹 버전에서는 콘솔 표시 기능을 지원하지 않습니다.\");\r\n                    },                       \r\n                },\r\n                \"game-folder-open\": {\r\n                    name: \"게임 폴더 열기\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        alert(\"웹 버전에서는 게임 폴더 열기 기능을 지원하지 않습니다.\");\r\n                    },                      \r\n                },\r\n            },\r\n        },\r\n        help: {\r\n            name: \"도움말\",\r\n            children: {\r\n                \"help-contents\": {\r\n                    name: \"도움말\",\r\n                    children: {},\r\n                    action: (ev) => {\r\n                        alert(\"도움말이 아직 없습니다.\");\r\n                    },\r\n                },\r\n                \"help-about\": {\r\n                    name: \"버전 정보\",\r\n                    children: {}, \r\n                    action: (ev) => {\r\n                        // if(!$(\".container\").is(\"#helpAbout\")) {\r\n                        //     $(\".container\").append(new HelpAboutWindow(new HelpAboutWindowModel()));\r\n                        // }\r\n                    },                    \r\n                },\r\n            },\r\n        },\r\n        \"$font\": {\r\n            size: \"8pt\",\r\n        }\r\n    },\r\n};\r\n\r\nexport default class MenuService extends Component {\r\n\r\n    initMembers(...args) {\r\n\r\n        /**\r\n         * @type {MenuComponent}\r\n         */\r\n        this._menuComponent = args[1];\r\n        this._isClickedMenu = false;        \r\n    }\r\n\r\n    start(...args) {\r\n\r\n        this.changeMenuLocaleAsPersonalize();\r\n        this.changeToolbarIconOnMobileDevice();\r\n        this.addMenuEventHandlers();\r\n    }    \r\n\r\n    changeMenuLocaleAsPersonalize() {\r\n        const langCode = navigator.language.slice(0, 2);\r\n        $(\".menu__main label\").each((index, elem) => {\r\n            const parent = $(elem);\r\n            const type = parent.data(\"action\");\r\n            const res = menu[langCode];\r\n            if(res) {\r\n                const data = res[type];\r\n                const name = data.name;\r\n                const font = res[\"$font\"];\r\n                parent.text(name);\r\n                parent.css(\"font-size\", font.size);\r\n\r\n                $(`.menu__${type}-sub li`)\r\n                    .each((_index, _elem) => {\r\n                        const _node = $(_elem);\r\n                        \r\n                        // 서브 메뉴의 위치를 세밀하게 조정합니다.\r\n                        const menuNode = parent.parent();\r\n                        _node.parent().css(\"left\", menuNode.get(0).getBoundingClientRect().x + \"px\");\r\n\r\n                        const _type = _node.data(\"action\");\r\n                        const _res = data.children[_type];\r\n                        if(_res) {\r\n\r\n                            // 메뉴 노드에 메뉴 액션을 등록합니다.\r\n                            if(_res.action) {\r\n                                _node.get(0).onclick = _res.action;\r\n                            }\r\n\r\n                            const _name = _res.name;\r\n                            _node.get(0).childNodes.forEach(i => {\r\n                                // 텍스트 노드만 찾습니다.\r\n                                if(i.nodeType == 3) {\r\n                                    i.textContent = _name;\r\n                                }\r\n                            });\r\n                            _node.css(\"font-size\", font.size);\r\n                        }\r\n                    })                \r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    addMenuEventHandlers() {\r\n\r\n        // let isDone = false;\r\n\r\n        // $(\".menu__main li\").on(\"click\", ev => {\r\n        //     const isSomeMenuOpened = $(\"ul[class*='sub']\").is(\":visible\");\r\n        //     $(\"ul[class*='sub']\").hide();\r\n        //     $(\"#none\").prop(\"checked\", true);\r\n        // });\r\n    }\r\n\r\n    changeToolbarIconOnMobileDevice() {\r\n        const media = window.matchMedia(\"(max-width: 640px)\");\r\n        if(media.matches) {\r\n            $(\".toolbar i\").each((index, elem) => {\r\n                $(elem)\r\n                    .addClass(\"fa-3x\")\r\n                    .css({\r\n                        \"width\": \"98%\",\r\n                        \"height\": \"98%\",\r\n                        \"font-size\": \"1.25em\"\r\n                    })\r\n            })\r\n        }\r\n\r\n        const resizeConfig = {\r\n            \".contents\": {\r\n                \"width\": \"65%\",\r\n            },\r\n            \".aside__tabs\": {\r\n                \"width\": \"30%\",\r\n            },\r\n            \"#contents__main-canvas\": {\r\n                \"width\": \"100%\",\r\n            }\r\n        }\r\n\r\n        $(window).on(\"resize\", () => {\r\n\r\n            if($(window).width() <= 640) {\r\n                for(let i in resizeConfig) {\r\n                    $(i).css(resizeConfig[i]);\r\n                }\r\n\r\n                $(\".toolbar i\").each((index, elem) => {\r\n                    $(elem)\r\n                        .removeClass(\"fa-3x\")                    \r\n                        .addClass(\"fa-3x\")\r\n                        .css({\r\n                            \"width\": \"98%\",\r\n                            \"height\": \"98%\",\r\n                            \"font-size\": \"1.25em\"\r\n                        })\r\n                })                \r\n            } else {\r\n                $(\".toolbar i\").each((index, elem) => {\r\n                    $(elem)\r\n                        .removeClass(\"fa-3x\") \r\n                        .addClass(\"fa-sm\")                   \r\n                        .css({\r\n                            \"width\": \"98%\",\r\n                            \"height\": \"98%\",\r\n                            \"font-size\": \"0.875em\"\r\n                        })\r\n                })  \r\n            }\r\n        })\r\n    }\r\n}","export default class Rectangle {\r\n\r\n    constructor(x, y, width, height) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._x;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set y(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n    contains(mx, my) {\r\n        const x = this._x;\r\n        const y = this._y;\r\n        const width = this._width;\r\n        const height = this._height;\r\n        return mx >= x && mx <= (x + width) && my >= y && my <= (y + height);\r\n    }\r\n}\r\n\r\nRectangle.EMPTY = new Rectangle(0, 0, 0, 0);","import Model from \"./Model.js\";\r\n\r\nexport class TilesetWindowModel extends Model {\r\n    getData() {\r\n        return {\r\n            width: \"240px\",\r\n            height: \"100%\",\r\n            parentId: \".windows-container\",\r\n            id: \"tileset-container\", /** ID에 \"Window\"가 들어가면 안됩니다 */\r\n            zIndex: \"10\",\r\n            path: \"view/windows/tilesetWindow.html\",\r\n        }\r\n    }\r\n}","import TilesetWindowModel from \"../models/TilesetWindow.js\";\r\nimport BaseController from \"./BaseController.js\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class TilesetWindowController extends BaseController {\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        super( config );\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        super.onLoad(elem, self);\r\n        const parent = elem.parentNode;\r\n        parent.querySelector(\".tilesetWindow__control-box p i\").onclick = () => {\r\n            self.remove();\r\n        };\r\n        this.show();\r\n    }    \r\n\r\n}","\r\nimport GamePropertiesWindowController from \"./controllers/GamePropertiesWindowController.js\";\r\nimport { Component } from \"./Component.js\";\r\nimport {MenuComponent} from \"./MenuComponent.js\";\r\nimport {TilesetMarker} from \"./tilesetMarker.js\";\r\nimport Tilemap from \"./Tilemap.js\";\r\nimport GamePropertiesWindow from \"./models/GamePropertiesWindow.js\";\r\nimport toCamelCase from \"./camelCase.js\"\r\nimport TilesetCanvas from \"./TilesetCanvas.js\";\r\nimport TileMarker from \"./TileMarker.js\";\r\nimport {config} from \"./config.js\";\r\nimport MenuService from \"./MenuService.js\";\r\nimport Rectangle from \"./Rectangle.js\";\r\nimport TilesetWindowController from \"./controllers/TilesetWindowController.js\";\r\nimport { TilesetWindowModel } from \"./models/TilesetWindow.js\";\r\n\r\nexport default class App {\r\n\r\n    /**\r\n     * 멤버 변수를 초기화합니다.\r\n     */\r\n    initMembers() {\r\n        this.cache = {};\r\n        this._config = config;\r\n        this._mouse = {\r\n            x: 0,\r\n            y: 0, \r\n            screenX : 0,\r\n            screenY : 0,\r\n            buttons: {\r\n                left: false,\r\n                leftFire: false,\r\n            },\r\n            /**\r\n             * @type {HTMLElement}\r\n             */            \r\n            target: null,\r\n        };\r\n\r\n        /**\r\n         * 사각형 툴을 위한 선택 영역\r\n         * @link http://jsfiddle.net/qGzkG/2/\r\n         */\r\n        this._blockRect = {\r\n            isDrawing: false,\r\n            rect: new Rectangle(0, 0, 1, 1),\r\n        };\r\n        this._now = performance.now();\r\n        this._isMenuOpen = false;\r\n        this._tileId = 0;\r\n        this._isReady = false;\r\n\r\n        // 타이틀을 변경합니다.\r\n        document.title = \"Initial Map Editor\";\r\n    }\r\n\r\n    /**\r\n     * 컴포넌트를 초기화합니다.\r\n     */\r\n    async initWithComponents() {\r\n        /**\r\n         * @type {Component[]}\r\n         */\r\n        this._components = [];\r\n        this._components.push(this._menu = new MenuComponent(this._config));\r\n        this._components.push(new MenuService(this._config, this._menu));\r\n\r\n        this._tilesetCanvas = new TilesetCanvas(this._config);\r\n        await this._tilesetCanvas.start().then(ret => {\r\n            this._components.push(this._tilesetMarker = new TilesetMarker(this._config));                    \r\n            this._components.push(this._tilemap = new Tilemap(this._config));    \r\n            this._components.push(this._tileMarker = new TileMarker(this._config));    \r\n            this._components.forEach(component => {\r\n                component.start();\r\n            });            \r\n            this._tilemap.setTileId(0);\r\n        }).then(ret => {\r\n            $(\".darken, .windows-container\").css(\"left\", \"-9999px\");\r\n        }).catch(err => {\r\n            console.warn(err);\r\n        });\r\n    }\r\n\r\n    toCamelCase() {\r\n        return toCamelCase();\r\n    }\r\n\r\n    isMobileDevice() {\r\n        const ret = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        return ret;\r\n    }\r\n\r\n    onMouseTouchMove(ev) {\r\n        this._mouse.x = ev.layerX;\r\n        this._mouse.y = ev.layerY;\r\n        this._mouse.screenX = ev.layerX;\r\n        this._mouse.screenY = ev.layerY;\r\n    }\r\n\r\n    /**\r\n     * 마우스 이벤트 및 터치 이벤트를 초기화합니다.\r\n     */\r\n    initWithMouseEvent() {\r\n\r\n        const isMobileDevice = this.isMobileDevice();\r\n        let events;\r\n\r\n        if(isMobileDevice) {\r\n            events = {\r\n                \"touchmove\": (ev) => {        \r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }                          \r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;\r\n                },\r\n                \"touchstart pointerdown\": (ev) => {\r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }\r\n                    \r\n                    this._mouse.target = ev.target; \r\n\r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;           \r\n                    this._mouse.buttons.left = true;\r\n                    this._mouse.buttons.leftFire = false;                  \r\n                },\r\n                \"touchend pointerup mouseup\": (ev) => {\r\n                    this._mouse.buttons.left = false;\r\n                    this._mouse.buttons.leftFire = true; \r\n                }\r\n            };\r\n\r\n            $(window).on(events);\r\n\r\n        } else {\r\n            events = {\r\n                \"mousemove\": (ev) => {\r\n                    this._mouse.x = ev.layerX;\r\n                    this._mouse.y = ev.layerY;\r\n                    this._mouse.screenX = ev.layerX;\r\n                    this._mouse.screenY = ev.layerY;\r\n                },\r\n                \"mousedown\": (ev) => {\r\n                    if(ev.button == 0) {                 \r\n                        this._mouse.buttons.left = true;\r\n                        this._mouse.buttons.leftFire = false;\r\n                        this._mouse.target = ev.target;\r\n                    }\r\n                },\r\n                \"mouseup\": (ev) => {\r\n                    if(ev.button == 0) {\r\n                        this._mouse.buttons.left = false;\r\n                        this._mouse.buttons.leftFire = true;\r\n\r\n                        this._blockRect.isDrawing = false;\r\n                    }\r\n                }\r\n            }         \r\n            \r\n            for(let k in events) {\r\n                window.addEventListener(k, events[k], false);\r\n            }                 \r\n        }\r\n\r\n       \r\n  \r\n    }\r\n\r\n    setTileId(tileId) {\r\n        if(!this._tilemap) return;\r\n        this._tilemap.setTileId(tileId);\r\n    }\r\n\r\n    /**\r\n     * 창을 동적으로 렌더링합니다.\r\n     */\r\n    initWithGamePropertiesWindow() {\r\n\r\n        // 게임 속성 창 생성하기\r\n        this._gamePropertiesWindow = new GamePropertiesWindowController(new GamePropertiesWindow());\r\n\r\n        // 동적으로 HTML 과 CSS 데이터를 가져옵니다.\r\n        this._gamePropertiesWindow.render()\r\n            .then(ret => {\r\n                const id = \"new-window\";\r\n                this.cache[\"new-window\"] = this._gamePropertiesWindow;\r\n\r\n                this._gamePropertiesWindow.setUniqueId(id);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            });\r\n    }\r\n\r\n    initWithTilesetWindow() {\r\n        this._tilesetWindow = new TilesetWindowController(new TilesetWindowModel());\r\n        this._tilesetWindow.render()\r\n            .then(ret => {\r\n                const id = \"tileset\";\r\n                this.cache[id] = this._tilesetWindow;\r\n                \r\n                this._tilesetWindow.setUniqueId(id);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 레이어를 토글하는 기능을 수행합니다.\r\n     */\r\n    initWithMapLayers() {\r\n        const children = $(\"ul.aside__tabs__maptree-child-tree li i\").children();\r\n        let target = null;\r\n\r\n        // 레이어 항목에서 눈 아이콘을 추가합니다.\r\n        children.each((index, elem) => {\r\n            const e = e.get(0);\r\n            elem.click(() => {\r\n                e.className = e.className.includes(\"slash\") ? \"far fa-eye\":\"far fa-eye-slash\";\r\n            });\r\n        });\r\n\r\n        // 레이어 항목에서 눈 아이콘을 누르면 눈을 감고 있는 아이콘(슬래쉬가 쳐진 아이콘)으로 토글합니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li i\").on(\"click\", (ev) => {\r\n            const target = $(ev.currentTarget);\r\n            const parentNode = $(ev.currentTarget).parent();\r\n            const layerId = parentNode.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            if(target.hasClass(\"fa-eye\")) {\r\n                target.removeClass(\"fa-eye\")\r\n                    .addClass(\"fa-eye-slash\");\r\n            } else {\r\n                target.removeClass(\"fa-eye-slash\")\r\n                    .addClass(\"fa-eye\");                \r\n            }\r\n\r\n            tilemap.toggleLayerVisibility(layerId);\r\n        });\r\n\r\n        // 눈 아이콘을 선택했을 때 선택 영역을 강조하며 선택되지 않은 영역은 강조하지 않습니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li\").on(\"click\", (ev) => {\r\n            const elem = $(ev.currentTarget).css({\r\n                \"backgroundColor\": \"var(--dark-selection-color)\"\r\n            });\r\n            $(\"ul.aside__tabs__maptree-child-tree li\").not(elem).css({\r\n                \"backgroundColor\": \"rgba(255, 255, 255, 0)\"\r\n            });\r\n\r\n            const layerId = elem.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            // 타일맵을 지우고 다시 그립니다.\r\n            tilemap.setCurrentLayerId(layerId);\r\n            tilemap.clear();\r\n            tilemap.draw();\r\n            tilemap.updateAlphaLayers();\r\n        });\r\n\r\n        $(\"ul.aside__tabs__maptree-child-tree li:first-child\").trigger(\"click\");\r\n    }\r\n\r\n    start() {\r\n        this.initMembers();\r\n        this.initWithMouseEvent();\r\n\r\n        // 모든 컴포넌트가 초기화된 이후 시점에 특정 작업을 수행합니다.\r\n        this.initWithComponents()\r\n            .then(ret => {\r\n                this.initWithMapLayers();     \r\n                this._isReady = true;       \r\n            }).catch(err => {\r\n                console.warn(err);\r\n                this._isReady = false;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 매 프레임마다 반복 실행되는 메소드입니다.\r\n     * @param {Number}} deltaTime \r\n     */\r\n    update(deltaTime) {\r\n\r\n        if(!this._isReady) return;\r\n\r\n        // 400ms가 지났을 때 마다 무언가를 실행합니다.\r\n        if(deltaTime - this._now >= 400) {\r\n            this._now = deltaTime;\r\n        }\r\n\r\n        this.updateComponents();\r\n\r\n        this._mouse.buttons.leftFire = false;\r\n    }\r\n\r\n    updateComponents() {        \r\n        const target = this._mouse.target;\r\n\r\n        if(!target) {\r\n            return;\r\n        }\r\n        \r\n        const id = target.id;\r\n        const mouse = this._mouse;\r\n\r\n        this._menu.update(target, mouse);\r\n\r\n        if(!this._menu.isMenuOpen()) {\r\n            switch(id) {\r\n                case \"tileset-canvas\":\r\n                case \"view\":\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tilesetMarker.update(mouse);\r\n                    }\r\n                    break;\r\n                case \"contents__main-canvas\":\r\n                    if(this._mouse.buttons.left) {\r\n                        this._tilemap.update(mouse);                                        \r\n                    }\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tileMarker.update(mouse);    \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} elem \r\n     * @param {Number} id \r\n     */\r\n    onLoad(elem, id) {\r\n        if(this.cache[id]) {\r\n            const self = this.cache[id];\r\n            this.cache[id].onLoad(elem, self);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @return {App}\r\n     */\r\n    static GetInstance() {\r\n        if(!App.Instance) {\r\n            App.Instance = new App();\r\n        }\r\n        \r\n        return App.Instance;\r\n    }\r\n}\r\n\r\nApp.Instance = null;\r\n\r\n//==========================================================\r\n// Main\r\n//==========================================================\r\n class Main {\r\n    static start() {\r\n        $(async () => {\r\n            window.app = App.GetInstance();\r\n            window.app.start();\r\n            this.update();                \r\n        });\r\n    }\r\n\r\n    static update(deltaTime) {\r\n        window.app.update(deltaTime);\r\n        window.requestAnimationFrame(Main.update);\r\n    }    \r\n}\r\n\r\nMain.start();"],"sourceRoot":""}