{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"child_process\"","webpack:///./js/EventEmitter.js","webpack:///./js/Component.js","webpack:///./js/MenuComponent.js","webpack:///./js/tilesetMarker.js","webpack:///./js/Tilemap.js","webpack:///./js/camelCase.js","webpack:///./js/schema/Schema.js","webpack:///./js/schema/EditorSchema.js","webpack:///./js/config.js","webpack:///./js/TilesetCanvas.js","webpack:///./js/TileMarker.js","webpack:///./js/models/Model.js","webpack:///./js/models/GamePropertiesWindow.js","webpack:///./js/controllers/BaseController.js","webpack:///./js/controllers/GamePropertiesWindowController.js","webpack:///./js/models/TilesetWindow.js","webpack:///./js/Rectangle.js","webpack:///./js/toolbar/EmptySegment.js","webpack:///./js/toolbar/Toolbar.js","webpack:///./js/toolbar/FileToolbar.js","webpack:///./js/toolbar/EditToolbar.js","webpack:///./js/toolbar/ModeToolbar.js","webpack:///./js/toolbar/DrawToolbar.js","webpack:///./js/toolbar/OtherToolbar.js","webpack:///./js/app.js","webpack:///./js/controllers/TilesetWindowController.js","webpack:///./js/WindowCreator.js","webpack:///./js/menu/FileMenu.js","webpack:///./js/MenuService.js","webpack:///./js/menu/KoreanMenu.js","webpack:///./js/menu/EditMenu.js","webpack:///./js/menu/ModeMenu.js","webpack:///./js/menu/DrawMenu.js","webpack:///./js/menu/ScaleMenu.js","webpack:///./js/menu/ToolMenu.js","webpack:///./js/menu/GameMenu.js","webpack:///./js/menu/HelpMenu.js","webpack:///./js/App.js","webpack:///./js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","EventEmitter","this","_events","lsn","push","args","forEach","func","super","initMembers","start","_isActiveEvent","_isMenuOpen","$","draggable","snap","resizable","containment","rect","getBoundingClientRect","_originalPos","x","y","_currentTarget","prop","target","mouse","is","parentNode","className","buttons","leftFire","hideMenu","_config","_tileWidth","TILE_WIDTH","_tileHeight","TILE_HEIGHT","_isReady","initWithElement","active","parent","child","document","querySelector","removeChild","_element","css","append","_isDraw","_isClicked","_blockSize","BlockSize","setParent","touches","offset","top","img","mapCols","Math","floor","width","tilesetWidth","tilesetHeight","height","tw","th","nx","ny","targetX","targetY","position","left","console","log","window","app","setTileId","_x","_y","_width","_height","_parent","_tileset","_mapCols","MAP_COLS","_mapRows","MAP_ROWS","_tileId","_mouseX","_mouseY","_currentLayer","_autoTileIndexedList","_autoTileTextureList","_tileType","_mapWidth","round","SCREEN_WIDTH","_mapHeight","SCREEN_HEIGHT","_layerCount","LAYERS","localStorage","removeItem","_data","getItem","Array","tilesetImg","Error","test","navigator","userAgent","_penType","on","maxZ","maxWidth","maxHeight","z","set","tileId","min","max","id","layerId","option","resolution","devicePixelRatio","view","autoDensity","transparent","innerHeight","innerWidth","_app","PIXI","Application","_layerContainer","Container","interactive","onMouseMove","stage","addChild","_tilesets","Texture","from","initWithDrawingType","ev","takeScreenshot","stopPropagation","renderer","extract","canvas","toBlob","b","a","createElement","body","download","href","URL","createObjectURL","onclick","preventDefault","click","remove","data","global","tilesets","isArray","length","dx","dy","texture","crop","Rectangle","baseTexture","mx","my","mapX","mapY","mask","getData","e","tileID","setData","_dirty","sx","sy","ex","ey","indexOf","penType","drawTile","drawRect","draw","children","removeChildren","cropTexture","visible","currentLayer","filter","layer","alpha","clear","mapWidth","mapHeight","container","sprite","Sprite","getTileCropTexture","toCamelCase","nodes","split","nodesTail","slice","concat","map","toUpperCase","getClassName","str","Schema","config","JSON","stringify","ProjectPath","TileWidth","TileHeight","CurrentLayer","StartMapId","CurrentMapId","TRANSPARENT_COLOR_GROUP","TILESET_IMGAGES","Editor","Maps","TilesetCanvas","_tilesetImgages","loadTilesets","count","Promise","resolve","reject","elem","attr","createCanvas","newTileset","_canvas","then","ret","createComponents","canvasWidth","canvasHeight","prepend","_context","getContext","ctx","acc","maxH","naturalWidth","naturalHeight","setTransform","imageSmoothingEnabled","drawImage","Model","parentId","zIndex","path","display","initWithCanvas","_isValid","_uniqueId","hide","match","show","fadeOut","GetInstance","cache","xhr","XMLHttpRequest","url","location","lastIndexOf","open","onload","status","responseText","onerror","send","load","result","html","catch","err","warn","self","addEventHandlers","onLoad","inp","find","gameName","val","gameFolder","author","alert","eq","onOkButton","opacity","EMPTY","EmptySegment","action","Toolbar","GrapWindow","ToolbarManager","_mainToolbarId","_isOpened","_isMovable","lock","_originPosition","disabled","each","index","_mouse","screenX","screenY","menuTarget","_blockRect","isDrawing","_now","performance","now","title","emit","_components","_tilesetMarker","_tilemap","_tileMarker","component","_menu","_menuController","_tilesetCanvas","layerX","layerY","events","isMobileDevice","touchEvent","type","clientX","clientY","button","k","addEventListener","includes","currentTarget","tilemap","hasClass","removeClass","addClass","toggleLayerVisibility","not","setCurrentLayerId","updateAlphaLayers","trigger","initWithMouseEvent","initWithComponents","initWithMapLayers","deltaTime","update","updateComponents","isMenuOpen","Instance","onOk","onCancel","files","parseInt","ajax","contentType","processData","FormData","success","msg","error","_gamePropertiesWindow","render","setUniqueId","_tilesetWindow","creator","cb","menu","file","shortcut","edit","scale","tools","game","cp","cwd","process","execSync","encoding","help","size","_menuComponent","_isClickedMenu","changeMenuLocaleAsPersonalize","changeToolbarIconOnMobileDevice","addMenuEventHandlers","langCode","language","res","font","text","_index","_elem","_node","menuNode","_type","_res","_name","childNodes","nodeType","textContent","ipcRenderer","stopImmediatePropagation","close","matchMedia","matches","resizeConfig","async","requestAnimationFrame"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"electron\");","module.exports = require(\"child_process\");","class EventEmitter {\r\n    constructor() {\r\n        this._events = {};\r\n    }\r\n\r\n    on(name, lsn) {\r\n        if(!this._events[name]) {\r\n            this._events[name] = [];\r\n        }\r\n\r\n        this._events[name].push(lsn);\r\n\r\n        return this;\r\n    }\r\n\r\n    emit(name, ...args) {\r\n        if(!this._events[name]) {\r\n            this._events[name] = [];\r\n        }\r\n\r\n        this._events[name].forEach(func => {\r\n            if(typeof(func) === \"function\") {\r\n                func(...args);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport {EventEmitter};","import {EventEmitter} from \"./EventEmitter\";\r\n\r\nclass Component extends EventEmitter {\r\n    constructor(...args) {\r\n        super();\r\n        this.initMembers(...args);\r\n        this.start(...args);\r\n    }\r\n\r\n    initMembers(...args) {\r\n        this._isActiveEvent = false;\r\n    }\r\n\r\n    active() {\r\n        this._isActiveEvent = true;\r\n    }\r\n    \r\n    deactive() {\r\n        this._isActiveEvent = false;\r\n    }\r\n\r\n    isActiveEvent() {\r\n        return this._isActiveEvent;\r\n    }\r\n\r\n    start(...args) {\r\n        return this;\r\n    }\r\n\r\n    update(...args) {\r\n\r\n    }\r\n}\r\n\r\nclass BasicComponent extends Component {\r\n    constructor(...args) {\r\n        super(...args);\r\n    }\r\n}\r\n\r\nexport { Component, BasicComponent };","import {Component} from \"./Component.js\";\r\n\r\nclass MenuComponent extends Component {\r\n    start() {\r\n        this._isMenuOpen = false;\r\n        $(\".toolbar\").draggable({ snap: \".menu\" });\r\n        $(\".aside__tabs\").resizable({\r\n            containment: \"#aside\"\r\n        });\r\n\r\n        const rect = $(\".toolbar\").get(0).getBoundingClientRect();\r\n        this._originalPos = {\r\n            x: rect.x,\r\n            y: rect.y\r\n        };\r\n\r\n        this._currentTarget = null;\r\n\r\n        // this.on(\"menu_open\", (target) => {\r\n        //     this._currentTarget = $(window.app._mouse.target);\r\n\r\n        //     if(this._currentTarget && this._currentTarget.is(\":visible\")) {\r\n    \r\n        //         if(!target) {\r\n        //             return;\r\n        //         }\r\n\r\n        //         // 현재 메뉴 액션을 가져옵니다.\r\n        //         const actionName = target.dataset.action;\r\n        //         $(`ul[class*=-sub]`).hide();\r\n        //         $(`ul[class*=${actionName}]`).parent().trigger(\"click\");\r\n        //     } else {\r\n        //         // 서브 메뉴가 열린 상태가 아닙니다.\r\n        //     }\r\n        // });        \r\n    }\r\n\r\n    isMenuOpen() {\r\n        return this._isMenuOpen;\r\n    }\r\n\r\n    hideMenu() {\r\n        $(\"#none\").prop(\"checked\", true);\r\n        this._isMenuOpen = false;      \r\n    }\r\n\r\n    update(target, mouse) {\r\n        if($(\".toolbar\").is('.ui-draggable-dragging')) {\r\n            const rect = $(\".toolbar\").get(0).getBoundingClientRect();\r\n        }\r\n\r\n        // 최상위 노드를 선택합니다.\r\n        let parentNode = target.parentNode;\r\n        while(parentNode != null && parentNode.className != \"menu__main\") {\r\n            parentNode = parentNode.parentNode;\r\n        }\r\n\r\n        const isSomeMenuOpened = $(\"ul[class*='sub']\").is(\":visible\");\r\n\r\n        // 최상위 노드가 메인 메뉴라면\r\n        if(parentNode && parentNode.className === \"menu__main\") {\r\n            // 메뉴가 열린 것으로 간주\r\n            this._isMenuOpen = true;\r\n        } else {\r\n            if(this._isMenuOpen && mouse.buttons.leftFire) {\r\n                this.hideMenu();\r\n            }                                              \r\n        }        \r\n        \r\n    }\r\n}\r\n\r\nexport {MenuComponent};","import {Component} from \"./Component.js\";\r\n\r\n/**\r\n * @class TilesetMarker\r\n */\r\nclass TilesetMarker extends Component {\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._tileWidth = this._config.TILE_WIDTH;\r\n        this._tileHeight = this._config.TILE_HEIGHT;\r\n        this._isReady = false;\r\n        \r\n        this.initWithElement();\r\n        this.active();\r\n    }\r\n\r\n    initWithElement() {\r\n        const parent = $(\"#view\");\r\n        let child = null;\r\n        if((child = document.querySelector(\"#tileset-marker\"))) {\r\n            parent.get(0).removeChild(child);\r\n            return;\r\n        }\r\n\r\n        this._element = $(\"<div></div>\", {\"id\" : \"tileset-marker\"})\r\n            .css({\r\n                \"min-width\": `${this._tileWidth}px`,\r\n                \"min-height\": `${this._tileHeight}px`,\r\n                \"width\": `${this._tileWidth}px`,\r\n                \"height\": `${this._tileHeight}px`,\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"margin\": \"0\",\r\n                \"padding\": \"0\",\r\n                \"border\": \"2px dotted white\",\r\n                \"z-index\": \"50\",\r\n                \"box-sizing\": \"border-box\",\r\n            });\r\n\r\n        this._isReady = true;\r\n        \r\n        parent.append(this._element);\r\n\r\n        this._isDraw = false;\r\n        this._isClicked = false;\r\n        this._blockSize = new BlockSize(0, 0, this._tileWidth, this._tileHeight);\r\n        this._blockSize.setParent(this._element);\r\n\r\n        this.touches = [\r\n            {x: 0, y: 0},\r\n            {x: 0, y: 0},\r\n        ]\r\n\r\n        const topY = $(\"#view\").offset().top;\r\n    }\r\n\r\n    start() {\r\n        \r\n    }\r\n\r\n    update(...args) {\r\n        if(!this._isReady) {\r\n            return;\r\n        }\r\n\r\n        const target = args[0].target;\r\n\r\n        const img = $(\"#view canvas\");\r\n        const mapCols = Math.floor(img.width() / this._config.TILE_WIDTH);\r\n        const tilesetWidth = img.width();\r\n        const tilesetHeight = img.height();\r\n        const topY = 0;\r\n\r\n        const mouse = args[0];\r\n\r\n        const tw = this._tileWidth;\r\n        const th = this._tileHeight;\r\n        let nx = Math.floor(mouse.x / tw) * tw;\r\n        let ny = Math.floor(mouse.y / th) * th;\r\n\r\n        const targetX = nx / tw;\r\n        const targetY = (ny - topY) / th;\r\n\r\n        if(nx < 0) {\r\n            nx = 0;\r\n        }\r\n        if(nx > tilesetWidth - tw) {\r\n            nx = tilesetWidth - tw;\r\n        }\r\n        if(ny < 0) {\r\n            ny = 0;\r\n        }\r\n        if(ny > tilesetHeight) {\r\n            ny = tilesetHeight - th + topY;\r\n        }\r\n\r\n        this._element.css({\r\n            position : \"absolute\",\r\n            left : nx + \"px\",\r\n            top : ny - topY + \"px\",\r\n        });\r\n\r\n        console.log(\"타일 ID : \" + (targetY * mapCols + targetX));\r\n\r\n        window.app.setTileId((targetY * mapCols + targetX));\r\n    }\r\n\r\n}\r\n\r\nclass BlockSize {\r\n    constructor(x, y, width, height) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n        this._parent = null;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set y(value) {\r\n        this._y = value;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._y;\r\n    }\r\n\r\n    setParent(parent) {\r\n        this._parent = parent;\r\n    }\r\n\r\n    refresh() {\r\n        this._parent.css({\r\n            width: this.width,\r\n            height: this.height,\r\n            left: this._x,\r\n            top: this._y,\r\n            position: \"absolute\"\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {TilesetMarker};","// import pixi from \"../libs/pixi.js\";\r\n// //@ts-check\r\nimport {\r\n    Component\r\n} from \"./Component.js\";\r\n\r\nexport default class Tilemap extends Component {\r\n\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._tileset = $(\"#view canvas\").get(0);\r\n        this._tileWidth = this._config.TILE_WIDTH;\r\n        this._tileHeight = this._config.TILE_HEIGHT;\r\n        this._mapCols = this._config.MAP_COLS;\r\n        this._mapRows = this._config.MAP_ROWS;\r\n        this._tileId = 0;\r\n        this._mouseX = 0;\r\n        this._mouseY = 0;\r\n        this._currentLayer = 0;\r\n        this._autoTileIndexedList = [];\r\n        this._autoTileTextureList = {};\r\n        \r\n        // 1이면 오토타일, 0이면 일반 타일\r\n        this._tileType = 0;\r\n\r\n        this._mapWidth = Math.round(this._config.SCREEN_WIDTH / this._tileWidth);\r\n        this._mapHeight = Math.round(this._config.SCREEN_HEIGHT / this._tileHeight);\r\n        this._layerCount = this._config.LAYERS;\r\n\r\n        localStorage.removeItem(\"tileMapData\");\r\n\r\n        if(!(this._data = localStorage.getItem(\"tileMapData\"))) {\r\n            this._data = new Array(this._mapWidth * this._mapHeight * this._config.LAYERS);\r\n        }\r\n        \r\n        const tilesetImg = $(\"#view canvas\").get(0);\r\n        if(!tilesetImg) {\r\n            throw new Error(\"Cant't find tileset\");\r\n        }\r\n        \r\n        this._mapCols = Math.floor((tilesetImg.width) / this._tileWidth);\r\n        this._mapRows = Math.floor((tilesetImg.width) / this._tileWidth);    \r\n        \r\n        this.active();\r\n    }\r\n\r\n    isMobileDevice() {\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    initWithDrawingType() {\r\n        this._penType = 0;\r\n        $(\"#pen-tool\").on(\"click\", () => {\r\n            this._penType = 0;\r\n            console.log(\"펜\");\r\n        });\r\n        $(\"#square-tool\").on(\"click\", () => {\r\n            this._penType = 1;\r\n            console.log(\"사각형\");\r\n        });\r\n    }\r\n\r\n    initWithLayers() {\r\n        const maxZ = this._config.LAYERS;\r\n        const maxWidth = Math.round(this._config.SCREEN_WIDTH / this._tileWidth);\r\n        const maxHeight = Math.round(this._config.SCREEN_HEIGHT / this._tileHeight);        \r\n\r\n        for(let z = 0; z < maxZ; z++) {\r\n            for(let y = 0; y < maxHeight; y++) {\r\n                for(let x = 0; x < maxWidth; x++) {\r\n                    this.set(x, y, z, 0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setData(x, y, z, tileId) {\r\n        if(x < 0) x = 0;\r\n        if(x > this._mapWidth - 1) x = this._mapWidth - 1;\r\n        y = Math.min(Math.max(0, y), this._mapHeight - 1);\r\n        z = Math.min(Math.max(0, z), this._config.LAYERS - 1);\r\n\r\n        const id = (this._mapWidth * this._mapHeight * z) + (this._mapWidth * y) + x;\r\n        this._data[id] = tileId;\r\n    }\r\n\r\n    getData(x, y, z) {\r\n        if(x < 0) x = 0;\r\n        if(x > this._mapWidth - 1) x = this._mapWidth - 1;\r\n        y = Math.min(Math.max(0, y), this._mapHeight - 1);        \r\n        z = Math.min(Math.max(0, z), this._config.LAYERS - 1);\r\n\r\n        const id = (this._mapWidth * this._mapHeight * z) + (this._mapWidth * y) + x;\r\n        return this._data[id] || 0;\r\n    }\r\n\r\n    setTileId(tileId) {\r\n        this._tileId = tileId;\r\n    }\r\n\r\n    getTileId() {\r\n        return this._tileId;\r\n    } \r\n\r\n    setCurrentLayerId(layerId) {\r\n        this._currentLayer = layerId;\r\n    }\r\n\r\n    getCurrentLayerId() {\r\n        return this._currentLayer;\r\n    }\r\n\r\n    start() {\r\n\r\n        let option = {\r\n            width: this._config.SCREEN_WIDTH,\r\n            height: this._config.SCREEN_HEIGHT,\r\n            // backgroundColor: 0x00000000,\r\n            resolution: window.devicePixelRatio || 1,\r\n            view: $(\"#contents__main-canvas\").get(0),\r\n            autoDensity: true,\r\n            transparent: false,\r\n        };\r\n\r\n        // $(`#contents__main-canvas`).resizable();\r\n\r\n        // if(this.isMobileDevice()) {\r\n            option.height = $(window).innerHeight() - $(\".toolbar\").innerHeight() - 30;\r\n            option.width = $(window).innerWidth() - $(\".aside__tabs\").innerWidth() - 10;\r\n        // }\r\n\r\n        this._app = new PIXI.Application(option);\r\n\r\n        this._layerContainer = new PIXI.Container();\r\n        this._layerContainer.interactive = true;\r\n        this._layerContainer.on(\"mousemove\", this.onMouseMove.bind(this));\r\n        this._layerContainer.on(\"pointermove\", this.onMouseMove.bind(this));\r\n        this.app.stage.addChild(this._layerContainer);   \r\n\r\n        for(let i = 0; i < this._config.LAYERS; i++) {\r\n            this._layerContainer.addChild(new PIXI.Container());   \r\n        }\r\n\r\n        this._tilesets = [];\r\n        this._tilesets.push(PIXI.Texture.from(this._tileset));  \r\n        \r\n        this.initWithDrawingType();\r\n\r\n        $(\"#take-screenshot\").on(\"click\", (ev) => {\r\n            this.takeScreenshot();\r\n\r\n            ev.stopPropagation();\r\n        });\r\n\r\n    }\r\n\r\n    get app() {\r\n        return this._app;\r\n    }\r\n\r\n    /**\r\n     * TODO: 클립보드에 저장하는 방식으로 변환할 것.\r\n     * @link https://developer.mozilla.org/ko/docs/Web/API/Clipboard/write\r\n     */\r\n    takeScreenshot() {\r\n        const app = this._app;\r\n        if(!app) return;\r\n        app.renderer.extract.canvas(app.stage).toBlob((b) => {\r\n            const a = document.createElement('a');\r\n            document.body.append(a);\r\n            a.download = 'screenshot';\r\n            a.href = URL.createObjectURL(b);\r\n            a.onclick = function(ev) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            };\r\n            a.click();\r\n            a.remove();\r\n\r\n        }, 'image/png');        \r\n    }\r\n\r\n    onMouseMove(ev) {\r\n        this._mouseX = ev.data.global.x;\r\n        this._mouseY = ev.data.global.y;\r\n    }\r\n\r\n    /**\r\n     * Get a tileset image from the tileset collection.\r\n     */\r\n    getTileset() {\r\n        const tilesets = this._tileset;\r\n\r\n        if(!tilesets) {\r\n            throw new Error(\"Can't find the tileset from the memory.\");\r\n        }\r\n\r\n        if(Array.isArray(tilesets) && tilesets.length <= 0) {\r\n            throw new Error(\"The tileset image can't create correctly.\");\r\n        }\r\n\r\n        return tilesets[0];\r\n    }\r\n    \r\n    cropTexture(dx, dy, texture) {\r\n        const crop = new PIXI.Rectangle(dx, dy, this._tileWidth, this._tileHeight);\r\n        const cropTexture = new PIXI.Texture(texture.baseTexture, crop);\r\n        \r\n        return cropTexture;\r\n    }\r\n\r\n    collectAutoTileID(mx, my) {\r\n        const mapX = Math.floor(mx / this._tileWidth);\r\n        const mapY = Math.floor(my / this._tileHeight);\r\n        const layerId = this._currentLayer;\r\n        let mask = 0x00;\r\n        const bits = [\r\n            this.getData(mapX + 0, mapY - 1, layerId) <= 0, // 북\r\n            this.getData(mapX + 1, mapY - 1, layerId) <= 0, // 동북\r\n            this.getData(mapX + 1, mapY + 0, layerId) <= 0, // 동\r\n            this.getData(mapX + 1, mapY + 1, layerId) <= 0, // 동남\r\n            this.getData(mapX + 0, mapY + 1, layerId) <= 0, // 남\r\n            this.getData(mapX - 1, mapY + 1, layerId) <= 0, // 남서\r\n            this.getData(mapX - 1, mapY + 0, layerId) <= 0, // 서\r\n            this.getData(mapX - 1, mapY - 1, layerId) <= 0 // 북서\r\n        ];\r\n\r\n        bits.forEach((e, i, a) => {\r\n            if(e === true) {\r\n                mask += (1 << i);\r\n            }\r\n        });\r\n\r\n        return mask;\r\n    }    \r\n\r\n    drawTile(mx, my, tileID) {\r\n        let mapX = Math.floor(mx / this._tileWidth);\r\n        let mapY = Math.floor(my / this._tileHeight);\r\n\r\n        console.log(mx, my, mapX, mapY);\r\n\r\n        this.setData(mapX, mapY, this._currentLayer, tileID);\r\n\r\n        this._dirty = true;\r\n    }\r\n\r\n    /**\r\n     * Print tiles to certain area.\r\n     * @param {Number} sx \r\n     * @param {Number} sy \r\n     * @param {Number} ex \r\n     * @param {Number} ey \r\n     * @param {Number} tileID \r\n     */\r\n    drawRect(sx, sy, ex, ey) {\r\n\r\n        let mx = Math.floor(sx / this._tileWidth);\r\n        let my = Math.floor(sy / this._tileHeight);       \r\n\r\n        const tileID = this._tileId;\r\n        \r\n        const width = mx + ex;\r\n        const height = my + ey;\r\n\r\n        for(let y = my; y < height; y++) {\r\n            for(let x = mx; x < width; x++) {\r\n                this.setData(x, y, this._currentLayer, tileID);\r\n            }\r\n        }        \r\n\r\n        this._dirty = true;\r\n    }\r\n\r\n    isAutoTile(tileID) {\r\n        return this._autoTileIndexedList.indexOf(tileId) >= 0;\r\n    }\r\n\r\n    update(...args) {\r\n        const penType = this._penType;\r\n        const tileId = this._tileId;\r\n\r\n        // if(this.isAutoTile(tileId)) {\r\n        //     this._tileId = this.collectAutoTileID(this._mouseX, this._mouseY);\r\n        //     this._tileset = this._autoTileTextureList[tileId];\r\n        //     this._tileType = 1;\r\n        // } else {\r\n        //     this._tileType = 0;\r\n        // }\r\n\r\n        switch(penType) {\r\n            case 0: \r\n                this.drawTile(this._mouseX, this._mouseY, tileId);\r\n                break;\r\n            case 1:\r\n                this.drawRect(this._mouseX, this._mouseY, 20, 5);\r\n                break;\r\n        }\r\n  \r\n        if(this._dirty) {\r\n            this.draw();\r\n            this._dirty = false;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this._layerContainer.children.forEach(i => {\r\n            i.removeChildren();\r\n        });\r\n    }\r\n\r\n    getTileCropTexture(tileID) {\r\n        let texture = PIXI.Texture.from(this._tileset);\r\n        const mapCols = Math.floor(texture.width / this._tileWidth);\r\n        const mapRows = Math.floor((texture.height) / this._tileHeight);\r\n        const dx = (tileID % mapCols) * this._tileWidth;\r\n        const dy = Math.floor(tileID / mapCols) * this._tileHeight;        \r\n        const cropTexture = this.cropTexture(dx, dy, texture);\r\n\r\n        return cropTexture;\r\n    }\r\n\r\n    toggleLayerVisibility(layerId) {\r\n        if(!this._layerContainer) return;\r\n        const children = this._layerContainer.children;\r\n        children[layerId].visible = !children[layerId].visible;\r\n    }\r\n\r\n    updateAlphaLayers() {\r\n        const currentLayer = this._currentLayer;\r\n        const children = this._layerContainer.children;\r\n        const layers = children.filter((e, i, a) => {\r\n            return i !== currentLayer;\r\n        });\r\n\r\n        layers.forEach(layer => {\r\n            layer.alpha = 0.25;\r\n        });\r\n\r\n        children[currentLayer].alpha = 1.0;\r\n    }\r\n\r\n    draw() {        \r\n        this.clear();\r\n\r\n        const mapWidth = this._mapWidth;\r\n        const mapHeight = this._mapHeight;\r\n\r\n        for(let z = 0; z < this._config.LAYERS; z++) {\r\n            const container = this._layerContainer.children[z];\r\n            for(let y = 0; y < mapHeight; y++) {\r\n                for(let x = 0; x < mapWidth; x++) {\r\n                    const tileID = this.getData(x, y, z);\r\n                    if(!tileID) continue;\r\n                    const sprite = new PIXI.Sprite(this.getTileCropTexture(tileID));\r\n                    sprite.x = x * this._tileWidth;\r\n                    sprite.y = y * this._tileHeight;\r\n                    container.addChild(sprite);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n","function toCamelCase(name) {\r\n    const snake = name || \"\";\r\n\r\n    let nodes = snake.split(/[\\s\\-]/);\r\n    let nodesTail = nodes.slice(1);\r\n    \r\n    const camel = nodes[0].concat(nodesTail.map(i => i[0].toUpperCase() + i.slice(1)));\r\n    return camel;\r\n}\r\n\r\nfunction getClassName(name) {\r\n    const str = toCamelCase(name);\r\n    return str.slice(0, 1).toUpperCase() + str.slice(1);\r\n}\r\n\r\nexport {toCamelCase, getClassName};","class Schema {\r\n    constructor(config) {   \r\n        this.initMembers(config);\r\n    }\r\n\r\n    initMembers(config) {\r\n    }\r\n\r\n    toJson() {\r\n        return JSON.stringify(this);\r\n    }\r\n}\r\n\r\nexport {Schema};","import { Schema } from \"./Schema.js\";\r\n\r\nclass EditorSchema extends Schema {\r\n    initMembers(config) {\r\n        this.ProjectPath = \"E:\\\\VS2015\\\\Projects\\\\Initial2D\";\r\n        this.TileWidth = 16;\r\n        this.TileHeight = 16;\r\n        this.CurrentLayer = 1;\r\n        this.StartMapId = 1;\r\n        this.CurrentMapId = 1;\r\n    }\r\n}\r\n\r\nexport {EditorSchema};","import {EditorSchema} from \"./schema/EditorSchema\";\r\nimport {MapSchema} from \"./schema/MapSchema\";\r\n\r\nconst config = {\r\n    SCREEN_WIDTH: 800,\r\n    SCREEN_HEIGHT: 600,\r\n    TILE_WIDTH: 16,\r\n    TILE_HEIGHT: 16,\r\n    MAP_COLS: 32,\r\n    MAP_ROWS: 8,\r\n    LAYERS: 4,\r\n    TRANSPARENT_COLOR_GROUP: [\"#007575\"],\r\n    TILESET_IMGAGES: [\r\n        \"./images/tiles/tileset16-8x13.png\",\r\n        \"./images/tiles/2k_town05.png\",\r\n        \"./images/tiles/2k_town05-01.png\",\r\n    ],\r\n    Editor: new EditorSchema(),\r\n    Maps: new EditorSchema(),\r\n};\r\n\r\nexport {config};","import { app } from \"electron\";\r\nimport {config} from \"./config.js\";\r\n\r\nexport default class TilesetCanvas {\r\n    constructor(...args) {\r\n        this.initMembers(...args)\r\n    }\r\n\r\n    initMembers(...args) {\r\n        this._config = args[0];\r\n        this._isReady = false;\r\n        this._tilesetImgages = this._config.TILESET_IMGAGES;\r\n    }\r\n\r\n    async start() {\r\n        return this.loadTilesets();\r\n    }\r\n\r\n    async loadTilesets() {\r\n        this._tilesets = [];\r\n\r\n        let count = 0;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            for(let i = 0; i < this._tilesetImgages.length; i++) {\r\n                const elem = $(\"<img>\").attr(\"src\", this._tilesetImgages[i]);   \r\n                elem.on(\"load\", () => {     \r\n                    this._tilesets.push(elem);\r\n                    \r\n                    ++count;\r\n\r\n                    if(count >= this._tilesetImgages.length) {\r\n                        console.log(this._tilesetImgages[i]);\r\n                        this.createCanvas();\r\n                        resolve();\r\n                    }\r\n                });\r\n                elem.on(\"error\", reject);\r\n            }\r\n        });       \r\n    }\r\n\r\n    /**\r\n     * 이 메소드는 타일셋을 지우고 다시 처음부터 그립니다.\r\n     * 새로운 이미지가 있으면 맨 아래에 추가됩니다.\r\n     */\r\n    async refreshTilesets(newTileset) {\r\n        \r\n        this._tilesetImgages.push(newTileset);\r\n\r\n        if(this._canvas) {\r\n            this._canvas.remove();\r\n        }\r\n\r\n        await this.start().then(ret => {\r\n            window.app.createComponents();\r\n        })\r\n    }\r\n\r\n    createCanvas() {\r\n\r\n        const canvasWidth = this._config.TILE_WIDTH * this._config.MAP_COLS;\r\n        const canvasHeight = this._config.TILE_HEIGHT * this._config.MAP_ROWS * 4;\r\n\r\n        this._parent = $(\"#view\");\r\n        this._canvas = $(\"<canvas />\", {\"id\": \"tileset-canvas\"})\r\n            .attr(\"width\", canvasWidth)\r\n            .attr(\"height\", canvasHeight)\r\n            .css({\r\n                \"padding\": \"0\",\r\n                \"margin\": \"0\"\r\n            });\r\n\r\n        this._parent.prepend(this._canvas)\r\n        this._parent.css({\r\n            \"width\": \"100%\",\r\n            \"height\": \"60%\",\r\n        });\r\n\r\n        /**\r\n         * @type {CanvasRenderingContext2D}\r\n         */\r\n        this._context = this._canvas.get(0).getContext(\"2d\");\r\n        const ctx = this._context;\r\n\r\n        let acc = 0;\r\n\r\n        let maxW = 0;\r\n        let maxH = 0;\r\n        \r\n        for(let i = 0; i < this._tilesetImgages.length; i++) {\r\n\r\n            /**\r\n             * @type {JQuery}\r\n             */\r\n            const img = this._tilesets[i];\r\n            const width = img.get(0).naturalWidth;\r\n            const height = img.get(0).naturalHeight;   \r\n            \r\n            if(height > acc + height) {\r\n                maxH = acc + height;\r\n                this._canvas.prop(\"height\" , maxH);                \r\n            }\r\n\r\n            ctx.setTransform(1, 0, 0, 1, 0, acc);\r\n            ctx.imageSmoothingEnabled = false;\r\n            ctx.drawImage(img.get(0), 0, 0, width, height);\r\n            acc += height;            \r\n        }\r\n\r\n        this._isReady = true;\r\n    }\r\n\r\n    \r\n}\r\n","import {TilesetMarker} from \"./tilesetMarker.js\";\r\n\r\nexport default class TileMarker extends TilesetMarker {\r\n\r\n    initWithElement() {\r\n        const parent = $(\".contents\");\r\n        let child = null;\r\n        if((child = document.querySelector(\"#tile-marker\"))) {\r\n            parent.get(0).removeChild(child);\r\n            return;\r\n        }\r\n\r\n        this._element = $(\"<div></div>\", {\"id\" : \"tile-marker\"})\r\n            .css({\r\n                \"min-width\": `${this._tileWidth}px`,\r\n                \"min-height\": `${this._tileHeight}px`,\r\n                \"width\": `${this._tileWidth}px`,\r\n                \"height\": `${this._tileHeight}px`,\r\n                \"position\": \"absolute\",\r\n                \"top\": \"0\",\r\n                \"left\": \"0\",\r\n                \"margin\": \"0\",\r\n                \"padding\": \"0\",\r\n                \"border\": \"2px dotted white\",\r\n                \"z-index\": \"0\",\r\n                \"box-sizing\": \"border-box\",\r\n            });\r\n\r\n        this._isReady = true;\r\n        \r\n        parent.append(this._element);\r\n    }\r\n\r\n    update(...args) {\r\n        if(!this._isReady) {\r\n            return;\r\n        }\r\n\r\n        const target = args[0].target;\r\n\r\n        const img = $(\"#contents__main-canvas\");\r\n        const mapCols = Math.floor(img.width() / this._config.TILE_WIDTH);\r\n        const tilesetWidth = img.width();\r\n        const tilesetHeight = img.height();\r\n        const topY = 0;\r\n\r\n        const mouse = args[0];\r\n\r\n        const tw = this._tileWidth;\r\n        const th = this._tileHeight;\r\n        let nx = Math.floor(mouse.x / tw) * tw;\r\n        let ny = Math.floor(mouse.y / th) * th;\r\n\r\n        const targetX = nx / tw;\r\n        const targetY = (ny - topY) / th;\r\n\r\n        if(nx < 0) {\r\n            nx = 0;\r\n        }\r\n        if(nx > tilesetWidth - tw) {\r\n            nx = tilesetWidth - tw;\r\n        }\r\n        if(ny < 0) {\r\n            ny = 0;\r\n        }\r\n        if(ny > tilesetHeight) {\r\n            ny = tilesetHeight - th + topY;\r\n        }\r\n\r\n        this._element.css({\r\n            position : \"absolute\",\r\n            left : nx + \"px\",\r\n            top : ny - topY + \"px\",\r\n        });     \r\n    }    \r\n}","export default class Model {\r\n    \r\n    constructor() {\r\n        this._data = this.getData();\r\n    }\r\n\r\n    /**\r\n     * @return {{\r\n     *  width: String,\r\n     *  height: String,\r\n     *  parentId: String,\r\n     *  id: String,\r\n     *  zIndex: String,\r\n     *  path: String,\r\n     * }}\r\n     */\r\n    getData() {\r\n        return {\r\n        }; \r\n    }\r\n\r\n    get data() {\r\n        return this._data;\r\n    }\r\n}","import Model from \"./Model.js\";\r\n\r\nexport default class GamePropertiesWindowModel extends Model {\r\n\r\n    getData() {\r\n        return {\r\n            width: \"240px\",\r\n            height: \"100%\",\r\n            parentId: \".windows-container\",\r\n            id: \"newContainer\", /** ID에 \"Window\"가 들어가면 안됩니다 */\r\n            zIndex: \"10\",\r\n            path: \"view/windows/newWindow.html\",\r\n            position: \"absolute\",\r\n            display: \"flex\",\r\n        }; \r\n    }\r\n\r\n}","import App from \"../App\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class BaseController {\r\n\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        this.initMembers(config.data);\r\n        this.initWithCanvas();\r\n    }\r\n\r\n    initMembers(config) {\r\n\r\n        /**\r\n         * 실제 HTML 파일이 있는 위치\r\n         */\r\n        this._config = config;\r\n        this._isValid = false;\r\n        this._uniqueId = null;\r\n    }    \r\n\r\n    setUniqueId(id) {\r\n        this._uniqueId = id;\r\n    }\r\n\r\n    initWithCanvas() {\r\n        const config = this._config;\r\n\r\n        if(!config.parentId || !config.id) {\r\n            throw new Error(\"The parent element is not exist!\");\r\n        }\r\n\r\n        this._element = $(\"<div></div>\")\r\n            .css(config)\r\n            .attr(\"id\", config.id)\r\n            .draggable({ snap: \".container\" });\r\n\r\n        this.hide();\r\n\r\n        $(`#${config.id}`).resizable({containment: config.parentId});\r\n\r\n        $(config.parentId).append(this._element);\r\n\r\n    }\r\n\r\n    isMobile() {\r\n        const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/i;\r\n        return !!navigator.userAgent.match(r);\r\n    }    \r\n\r\n    hide() {\r\n        $(this._config.parentId).hide();    \r\n        this._element.hide();\r\n        this._isValid = false;\r\n    }\r\n\r\n    show() {\r\n        this._element.show();\r\n        $(this._config.parentId).show();\r\n        this._isValid = true;\r\n        $(\".darken, .windows-container\").css(\"left\", \"0\");\r\n    }    \r\n\r\n    remove() {\r\n        this._element.fadeOut(700, () => {\r\n            this._element.remove();\r\n        });\r\n        $(\".darken, .windows-container\").css(\"left\", \"-9999px\");\r\n        delete App.GetInstance().cache[this._uniqueId];\r\n    }\r\n\r\n    isMobile() {\r\n        const r = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/i;\r\n        return !!navigator.userAgent.match(r);\r\n    }     \r\n    \r\n    load() {\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            const path = this._config.path;\r\n            const url = `${location.href.slice(0,location.href.lastIndexOf(\"/\"))}/${path}`;\r\n            xhr.open(\"GET\", url);\r\n            xhr.onload = function() {\r\n                if(xhr.status === 200) {\r\n                    resolve(xhr.responseText);\r\n                }\r\n            }\r\n            xhr.onerror = reject;\r\n            xhr.send();\r\n        });\r\n    }\r\n\r\n    async render() {\r\n        await this.load().then(result => {\r\n            this._element.html(result);\r\n        }).catch(err => {\r\n            console.warn(err);\r\n        });\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        this.addEventHandlers(elem, self);\r\n    }    \r\n\r\n    addEventHandlers() {\r\n\r\n    }\r\n\r\n}","import GamePropertiesWindowModel from \"../models/GamePropertiesWindow.js\";\r\nimport BaseController from \"./BaseController.js\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class GamePropertiesWindowController extends BaseController {\r\n\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        super( config );\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        super.onLoad(elem, self);\r\n        const parent = elem.parentNode;\r\n        parent.querySelector(\".newWindow__control-box p i\").onclick = () => {\r\n            self.remove();\r\n            \r\n        };\r\n        this.show();\r\n        $(\".darken, .windows-container\").css(\"left\", \"0\");\r\n    }\r\n\r\n    onClick(ev) {\r\n        // 창을 화면에 보이게 합니다.\r\n        this.show();\r\n        // 펼쳐진 메뉴를 다시 접습니다.\r\n        $(\"#none\").prop(\"checked\", true);        \r\n    }\r\n\r\n    onOkButton(ev) {\r\n        const container = $(\"#newContainer #newWindow\");\r\n        const inp = container.find(\"input\");\r\n        const data = {\r\n            gameName: $(inp[0]).val(),\r\n            gameFolder: $(inp[1]).val(),\r\n            author: $(inp[2]).val(),\r\n        };\r\n\r\n        alert(JSON.stringify(data, null, \"\\t\"));\r\n        this.remove();\r\n    }\r\n\r\n    addEventHandlers(elem, self) {        \r\n        const container = $(\"#newContainer #newWindow\");\r\n        const okButton = container.find(\"div.panel\");\r\n        okButton.eq(0).on(\"click\", ev => {\r\n            this.onOkButton(ev); \r\n        });\r\n    }\r\n}\r\n","import Model from \"./Model.js\";\r\n\r\nexport class TilesetWindowModel extends Model {\r\n    getData() {\r\n        return {\r\n            width: \"540px\",\r\n            height: \"100%\",\r\n            parentId: \".windows-container\",\r\n            id: \"tileset-container\", /** ID에 \"Window\"가 들어가면 안됩니다 */\r\n            zIndex: \"10\",\r\n            path: \"view/windows/tilesetWindow.html\",\r\n            opacity: \"1.0\",\r\n        }\r\n    }\r\n}","export default class Rectangle {\r\n\r\n    constructor(x, y, width, height) {\r\n        this._x = x;\r\n        this._y = y;\r\n        this._width = width;\r\n        this._height = height;\r\n    }\r\n\r\n    get x() {\r\n        return this._x;\r\n    }\r\n\r\n    get y() {\r\n        return this._x;\r\n    }\r\n\r\n    get width() {\r\n        return this._width;\r\n    }\r\n\r\n    get height() {\r\n        return this._height;\r\n    }\r\n\r\n    set x(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set y(value) {\r\n        this._x = value;\r\n    }\r\n\r\n    set width(value) {\r\n        this._width = value;\r\n    }\r\n\r\n    set height(value) {\r\n        this._height = value;\r\n    }\r\n\r\n    contains(mx, my) {\r\n        const x = this._x;\r\n        const y = this._y;\r\n        const width = this._width;\r\n        const height = this._height;\r\n        return mx >= x && mx <= (x + width) && my >= y && my <= (y + height);\r\n    }\r\n}\r\n\r\nRectangle.EMPTY = new Rectangle(0, 0, 0, 0);","\r\n/**\r\n * 비어있는 메뉴\r\n */\r\nconst EmptySegment = {\r\n    name: \"toolbar__empty-line--modifier\",\r\n    children: \"empty-line\",\r\n    action: (ev) => {\r\n        \r\n    },  \r\n};\r\n\r\nexport {EmptySegment};","import {FileToolbar} from \"./FileToolbar\";\r\nimport {EditToolbar} from \"./EditToolbar\";\r\nimport {ModeToolbar} from \"./ModeToolbar\";\r\nimport {DrawToolbar} from \"./DrawToolbar\";\r\nimport {OtherToolbar} from \"./OtherToolbar\";\r\n\r\n// 모든 배열을 하나로 합칩니다.\r\nconst Toolbar = [].concat(\r\n    FileToolbar, \r\n    EditToolbar, \r\n    ModeToolbar,\r\n    DrawToolbar,\r\n    OtherToolbar,\r\n);\r\n\r\n/**\r\n * @class ToolbarManager\r\n * @description \r\n * This class allows you to control the toolbar and hide or show in the current tool.\r\n */\r\nclass ToolbarManager {\r\n    constructor() {\r\n        this.initMembers();\r\n        this.create();\r\n    }\r\n\r\n    initMembers() {\r\n        this._mainToolbarId = \".toolbar\";\r\n        this._isOpened = false;\r\n\r\n        // Setting up as true this variable, it can't move the toolbar.\r\n        this._isMovable = false;\r\n        this.lock();\r\n\r\n        this._originPosition = $(this._mainToolbarId).get(0).getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * Shows up the toolbar.\r\n     */\r\n    show() {\r\n        this._isOpened = true;\r\n\r\n        $(this._mainToolbarId)\r\n            .show();\r\n    }\r\n\r\n    /**\r\n     * Hides out the toolbar.\r\n     */\r\n    hide() {\r\n        this._isOpened = false;\r\n\r\n        $(this._mainToolbarId)\r\n            .hide();\r\n\r\n    }\r\n\r\n    lock() {\r\n        $(this._mainToolbarId).draggable({disabled: true});\r\n    }\r\n\r\n    unlock() {\r\n        const {x, y} = this._originPosition;\r\n\r\n        $(this._mainToolbarId).css({\r\n            left: x,\r\n            top: y,\r\n        });\r\n\r\n        $(this._mainToolbarId).draggable({disabled: false});\r\n    }\r\n\r\n    create() {\r\n        $(`li`, this._mainToolbarId).each((index, elem) => {\r\n            console.log(elem, Toolbar[index]);\r\n        })\r\n\r\n        /**\r\n         * @type {{name: String, children: String, action: Function}[]}\r\n         */\r\n        const items = Toolbar.slice(0);\r\n        items.forEach((e, i, a) => {\r\n            const target = $(`li[data-action='${e.children}']:last`);\r\n            if(target.get()[0]) {\r\n                target.on(\"click\", ev => {\r\n                    if(typeof(e.action) === \"function\") {\r\n                        e.action.call(this, ev);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n\r\nwindow.ToolbarManager = new ToolbarManager();\r\n\r\nexport {Toolbar, ToolbarManager};","import {EmptySegment} from \"./EmptySegment\";\r\nimport { WindowCreator } from \"../WindowCreator\";\r\n\r\nconst FileToolbar = [\r\n    {\r\n        name: \"파일 만들기\",\r\n        children: \"file-new\",\r\n        action: (ev) => {\r\n            WindowCreator.GrapWindow(ev);\r\n        },           \r\n    },\r\n    {\r\n        name: \"파일 열기\",\r\n        children: \"file-open\",\r\n        action: (ev) => {\r\n            WindowCreator.GrapWindow(ev);\r\n        },           \r\n    },\r\n    {\r\n        name: \"파일 저장\",\r\n        children: \"file-save\",\r\n        action: (ev) => {\r\n            WindowCreator.GrapWindow(ev);\r\n        },           \r\n    },\r\n    {\r\n        name: \"파일 저장\",\r\n        children: \"edit-undo\",\r\n        action: (ev) => {\r\n            WindowCreator.GrapWindow(ev);\r\n        },           \r\n    },\r\n    EmptySegment,\r\n];\r\n\r\nexport {FileToolbar};","import {EmptySegment} from \"./EmptySegment\";\r\nimport { WindowCreator } from \"../WindowCreator\";\r\n\r\nconst EditToolbar = [\r\n    {\r\n        name: \"\",\r\n        children: \"edit-cut\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"edit-copy\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"edit-paste\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"edit-delete\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    EmptySegment,\r\n];\r\n\r\nexport {EditToolbar};","import {EmptySegment} from \"./EmptySegment\";\r\nimport { WindowCreator } from \"../WindowCreator\";\r\n\r\nconst ModeToolbar = [\r\n    {\r\n        name: \"\",\r\n        children: \"mode-map\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"mode-event\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"mode-region\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    EmptySegment,\r\n];\r\n\r\nexport {ModeToolbar};","import {EmptySegment} from \"./EmptySegment\";\r\n\r\nconst DrawToolbar = [\r\n    {\r\n        name: \"\",\r\n        children: \"draw-pencil\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"draw-rectangle\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"draw-ellipse\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"draw-flood-fill\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"draw-shadow-pen\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    EmptySegment,\r\n];\r\n\r\nexport {DrawToolbar};","import {EmptySegment} from \"./EmptySegment\";\r\nimport { WindowCreator } from \"../WindowCreator\";\r\n\r\nconst OtherToolbar = [\r\n    {\r\n        name: \"\",\r\n        children: \"take-screenshot\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"tools-resource-manager\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"tools-script-eidtor\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    {\r\n        name: \"\",\r\n        children: \"tools-sound-test\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    EmptySegment,\r\n    {\r\n        name: \"\",\r\n        children: \"tools-options\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    EmptySegment,\r\n    {\r\n        name: \"\",\r\n        children: \"game-playtest\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n    EmptySegment,\r\n    {\r\n        name: \"\",\r\n        children: \"game-folder-open\",\r\n        action: (ev) => {\r\n            \r\n        },           \r\n    },\r\n];\r\n\r\nexport {OtherToolbar};","\r\nimport {EventEmitter} from \"./EventEmitter.js\";\r\nimport { Component } from \"./Component.js\";\r\nimport {MenuComponent} from \"./MenuComponent.js\";\r\nimport {TilesetMarker} from \"./tilesetMarker.js\";\r\nimport Tilemap from \"./Tilemap.js\";\r\nimport {toCamelCase} from \"./camelCase.js\"\r\nimport TilesetCanvas from \"./TilesetCanvas.js\";\r\nimport TileMarker from \"./TileMarker.js\";\r\nimport {config} from \"./config.js\";\r\nimport MenuService from \"./MenuService.js\";\r\nimport Rectangle from \"./Rectangle.js\";\r\nimport { WindowCreator } from \"./WindowCreator.js\";\r\nimport {Toolbar, ToolbarManager} from \"./toolbar/Toolbar\";\r\n\r\nexport default class App extends EventEmitter {\r\n\r\n    /**\r\n     * 멤버 변수를 초기화합니다.\r\n     */\r\n    initMembers() {\r\n        this.cache = {};\r\n        this._config = config;\r\n        this._mouse = {\r\n            x: 0,\r\n            y: 0, \r\n            screenX : 0,\r\n            screenY : 0,\r\n            buttons: {\r\n                left: false,\r\n                leftFire: false,\r\n            },\r\n            /**\r\n             * @type {HTMLElement}\r\n             */            \r\n            target: null,\r\n            /**\r\n             * @type {HTMLElement}\r\n             */                        \r\n            menuTarget: null,\r\n        };\r\n\r\n        /**\r\n         * 사각형 툴을 위한 선택 영역\r\n         * @link http://jsfiddle.net/qGzkG/2/\r\n         */\r\n        this._blockRect = {\r\n            isDrawing: false,\r\n            rect: new Rectangle(0, 0, 1, 1),\r\n        };\r\n        this._now = performance.now();\r\n        this._isMenuOpen = false;\r\n        this._tileId = 0;\r\n        this._isReady = false;\r\n\r\n        // 타이틀을 변경합니다.\r\n        document.title = \"Initial Map Editor\";\r\n\r\n        this.emit(\"ready\", JSON.stringify(this));\r\n    }\r\n\r\n    /**\r\n     * Creates all components.\r\n     */\r\n    createComponents() {\r\n        this._components.push(this._tilesetMarker = new TilesetMarker(this._config));                    \r\n        this._components.push(this._tilemap = new Tilemap(this._config));    \r\n        this._components.push(this._tileMarker = new TileMarker(this._config));    \r\n        this._components.forEach(component => {\r\n            component.start();\r\n        });            \r\n        this._tilemap.setTileId(0);\r\n    }\r\n\r\n    /**\r\n     * 컴포넌트를 초기화합니다.\r\n     */\r\n    async initWithComponents() {\r\n        /**\r\n         * @type {Component[]}\r\n         */\r\n        this._components = [];\r\n        this._components.push(this._menu = new MenuComponent(this._config));\r\n        this._components.push(this._menuController = new MenuService(this._config, this._menu));\r\n\r\n        this._tilesetCanvas = new TilesetCanvas(this._config);\r\n        await this._tilesetCanvas.start().then(ret => {\r\n            this.createComponents();\r\n        }).then(ret => {\r\n            $(\".darken, .windows-container\").css(\"left\", \"-9999px\");\r\n        }).catch(err => {\r\n            console.warn(err);\r\n        });\r\n    }\r\n\r\n    toCamelCase() {\r\n        return toCamelCase();\r\n    }\r\n\r\n    isMobileDevice() {\r\n        const ret = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        return ret;\r\n    }\r\n\r\n    onMouseTouchMove(ev) {\r\n        this._mouse.x = ev.layerX;\r\n        this._mouse.y = ev.layerY;\r\n        this._mouse.screenX = ev.layerX;\r\n        this._mouse.screenY = ev.layerY;\r\n    }\r\n\r\n    /**\r\n     * 마우스 이벤트 및 터치 이벤트를 초기화합니다.\r\n     */\r\n    initWithMouseEvent() {\r\n\r\n        const isMobileDevice = this.isMobileDevice();\r\n        let events;\r\n\r\n        if(isMobileDevice) {\r\n            events = {\r\n                \"touchmove\": (ev) => {        \r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }                          \r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;\r\n                },\r\n                \"touchstart pointerdown\": (ev) => {\r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }\r\n                    \r\n                    this._mouse.target = ev.target; \r\n\r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;           \r\n                    this._mouse.buttons.left = true;\r\n                    this._mouse.buttons.leftFire = false;                  \r\n                },\r\n                \"touchend pointerup mouseup\": (ev) => {\r\n                    this._mouse.buttons.left = false;\r\n                    this._mouse.buttons.leftFire = true; \r\n                }\r\n            };\r\n\r\n            $(window).on(events);\r\n\r\n        } else {\r\n            events = {\r\n                \"mousemove\": (ev) => {\r\n                    this._mouse.x = ev.layerX;\r\n                    this._mouse.y = ev.layerY;\r\n                    this._mouse.screenX = ev.layerX;\r\n                    this._mouse.screenY = ev.layerY;\r\n                },\r\n                \"mousedown\": (ev) => {\r\n                    if(ev.button == 0) {                 \r\n                        this._mouse.buttons.left = true;\r\n                        this._mouse.buttons.leftFire = false;\r\n                        this._mouse.target = ev.target;\r\n                    }\r\n                },\r\n                \"mouseup\": (ev) => {\r\n                    if(ev.button == 0) {\r\n                        this._mouse.buttons.left = false;\r\n                        this._mouse.buttons.leftFire = true;\r\n\r\n                        this._blockRect.isDrawing = false;\r\n                    }\r\n                },\r\n                \"mouseover\": (ev) => {\r\n                    if(this._menu._isMenuOpen) {\r\n                        this._mouse.buttons.menuTarget = ev.target;\r\n                        this._menu.emit(\"menu_open\", this._mouse.buttons.menuTarget);\r\n                    }\r\n                }\r\n            }         \r\n            \r\n            for(let k in events) {\r\n                window.addEventListener(k, events[k], false);\r\n            }                 \r\n        }\r\n  \r\n    }\r\n\r\n    setTileId(tileId) {\r\n        if(!this._tilemap) return;\r\n        this._tilemap.setTileId(tileId);\r\n    }\r\n\r\n    /**\r\n     * 레이어를 토글하는 기능을 수행합니다.\r\n     */\r\n    initWithMapLayers() {\r\n        const children = $(\"ul.aside__tabs__maptree-child-tree li i\").children();\r\n        let target = null;\r\n\r\n        // 레이어 항목에서 눈 아이콘을 추가합니다.\r\n        children.each((index, elem) => {\r\n            const e = e.get(0);\r\n            elem.click(() => {\r\n                e.className = e.className.includes(\"slash\") ? \"far fa-eye\":\"far fa-eye-slash\";\r\n            });\r\n        });\r\n\r\n        // 레이어 항목에서 눈 아이콘을 누르면 눈을 감고 있는 아이콘(슬래쉬가 쳐진 아이콘)으로 토글합니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li i\").on(\"click\", (ev) => {\r\n            const target = $(ev.currentTarget);\r\n            const parentNode = $(ev.currentTarget).parent();\r\n            const layerId = parentNode.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            if(target.hasClass(\"fa-eye\")) {\r\n                target.removeClass(\"fa-eye\")\r\n                    .addClass(\"fa-eye-slash\");\r\n            } else {\r\n                target.removeClass(\"fa-eye-slash\")\r\n                    .addClass(\"fa-eye\");                \r\n            }\r\n\r\n            tilemap.toggleLayerVisibility(layerId);\r\n        });\r\n\r\n        // 눈 아이콘을 선택했을 때 선택 영역을 강조하며 선택되지 않은 영역은 강조하지 않습니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li\").on(\"click\", (ev) => {\r\n            const elem = $(ev.currentTarget).css({\r\n                \"backgroundColor\": \"var(--dark-selection-color)\"\r\n            });\r\n            $(\"ul.aside__tabs__maptree-child-tree li\").not(elem).css({\r\n                \"backgroundColor\": \"rgba(255, 255, 255, 0)\"\r\n            });\r\n\r\n            const layerId = elem.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            // 타일맵을 지우고 다시 그립니다.\r\n            tilemap.setCurrentLayerId(layerId);\r\n            tilemap.clear();\r\n            tilemap.draw();\r\n            tilemap.updateAlphaLayers();\r\n        });\r\n\r\n        $(\"ul.aside__tabs__maptree-child-tree li:first-child\").trigger(\"click\");\r\n    }\r\n\r\n    start() {\r\n        this.initMembers();\r\n        this.initWithMouseEvent();\r\n\r\n        // 모든 컴포넌트가 초기화된 이후 시점에 특정 작업을 수행합니다.\r\n        this.initWithComponents()\r\n            .then(ret => {\r\n                this.initWithMapLayers();     \r\n                this._isReady = true;       \r\n\r\n                this.on(\"update\", (deltaTime) => {\r\n                    this.update(deltaTime);\r\n                });\r\n                \r\n            }).catch(err => {\r\n                console.warn(err);\r\n                this._isReady = false;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 매 프레임마다 반복 실행되는 메소드입니다.\r\n     * @param {Number}} deltaTime \r\n     */\r\n    update(deltaTime) {\r\n\r\n        if(!this._isReady) return;\r\n\r\n        // 400ms가 지났을 때 마다 무언가를 실행합니다.\r\n        if(deltaTime - this._now >= 400) {\r\n            this._now = deltaTime;\r\n        }\r\n\r\n        this.updateComponents();\r\n\r\n        this._mouse.buttons.leftFire = false;\r\n    }\r\n\r\n    updateComponents() {        \r\n        const target = this._mouse.target;\r\n\r\n        if(!target) {\r\n            return;\r\n        }\r\n        \r\n        const id = target.id;\r\n        const mouse = this._mouse;\r\n\r\n        this._menu.update(target, mouse);\r\n\r\n        if(!this._menu.isMenuOpen()) {\r\n            switch(id) {\r\n                case \"tileset-canvas\":\r\n                case \"view\":\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tilesetMarker.update(mouse);\r\n                    }\r\n                    break;\r\n                case \"contents__main-canvas\":\r\n                    if(this._mouse.buttons.left) {\r\n                        this._tilemap.update(mouse);                                        \r\n                    }\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tileMarker.update(mouse);    \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} elem \r\n     * @param {Number} id \r\n     */\r\n    onLoad(elem, id) {\r\n        WindowCreator.onLoad(elem, id);\r\n    }\r\n\r\n    /**\r\n     * @return {App}\r\n     */\r\n    static GetInstance() {\r\n        if(!App.Instance) {\r\n            App.Instance = new App();\r\n        }\r\n        \r\n        return App.Instance;\r\n    }\r\n}\r\n\r\nApp.Instance = null;","import TilesetWindowModel from \"../models/TilesetWindow.js\";\r\nimport BaseController from \"./BaseController.js\";\r\nimport App from \"../app.js\";\r\n\r\n/**\r\n * @author Eo Jinseok\r\n * @class Renderer\r\n */\r\nexport default class TilesetWindowController extends BaseController {\r\n    /**\r\n     * @param {GamePropertiesWindow} config\r\n     */\r\n    constructor(config) {\r\n        super( config );\r\n    }\r\n\r\n    onLoad(elem, self) {\r\n        super.onLoad(elem, self);\r\n        const parent = elem.parentNode;\r\n        parent.querySelector(\".tilesetWindow__control-box p i\").onclick = () => {\r\n            self.remove();\r\n        };\r\n\r\n        $(elem.parentNode).find(\".tilesetWindow__panel #ok\").on(\"click\", ev => {\r\n            this.onOk(ev);\r\n        })\r\n\r\n        $(elem.parentNode).find(\".tilesetWindow__panel #cancel\").on(\"click\", ev => {\r\n            this.onCancel(ev);\r\n        })\r\n\r\n        $(\"input#image-load-dialog\").on(\"change\", (ev) => {\r\n            /**\r\n             * @type {File[]}\r\n             */\r\n            const files = Array.from(ev.target.files);\r\n            console.log(files[0].name, files[0].path);\r\n\r\n            // 타일셋을 다시 그립니다.            \r\n            // app._tilesetCanvas.refreshTilesets(files[0].path);\r\n\r\n        })\r\n\r\n        this.show();\r\n    }   \r\n    \r\n    onOk(ev) {\r\n        this.remove();\r\n        \r\n        const tilesets = this._element.find(\"input\");\r\n        const data = {\r\n            tilesets: {\r\n                name: $(tilesets[0]).val(),\r\n                src: $(tilesets[1]).val(),\r\n            },\r\n            tile: {\r\n                width: parseInt($(tilesets[2]).val()),\r\n                height: parseInt($(tilesets[3]).val()),\r\n            }\r\n        }\r\n        \r\n        $('form[name=\"uploadTilesetImage\"]').on(\"submit\", function(e) {\r\n            e.preventDefault();\r\n\r\n            $.ajax({\r\n                type: 'POST',\r\n                cache:false,\r\n                contentType: false,\r\n                processData: false,\r\n                url: $(this).attr('action'),\r\n                data: new FormData(this),\r\n                success: function(msg) {\r\n                    console.log(msg);\r\n                },\r\n                error: function(data){\r\n                    console.log(\"error\");\r\n                    console.log(data);\r\n                }                \r\n            });\r\n        });    \r\n    }\r\n\r\n    onCancel(ev) {\r\n        ev.preventDefault();\r\n        this.remove();\r\n    }\r\n\r\n}","import App from \"./App.js\";\r\nimport {EventEmitter} from \"./EventEmitter.js\";\r\nimport BaseController from \"./controllers/BaseController.js\";\r\n\r\nimport GamePropertiesWindowController from \"./controllers/GamePropertiesWindowController.js\";\r\nimport GamePropertiesWindow from \"./models/GamePropertiesWindow.js\";\r\nimport TilesetWindowController from \"./controllers/TilesetWindowController.js\";\r\nimport { TilesetWindowModel } from \"./models/TilesetWindow.js\";\r\n\r\nimport {toCamelCase, getClassName} from \"./camelCase.js\";\r\n\r\nclass WindowCreator extends EventEmitter {\r\n\r\n    /**\r\n     * @param {App} app \r\n     */\r\n    constructor() {\r\n        super();\r\n\r\n        this._app = App.GetInstance();\r\n\r\n        this.cache = {};\r\n    }\r\n\r\n    /**\r\n     * This method is called when clicking the file menu.\r\n     */\r\n    onFileNew() {\r\n\r\n        this._gamePropertiesWindow = new GamePropertiesWindowController(new GamePropertiesWindow());\r\n\r\n        this._gamePropertiesWindow.render()\r\n            .then(ret => {\r\n                const id = \"new-window\";\r\n                this.cache[id] = this._gamePropertiesWindow;\r\n\r\n                this._gamePropertiesWindow.setUniqueId(id);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            });        \r\n    }\r\n\r\n    /**\r\n     * Open the tools option window.\r\n     * This window allows you to add a new tile image on the tileset canvas window of this map editor.\r\n     */\r\n    onToolsOptions() {\r\n        this._tilesetWindow = new TilesetWindowController(new TilesetWindowModel());\r\n\r\n        this._tilesetWindow.render()\r\n            .then(ret => {\r\n                const id = \"tileset\";\r\n                this.cache[id] = this._tilesetWindow;\r\n                \r\n                this._tilesetWindow.setUniqueId(id);\r\n            })\r\n            .catch(err => {\r\n                console.warn(err);\r\n            })\r\n    }    \r\n\r\n    /**\r\n     * This method removes all cache window for some times.\r\n     */\r\n    update() {\r\n        for(let i in this.cache) {\r\n            if(this.cache[i] instanceof BaseController) {\r\n                this.cache[i].remove();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a certain window.\r\n     * @param {MouseEvent}\r\n     */\r\n    static GrapWindow(ev) {\r\n        const target = $(ev.currentTarget);\r\n        if( !target ) {\r\n            return;\r\n        }\r\n\r\n        const id = target.data(\"action\");\r\n        const creator = WindowCreator.GetInstance();\r\n        const type = getClassName(id);\r\n        const methodName = \"on\" + type;\r\n        const cb = creator[methodName].bind(creator);\r\n\r\n        if(typeof(cb) === \"function\") {\r\n            cb();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a specific window as type. \r\n     * the type name is the same as data-action property.\r\n     * @param {String} id \r\n     */\r\n    static GrapWindowAsType(id) {\r\n        const creator = WindowCreator.GetInstance();\r\n        const type = getClassName(id);\r\n        const methodName = \"on\" + type;\r\n        const cb = creator[methodName].bind(creator);\r\n\r\n        if(typeof(cb) === \"function\") {\r\n            cb();\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Load a window from the cache data.\r\n     * \r\n     * @param {HTMLElement} elem \r\n     * @param {Number} id \r\n     */\r\n    static onLoad(elem, id) {\r\n        const creator = this.GetInstance();\r\n\r\n        if(creator.cache[id]) {\r\n            const self = creator.cache[id];\r\n            creator.cache[id].onLoad(elem, self);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Gets a single instance.\r\n     * \r\n     * @return {WindowCreator}\r\n     */\r\n    static GetInstance() {\r\n        if(!WindowCreator.Instance) {\r\n            WindowCreator.Instance = new WindowCreator();\r\n        }\r\n\r\n        return WindowCreator.Instance;\r\n    }\r\n\r\n}\r\n\r\nWindowCreator.Instance = null;\r\n\r\nexport {WindowCreator};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst FileMenu = {\r\n    name: \"파일\",\r\n    children: {\r\n        \"file-new\": {\r\n            name: \"새로 만들기\",\r\n            children: {},\r\n            shortcut: [\"ctrl\", \"n\"],\r\n            action: function(ev) {\r\n                WindowCreator.GrapWindow(ev);\r\n            }                    \r\n        },\r\n        \"file-open\": {\r\n            name: \"파일 열기\",\r\n            shortcut: [\"ctrl\", \"o\"],\r\n            children: {}, \r\n        },\r\n        \"file-close\": {\r\n            name: \"파일 닫기\",\r\n            children: {}, \r\n        },\r\n        \"file-save\": {\r\n            name: \"파일 저장\",\r\n            children: {}, \r\n        },\r\n        \"file-preferences\": {\r\n            name: \"환경 설정\",\r\n            children: {}, \r\n        },\r\n        \"file-export\": {\r\n            name: \"내보내기\",\r\n            children: {}, \r\n        },\r\n        \"file-exit\": {\r\n            name: \"프로그램 종료\",\r\n            children: {}, \r\n        },\r\n    },\r\n};\r\n\r\nexport {FileMenu};","import {Component} from \"./Component.js\";\r\nimport {MenuComponent} from \"./MenuComponent.js\";\r\nimport App from \"./App.js\";\r\nimport GamePropertiesWindowController from \"./controllers/GamePropertiesWindowController.js\";\r\nimport GamePropertiesWindow from \"./models/GamePropertiesWindow.js\";\r\nimport { WindowCreator } from \"./WindowCreator.js\";\r\nimport {KoreanMenu} from \"./menu/KoreanMenu.js\";\r\n\r\nconst menu = {\r\n    \"ko\": KoreanMenu,\r\n};\r\n\r\nexport default class MenuService extends Component {\r\n\r\n    initMembers(...args) {\r\n\r\n        /**\r\n         * @type {MenuComponent}\r\n         */\r\n        this._menuComponent = args[1];\r\n        this._isClickedMenu = false;        \r\n    }\r\n\r\n    start(...args) {\r\n\r\n        this.changeMenuLocaleAsPersonalize();\r\n        this.changeToolbarIconOnMobileDevice();\r\n        this.addMenuEventHandlers();\r\n    }    \r\n\r\n    changeMenuLocaleAsPersonalize() {\r\n        const langCode = navigator.language.slice(0, 2);\r\n        $(\".menu__main label\").each((index, elem) => {\r\n            const parent = $(elem);\r\n            const type = parent.data(\"action\");\r\n            const res = menu[langCode];\r\n            if(res) {\r\n                const data = res[type];\r\n                const name = data.name;\r\n                const font = res[\"$font\"];\r\n                parent.text(name);\r\n                parent.css(\"font-size\", font.size);\r\n\r\n                $(`.menu__${type}-sub li`)\r\n                    .each((_index, _elem) => {\r\n                        const _node = $(_elem);\r\n                        \r\n                        // 서브 메뉴의 위치를 세밀하게 조정합니다.\r\n                        const menuNode = parent.parent();\r\n                        _node.parent().css(\"left\", menuNode.get(0).getBoundingClientRect().x + \"px\");\r\n\r\n                        const _type = _node.data(\"action\");\r\n                        const _res = data.children[_type];\r\n                        if(_res) {\r\n\r\n                            // 메뉴 노드에 메뉴 액션을 등록합니다.\r\n                            if(_res.action) {\r\n                                _node.get(0).onclick = _res.action;\r\n                            }\r\n\r\n                            const _name = _res.name;\r\n                            _node.get(0).childNodes.forEach(i => {\r\n                                // 텍스트 노드만 찾습니다.\r\n                                if(i.nodeType == 3) {\r\n                                    i.textContent = _name;\r\n                                }\r\n                            });\r\n                            _node.css(\"font-size\", font.size);\r\n                        }\r\n                    })                \r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    addMenuEventHandlers() {\r\n\r\n        // 창 최소화\r\n        $(\".menu .control-box li.minimum\").on(\"click\", ev => {\r\n            const { ipcRenderer } = require('electron') ;\r\n            ipcRenderer.send('minimize');\r\n            ev.stopImmediatePropagation();\r\n        });   \r\n\r\n        // 창 최대화\r\n        $(\".menu .control-box li.maximum\").on(\"click\", ev => {\r\n            const { ipcRenderer } = require('electron') ;\r\n            ipcRenderer.send('maximize');\r\n            ev.stopImmediatePropagation();\r\n        });              \r\n\r\n        // 창 닫기\r\n        $(\".menu .control-box li.close\").on(\"click\", ev => {\r\n            window.close();\r\n            ev.stopImmediatePropagation();\r\n        });    \r\n        \r\n        // const main = document.querySelector(\".menu__main\");\r\n        // const children = Array.from(main.children).pop();\r\n\r\n        // const rect = children.getBoundingClientRect();\r\n        // const w = rect.x + rect.width;\r\n\r\n        // const paretWidth = $(\".menu__main\").width();\r\n        // const dragZoneWidth = $(\".menu.drag-zon\").width(w);\r\n        // const controlBoxWidth = $(\".menu__main .control-box\").width();\r\n        // const nodeWidth = (paretWidth - w - controlBoxWidth);\r\n\r\n        // $(\".menu.drag-zon\").width(nodeWidth);        \r\n    }\r\n\r\n    changeToolbarIconOnMobileDevice() {\r\n        const media = window.matchMedia(\"(max-width: 640px)\");\r\n        if(media.matches) {\r\n            $(\".toolbar i\").each((index, elem) => {\r\n                $(elem)\r\n                    .addClass(\"fa-3x\")\r\n                    .css({\r\n                        \"width\": \"98%\",\r\n                        \"height\": \"98%\",\r\n                        \"font-size\": \"1.25em\"\r\n                    })\r\n            })\r\n        }\r\n\r\n        const resizeConfig = {\r\n            \".contents\": {\r\n                \"width\": \"65%\",\r\n            },\r\n            \".aside__tabs\": {\r\n                \"width\": \"30%\",\r\n            },\r\n            \"#contents__main-canvas\": {\r\n                \"width\": \"100%\",\r\n            }\r\n        }\r\n\r\n        $(window).on(\"resize\", () => {\r\n\r\n            if($(window).width() <= 640) {\r\n                for(let i in resizeConfig) {\r\n                    $(i).css(resizeConfig[i]);\r\n                }\r\n\r\n                $(\".toolbar i\").each((index, elem) => {\r\n                    $(elem)\r\n                        .removeClass(\"fa-3x\")                    \r\n                        .addClass(\"fa-3x\")\r\n                        .css({\r\n                            \"width\": \"98%\",\r\n                            \"height\": \"98%\",\r\n                            \"font-size\": \"1.25em\"\r\n                        })\r\n                })                \r\n            } else {\r\n                $(\".toolbar i\").each((index, elem) => {\r\n                    $(elem)\r\n                        .removeClass(\"fa-3x\") \r\n                        .addClass(\"fa-sm\")                   \r\n                        .css({\r\n                            \"width\": \"98%\",\r\n                            \"height\": \"98%\",\r\n                            \"font-size\": \"0.875em\"\r\n                        })\r\n                })  \r\n            }\r\n        })\r\n\r\n    }\r\n}","import { FileMenu } from \"./FileMenu.js\";\r\nimport { EditMenu } from \"./EditMenu.js\";\r\nimport { ModeMenu } from \"./ModeMenu.js\";\r\nimport { DrawMenu } from \"./DrawMenu.js\";\r\nimport { ScaleMenu } from \"./ScaleMenu.js\";\r\nimport { ToolMenu } from \"./ToolMenu.js\";\r\nimport { GameMenu } from \"./GameMenu.js\";\r\nimport { HelpMenu } from \"./HelpMenu.js\";\r\n\r\nconst KoreanMenu = {\r\n    file: FileMenu,\r\n    edit: EditMenu,\r\n    mode: ModeMenu,\r\n    draw: DrawMenu,\r\n    scale: ScaleMenu,\r\n    tools: ToolMenu,\r\n    game: GameMenu,\r\n    help: HelpMenu,\r\n    \"$font\": {\r\n        size: \"8pt\",\r\n    }\r\n};\r\n\r\nexport {KoreanMenu};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst EditMenu = {\r\n    name: \"편집\",\r\n    children: {\r\n        \"edit-undo\": {\r\n            name: \"취소\",\r\n            children: {},\r\n        },\r\n        \"edit-cut\": {\r\n            name: \"자르기\",\r\n            children: {}, \r\n        },\r\n        \"edit-copy\": {\r\n            name: \"복사하기\",\r\n            children: {}, \r\n        },\r\n        \"edit-paste\": {\r\n            name: \"붙여넣기\",\r\n            children: {}, \r\n        },\r\n        \"edit-delete\": {\r\n            name: \"삭제하기\",\r\n            children: {}, \r\n        },\r\n    },\r\n};\r\n\r\nexport {EditMenu};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst ModeMenu = {\r\n    name: \"모드\",\r\n    children: {\r\n        \"mode-map\": {\r\n            name: \"맵\",\r\n            children: {},                    \r\n        },\r\n        \"mode-event\": {\r\n            name: \"이벤트\",\r\n            children: {}, \r\n        },\r\n        \"mode-region\": {\r\n            name: \"지역\",\r\n            children: {}, \r\n        },\r\n    },\r\n};\r\n\r\nexport {ModeMenu};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst DrawMenu = {\r\n    name: \"그리기\",\r\n    children: {\r\n        \"draw-pencil\": {\r\n            name: \"펜\",\r\n            children: {},\r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"draw-rectangle\": {\r\n            name: \"정사각형\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"draw-ellipse\": {\r\n            name: \"직사각형\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"draw-flood-fill\": {\r\n            name: \"채우기\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"draw-shadow pen\": {\r\n            name: \"그림자\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n    },\r\n}\r\n\r\nexport {DrawMenu};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst ScaleMenu = {\r\n    name: \"배율\",\r\n    children: {\r\n        \"scale-1x\": {\r\n            name: \"실제 비율\",\r\n            children: {},\r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"scale-2x\": {\r\n            name: \"2배 축소\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"scale-4x\": {\r\n            name: \"4배 축소\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"scale-8x\": {\r\n            name: \"8배 축소\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n    },\r\n};\r\n\r\nexport {ScaleMenu};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst ToolMenu = {\r\n    name: \"도구\",\r\n    children: {\r\n        \"tools-database\": {\r\n            name: \"데이터베이스\",\r\n            children: {},\r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"tools-resource-manager\": {\r\n            name: \"소재 관리자\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                            \r\n        },\r\n        \"tools-script-eidtor\": {\r\n            name: \"스크립트 에디터\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                      \r\n        },\r\n        \"tools-sound-test\": {\r\n            name: \"사운드 테스트\",\r\n            children: {}, \r\n        },\r\n        \"tools-options\": {\r\n            name: \"옵션\",\r\n            children: {}, \r\n            action: function(ev) {\r\n                WindowCreator.GrapWindow(ev);\r\n            }\r\n        },\r\n    },\r\n};\r\n\r\nexport {ToolMenu};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst GameMenu = {\r\n    name: \"게임\",\r\n    children: {\r\n        \"game-playtest\": {\r\n            name: \"플레이 테스트\",\r\n            children: {},\r\n            action: (ev) => {\r\n                alert(\"플레이 테스트 기능을 지원하지 않습니다.\");\r\n            },                      \r\n        },\r\n        \"game-fullscreen\": {\r\n            name: \"전체 화면\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                     \r\n        },\r\n        \"game-show-console\": {\r\n            name: \"콘솔 표시\",\r\n            children: {}, \r\n            action: (ev) => {\r\n            },                       \r\n        },\r\n        \"game-folder-open\": {\r\n            name: \"게임 폴더 열기\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                const cp = require('child_process');\r\n                const cwd = process.cwd();\r\n                cp.execSync(`start ${cwd}`, {\r\n                    encoding: \"utf8\"\r\n                });\r\n            },                      \r\n        },\r\n    },\r\n};\r\n\r\nexport {GameMenu};","import { WindowCreator } from \"../WindowCreator.js\";\r\n\r\nconst HelpMenu = {\r\n    name: \"도움말\",\r\n    children: {\r\n        \"help-contents\": {\r\n            name: \"도움말\",\r\n            children: {},\r\n            action: (ev) => {\r\n                alert(\"도움말이 아직 없습니다.\");\r\n            },\r\n        },\r\n        \"help-about\": {\r\n            name: \"버전 정보\",\r\n            children: {}, \r\n            action: (ev) => {\r\n                \r\n            },                    \r\n        },\r\n    },\r\n};\r\n\r\nexport {HelpMenu};","\r\nimport {EventEmitter} from \"./EventEmitter.js\";\r\nimport { Component } from \"./Component.js\";\r\nimport {MenuComponent} from \"./MenuComponent.js\";\r\nimport {TilesetMarker} from \"./tilesetMarker.js\";\r\nimport Tilemap from \"./Tilemap.js\";\r\nimport {toCamelCase} from \"./camelCase.js\"\r\nimport TilesetCanvas from \"./TilesetCanvas.js\";\r\nimport TileMarker from \"./TileMarker.js\";\r\nimport {config} from \"./config.js\";\r\nimport MenuService from \"./MenuService.js\";\r\nimport Rectangle from \"./Rectangle.js\";\r\nimport { WindowCreator } from \"./WindowCreator.js\";\r\nimport {Toolbar, ToolbarManager} from \"./toolbar/Toolbar\";\r\n\r\nexport default class App extends EventEmitter {\r\n\r\n    /**\r\n     * 멤버 변수를 초기화합니다.\r\n     */\r\n    initMembers() {\r\n        this.cache = {};\r\n        this._config = config;\r\n        this._mouse = {\r\n            x: 0,\r\n            y: 0, \r\n            screenX : 0,\r\n            screenY : 0,\r\n            buttons: {\r\n                left: false,\r\n                leftFire: false,\r\n            },\r\n            /**\r\n             * @type {HTMLElement}\r\n             */            \r\n            target: null,\r\n            /**\r\n             * @type {HTMLElement}\r\n             */                        \r\n            menuTarget: null,\r\n        };\r\n\r\n        /**\r\n         * 사각형 툴을 위한 선택 영역\r\n         * @link http://jsfiddle.net/qGzkG/2/\r\n         */\r\n        this._blockRect = {\r\n            isDrawing: false,\r\n            rect: new Rectangle(0, 0, 1, 1),\r\n        };\r\n        this._now = performance.now();\r\n        this._isMenuOpen = false;\r\n        this._tileId = 0;\r\n        this._isReady = false;\r\n\r\n        // 타이틀을 변경합니다.\r\n        document.title = \"Initial Map Editor\";\r\n\r\n        this.emit(\"ready\", JSON.stringify(this));\r\n    }\r\n\r\n    /**\r\n     * Creates all components.\r\n     */\r\n    createComponents() {\r\n        this._components.push(this._tilesetMarker = new TilesetMarker(this._config));                    \r\n        this._components.push(this._tilemap = new Tilemap(this._config));    \r\n        this._components.push(this._tileMarker = new TileMarker(this._config));    \r\n        this._components.forEach(component => {\r\n            component.start();\r\n        });            \r\n        this._tilemap.setTileId(0);\r\n    }\r\n\r\n    /**\r\n     * 컴포넌트를 초기화합니다.\r\n     */\r\n    async initWithComponents() {\r\n        /**\r\n         * @type {Component[]}\r\n         */\r\n        this._components = [];\r\n        this._components.push(this._menu = new MenuComponent(this._config));\r\n        this._components.push(this._menuController = new MenuService(this._config, this._menu));\r\n\r\n        this._tilesetCanvas = new TilesetCanvas(this._config);\r\n        await this._tilesetCanvas.start().then(ret => {\r\n            this.createComponents();\r\n        }).then(ret => {\r\n            $(\".darken, .windows-container\").css(\"left\", \"-9999px\");\r\n        }).catch(err => {\r\n            console.warn(err);\r\n        });\r\n    }\r\n\r\n    toCamelCase() {\r\n        return toCamelCase();\r\n    }\r\n\r\n    isMobileDevice() {\r\n        const ret = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n        return ret;\r\n    }\r\n\r\n    onMouseTouchMove(ev) {\r\n        this._mouse.x = ev.layerX;\r\n        this._mouse.y = ev.layerY;\r\n        this._mouse.screenX = ev.layerX;\r\n        this._mouse.screenY = ev.layerY;\r\n    }\r\n\r\n    /**\r\n     * 마우스 이벤트 및 터치 이벤트를 초기화합니다.\r\n     */\r\n    initWithMouseEvent() {\r\n\r\n        const isMobileDevice = this.isMobileDevice();\r\n        let events;\r\n\r\n        if(isMobileDevice) {\r\n            events = {\r\n                \"touchmove\": (ev) => {        \r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }                          \r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;\r\n                },\r\n                \"touchstart pointerdown\": (ev) => {\r\n                    let touchEvent = ev;\r\n                    if(ev.type.indexOf(\"touch\") >= 0) {\r\n                        touchEvent = ev.touches[0];\r\n                    }\r\n                    \r\n                    this._mouse.target = ev.target; \r\n\r\n                    /**\r\n                     * @type {HTMLElement}\r\n                     */\r\n                    const target = this._mouse.target;\r\n                    const rect = this._mouse.target.getBoundingClientRect();\r\n\r\n                    this._mouse.x = touchEvent.clientX - rect.x;\r\n                    this._mouse.y = touchEvent.clientY - rect.y;\r\n                    this._mouse.screenX = touchEvent.screenX;\r\n                    this._mouse.screenY = touchEvent.screenY;           \r\n                    this._mouse.buttons.left = true;\r\n                    this._mouse.buttons.leftFire = false;                  \r\n                },\r\n                \"touchend pointerup mouseup\": (ev) => {\r\n                    this._mouse.buttons.left = false;\r\n                    this._mouse.buttons.leftFire = true; \r\n                }\r\n            };\r\n\r\n            $(window).on(events);\r\n\r\n        } else {\r\n            events = {\r\n                \"mousemove\": (ev) => {\r\n                    this._mouse.x = ev.layerX;\r\n                    this._mouse.y = ev.layerY;\r\n                    this._mouse.screenX = ev.layerX;\r\n                    this._mouse.screenY = ev.layerY;\r\n                },\r\n                \"mousedown\": (ev) => {\r\n                    if(ev.button == 0) {                 \r\n                        this._mouse.buttons.left = true;\r\n                        this._mouse.buttons.leftFire = false;\r\n                        this._mouse.target = ev.target;\r\n                    }\r\n                },\r\n                \"mouseup\": (ev) => {\r\n                    if(ev.button == 0) {\r\n                        this._mouse.buttons.left = false;\r\n                        this._mouse.buttons.leftFire = true;\r\n\r\n                        this._blockRect.isDrawing = false;\r\n                    }\r\n                },\r\n                \"mouseover\": (ev) => {\r\n                    if(this._menu._isMenuOpen) {\r\n                        this._mouse.buttons.menuTarget = ev.target;\r\n                        this._menu.emit(\"menu_open\", this._mouse.buttons.menuTarget);\r\n                    }\r\n                }\r\n            }         \r\n            \r\n            for(let k in events) {\r\n                window.addEventListener(k, events[k], false);\r\n            }                 \r\n        }\r\n  \r\n    }\r\n\r\n    setTileId(tileId) {\r\n        if(!this._tilemap) return;\r\n        this._tilemap.setTileId(tileId);\r\n    }\r\n\r\n    /**\r\n     * 레이어를 토글하는 기능을 수행합니다.\r\n     */\r\n    initWithMapLayers() {\r\n        const children = $(\"ul.aside__tabs__maptree-child-tree li i\").children();\r\n        let target = null;\r\n\r\n        // 레이어 항목에서 눈 아이콘을 추가합니다.\r\n        children.each((index, elem) => {\r\n            const e = e.get(0);\r\n            elem.click(() => {\r\n                e.className = e.className.includes(\"slash\") ? \"far fa-eye\":\"far fa-eye-slash\";\r\n            });\r\n        });\r\n\r\n        // 레이어 항목에서 눈 아이콘을 누르면 눈을 감고 있는 아이콘(슬래쉬가 쳐진 아이콘)으로 토글합니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li i\").on(\"click\", (ev) => {\r\n            const target = $(ev.currentTarget);\r\n            const parentNode = $(ev.currentTarget).parent();\r\n            const layerId = parentNode.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            if(target.hasClass(\"fa-eye\")) {\r\n                target.removeClass(\"fa-eye\")\r\n                    .addClass(\"fa-eye-slash\");\r\n            } else {\r\n                target.removeClass(\"fa-eye-slash\")\r\n                    .addClass(\"fa-eye\");                \r\n            }\r\n\r\n            tilemap.toggleLayerVisibility(layerId);\r\n        });\r\n\r\n        // 눈 아이콘을 선택했을 때 선택 영역을 강조하며 선택되지 않은 영역은 강조하지 않습니다.\r\n        $(\"ul.aside__tabs__maptree-child-tree li\").on(\"click\", (ev) => {\r\n            const elem = $(ev.currentTarget).css({\r\n                \"backgroundColor\": \"var(--dark-selection-color)\"\r\n            });\r\n            $(\"ul.aside__tabs__maptree-child-tree li\").not(elem).css({\r\n                \"backgroundColor\": \"rgba(255, 255, 255, 0)\"\r\n            });\r\n\r\n            const layerId = elem.index();\r\n            const tilemap = this._tilemap;\r\n\r\n            // 타일맵을 지우고 다시 그립니다.\r\n            tilemap.setCurrentLayerId(layerId);\r\n            tilemap.clear();\r\n            tilemap.draw();\r\n            tilemap.updateAlphaLayers();\r\n        });\r\n\r\n        $(\"ul.aside__tabs__maptree-child-tree li:first-child\").trigger(\"click\");\r\n    }\r\n\r\n    start() {\r\n        this.initMembers();\r\n        this.initWithMouseEvent();\r\n\r\n        // 모든 컴포넌트가 초기화된 이후 시점에 특정 작업을 수행합니다.\r\n        this.initWithComponents()\r\n            .then(ret => {\r\n                this.initWithMapLayers();     \r\n                this._isReady = true;       \r\n\r\n                this.on(\"update\", (deltaTime) => {\r\n                    this.update(deltaTime);\r\n                });\r\n                \r\n            }).catch(err => {\r\n                console.warn(err);\r\n                this._isReady = false;\r\n            })\r\n    }\r\n\r\n    /**\r\n     * 매 프레임마다 반복 실행되는 메소드입니다.\r\n     * @param {Number}} deltaTime \r\n     */\r\n    update(deltaTime) {\r\n\r\n        if(!this._isReady) return;\r\n\r\n        // 400ms가 지났을 때 마다 무언가를 실행합니다.\r\n        if(deltaTime - this._now >= 400) {\r\n            this._now = deltaTime;\r\n        }\r\n\r\n        this.updateComponents();\r\n\r\n        this._mouse.buttons.leftFire = false;\r\n    }\r\n\r\n    updateComponents() {        \r\n        const target = this._mouse.target;\r\n\r\n        if(!target) {\r\n            return;\r\n        }\r\n        \r\n        const id = target.id;\r\n        const mouse = this._mouse;\r\n\r\n        this._menu.update(target, mouse);\r\n\r\n        if(!this._menu.isMenuOpen()) {\r\n            switch(id) {\r\n                case \"tileset-canvas\":\r\n                case \"view\":\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tilesetMarker.update(mouse);\r\n                    }\r\n                    break;\r\n                case \"contents__main-canvas\":\r\n                    if(this._mouse.buttons.left) {\r\n                        this._tilemap.update(mouse);                                        \r\n                    }\r\n                    if(this._mouse.buttons.leftFire) {\r\n                        this._tileMarker.update(mouse);    \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} elem \r\n     * @param {Number} id \r\n     */\r\n    onLoad(elem, id) {\r\n        WindowCreator.onLoad(elem, id);\r\n    }\r\n\r\n    /**\r\n     * @return {App}\r\n     */\r\n    static GetInstance() {\r\n        if(!App.Instance) {\r\n            App.Instance = new App();\r\n        }\r\n        \r\n        return App.Instance;\r\n    }\r\n}\r\n\r\nApp.Instance = null;","import App from \"./App.js\";\r\n\r\n//==========================================================\r\n// Main\r\n//==========================================================\r\nclass Main {\r\n    static start() {\r\n        $(async () => {\r\n            \r\n            window.app = App.GetInstance();\r\n            window.app.start();\r\n            this.update();\r\n        });\r\n    }\r\n\r\n    static update(deltaTime) {\r\n        window.app.emit(\"update\", deltaTime);\r\n        window.requestAnimationFrame(Main.update);\r\n    }    \r\n}\r\n\r\nMain.start();"],"sourceRoot":""}